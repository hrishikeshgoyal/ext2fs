cscope 15 $HOME/netbsd/src/sys/ufs/ext2fs               0000230298
	@ext2fs.h

62 #i‚de‡
_UFS_EXT2FS_EXT2FS_H_


63 
	#_UFS_EXT2FS_EXT2FS_H_


	)

65 
	~<sys/bsw≠.h
>

82 
	#BBSIZE
 1024

	)

83 
	#SBSIZE
 1024

	)

84 
	#BBOFF
 ((
off_t
)(0))

	)

85 
	#SBOFF
 ((
off_t
)(
BBOFF
 + 
BBSIZE
))

	)

86 
	#BBLOCK
 ((
daddr_t
)(0))

	)

87 
	#SBLOCK
 ((
daddr_t
)(
BBLOCK
 + 
BBSIZE
 / 
DEV_BSIZE
))

	)

89 
	#fsbtodb
(
fs
, 
b
Ë((
daddr_t
)(bË<< (fs)->
e2fs_fsbtodb
)

	)

91 
	#lblkno
(
fs
, 
loc
Ë(÷ocË>> (fs->
e2fs_bshi·
))

	)

92 
	#blksize
(
fs
, 
ù
, 
lbn
Ë((fs)->
e2fs_bsize
)

	)

106 
	#LOG_MINBSIZE
 10

	)

107 
	#MINBSIZE
 (1 << 
LOG_MINBSIZE
)

	)

114 
	#MAXMNTLEN
 512

	)

128 
	#MINFREE
 5

	)

133 
	sext2fs
 {

134 
uöt32_t
 
	me2fs_icou¡
;

135 
uöt32_t
 
	me2fs_bcou¡
;

136 
uöt32_t
 
	me2fs_rbcou¡
;

137 
uöt32_t
 
	me2fs_fbcou¡
;

138 
uöt32_t
 
	me2fs_ficou¡
;

139 
uöt32_t
 
	me2fs_fú°_dblock
;

140 
uöt32_t
 
	me2fs_log_bsize
;

141 
uöt32_t
 
	me2fs_fsize
;

142 
uöt32_t
 
	me2fs_bpg
;

143 
uöt32_t
 
	me2fs_Âg
;

144 
uöt32_t
 
	me2fs_ùg
;

145 
uöt32_t
 
	me2fs_mtime
;

146 
uöt32_t
 
	me2fs_wtime
;

147 
uöt16_t
 
	me2fs_m¡_cou¡
;

148 
uöt16_t
 
	me2fs_max_m¡_cou¡
;

149 
uöt16_t
 
	me2fs_magic
;

150 
uöt16_t
 
	me2fs_°©e
;

151 
uöt16_t
 
	me2fs_beh
;

152 
uöt16_t
 
	me2fs_möªv
;

153 
uöt32_t
 
	me2fs_œ°fsck
;

154 
uöt32_t
 
	me2fs_fsckötv
;

155 
uöt32_t
 
	me2fs_¸ót‹
;

156 
uöt32_t
 
	me2fs_ªv
;

157 
uöt16_t
 
	me2fs_ruid
;

158 
uöt16_t
 
	me2fs_rgid
;

160 
uöt32_t
 
	me2fs_fú°_öo
;

161 
uöt16_t
 
	me2fs_öode_size
;

162 
uöt16_t
 
	me2fs_block_group_ƒ
;

163 
uöt32_t
 
	me2fs_„©uªs_com∑t
;

164 
uöt32_t
 
	me2fs_„©uªs_öcom∑t
;

165 
uöt32_t
 
	me2fs_„©uªs_rocom∑t
;

166 
uöt8_t
 
	me2fs_uuid
[16];

167 
	me2fs_v«me
[16];

168 
	me2fs_fsm¡
[64];

169 
uöt32_t
 
	me2fs_Ægo
;

170 
uöt8_t
 
	me2fs_¥óŒoc
;

171 
uöt8_t
 
	me2fs_dú_¥óŒoc
;

172 
uöt16_t
 
	me2fs_ª£rved_ngdb
;

175 
	me3fs_jou∫Æ_uuid
[16];

176 
uöt32_t
 
	me3fs_jou∫Æ_öum
;

177 
uöt32_t
 
	me3fs_jou∫Æ_dev
;

178 
uöt32_t
 
	me3fs_œ°_‹ph™
;

179 
uöt32_t
 
	me3fs_hash_£ed
[4];

180 
	me3fs_def_hash_vîsi⁄
;

181 
	me3fs_j∆_backup_ty≥
;

182 
uöt16_t
 
	me3fs_desc_size
;

183 
uöt32_t
 
	me3fs_deÁu…_mou¡_›ts
;

184 
uöt32_t
 
	me3fs_fú°_mëa_bg
;

185 
uöt32_t
 
	me3fs_mkfs_time
;

186 
uöt32_t
 
	me3fs_j∆_blks
[17];

187 
uöt32_t
 
	me4fs_bcou¡_hi
;

188 
uöt32_t
 
	me4fs_rbcou¡_hi
;

189 
uöt32_t
 
	me4fs_fbcou¡_hi
;

190 
uöt16_t
 
	me4fs_mö_exåa_isize
;

191 
uöt16_t
 
	me4fs_w™t_exåa_isize
;

192 
uöt32_t
 
	me4fs_Êags
;

193 
uöt16_t
 
	me4fs_øid_°ride
;

194 
uöt16_t
 
	me4fs_mmpötv
;

195 
uöt64_t
 
	me4fs_mmpblk
;

196 
uöt32_t
 
	me4fs_øid_°rùe_wid
;

197 
uöt8_t
 
	me4fs_log_gpf
;

198 
uöt8_t
 
	me4fs_chksum_ty≥
;

199 
uöt8_t
 
	me4fs_í¸y±
;

200 
uöt8_t
 
	me4fs_ª£rved_∑d
;

201 
uöt64_t
 
	me4fs_kbyãs_wrôãn
;

202 
uöt32_t
 
	me4fs_¢≠öum
;

203 
uöt32_t
 
	me4fs_¢≠id
;

204 
uöt64_t
 
	me4fs_¢≠rbcou¡
;

205 
uöt32_t
 
	me4fs_¢≠li°
;

206 
uöt32_t
 
	me4fs_îrcou¡
;

207 
uöt32_t
 
	me4fs_fú°_îπime
;

208 
uöt32_t
 
	me4fs_fú°_îröo
;

209 
uöt64_t
 
	me4fs_fú°_îrblk
;

210 
uöt8_t
 
	me4fs_fú°_îrfunc
[32];

211 
uöt32_t
 
	me4fs_fú°_îæöe
;

212 
uöt32_t
 
	me4fs_œ°_îπime
;

213 
uöt32_t
 
	me4fs_œ°_îröo
;

214 
uöt32_t
 
	me4fs_œ°_îæöe
;

215 
uöt64_t
 
	me4fs_œ°_îrblk
;

216 
uöt8_t
 
	me4fs_œ°_îrfunc
[32];

217 
uöt8_t
 
	me4fs_mou¡_›ts
[64];

218 
uöt32_t
 
	me4fs_u§quŸa_öum
;

219 
uöt32_t
 
	me4fs_gΩquŸa_öum
;

220 
uöt32_t
 
	me4fs_ovîhód_˛u°îs
;

221 
uöt32_t
 
	me4fs_backup_bgs
[2];

222 
uöt8_t
 
	me4fs_í¸y±_Ægos
[4];

223 
uöt8_t
 
	me4fs_í¸y±_pw_ß…
[16];

224 
uöt32_t
 
	me4fs_Õf_öo
;

225 
uöt32_t
 
	me4fs_¥oj_quŸa_öum
;

226 
uöt32_t
 
	me4fs_chksum_£ed
;

227 
uöt32_t
 
	me4fs_ª£rved
[98];

228 
uöt32_t
 
	me4fs_sbchksum
;

233 
	sm_ext2fs
 {

234 
ext2fs
 
	me2fs
;

235 
u_ch¨
 
	me2fs_fsm¡
[
MAXMNTLEN
];

236 
öt8_t
 
	me2fs_r⁄ly
;

237 
öt8_t
 
	me2fs_fmod
;

238 
öt8_t
 
	me2fs_uhash
;

239 
öt32_t
 
	me2fs_bsize
;

240 
öt32_t
 
	me2fs_bshi·
;

241 
öt32_t
 
	me2fs_bmask
;

242 
öt64_t
 
	me2fs_qbmask
;

243 
öt32_t
 
	me2fs_fsbtodb
;

244 
öt32_t
 
	me2fs_ncg
;

245 
öt32_t
 
	me2fs_ngdb
;

246 
öt32_t
 
	me2fs_ùb
;

247 
öt32_t
 
	me2fs_ôpg
;

248 
ext2_gd
 *
	me2fs_gd
;

256 
	#E2FS_MAGIC
 0xef53

	)

257 
	#E2FS_REV0
 0

	)

258 
	#E2FS_REV1
 1

	)

261 
	#EXT2F_COMPAT_PREALLOC
 0x0001

	)

262 
	#EXT2F_COMPAT_AFS
 0x0002

	)

263 
	#EXT2F_COMPAT_HASJOURNAL
 0x0004

	)

264 
	#EXT2F_COMPAT_EXTATTR
 0x0008

	)

265 
	#EXT2F_COMPAT_RESIZE
 0x0010

	)

266 
	#EXT2F_COMPAT_DIRHASHINDEX
 0x0020

	)

267 
	#EXT2F_COMPAT_BITS
 \

274 "\01COMPAT_PREALLOC"

	)

276 
	#EXT2F_ROCOMPAT_SPARSESUPER
 0x0001

	)

277 
	#EXT2F_ROCOMPAT_LARGEFILE
 0x0002

	)

278 
	#EXT2F_ROCOMPAT_BTREE_DIR
 0x0004

	)

279 
	#EXT2F_ROCOMPAT_HUGE_FILE
 0x0008

	)

280 
	#EXT2F_ROCOMPAT_GDT_CSUM
 0x0010

	)

281 
	#EXT2F_ROCOMPAT_DIR_NLINK
 0x0020

	)

282 
	#EXT2F_ROCOMPAT_EXTRA_ISIZE
 0x0040

	)

283 
	#EXT2F_ROCOMPAT_BITS
 \

291 "\01ROCOMPAT_SPARSESUPER"

	)

293 
	#EXT2F_INCOMPAT_COMP
 0x0001

	)

294 
	#EXT2F_INCOMPAT_FTYPE
 0x0002

	)

295 
	#EXT2F_INCOMPAT_REPLAY_JOURNAL
 0x0004

	)

296 
	#EXT2F_INCOMPAT_USES_JOURNAL
 0x0008

	)

297 
	#EXT2F_INCOMPAT_META_BG
 0x0010

	)

298 
	#EXT2F_INCOMPAT_EXTENTS
 0x0040

	)

299 
	#EXT2F_INCOMPAT_64BIT
 0x0080

	)

300 
	#EXT2F_INCOMPAT_MMP
 0x0100

	)

301 
	#EXT2F_INCOMPAT_FLEX_BG
 0x0200

	)

302 
	#EXT2F_INCOMPAT_BITS
 \

312 "\01INCOMPAT_COMP"

	)

327 
	#EXT2F_COMPAT_SUPP
 0x0000

	)

328 
	#EXT2F_ROCOMPAT_SUPP
 (
EXT2F_ROCOMPAT_SPARSESUPER
 \

329 | 
EXT2F_ROCOMPAT_LARGEFILE
 \

330 | 
EXT2F_ROCOMPAT_HUGE_FILE
)

	)

331 
	#EXT2F_INCOMPAT_SUPP
 (
EXT2F_INCOMPAT_FTYPE
 \

332 | 
EXT2F_INCOMPAT_EXTENTS
)

	)

337 
	#EXT2_HAS_COMPAT_FEATURE
(
sb
, 
mask
) \

338 ((
sb
)->
e2fs
.
e2fs_„©uªs_com∑t
 & 
	`htﬁe32
(
mask
))

	)

343 
	#E2FS_BEH_CONTINUE
 1

	)

344 
	#E2FS_BEH_READONLY
 2

	)

345 
	#E2FS_BEH_PANIC
 3

	)

346 
	#E2FS_BEH_DEFAULT
 
E2FS_BEH_CONTINUE


	)

351 
	#E2FS_OS_LINUX
 0

	)

352 
	#E2FS_OS_HURD
 1

	)

353 
	#E2FS_OS_MASIX
 2

	)

354 
	#E2FS_OS_FREEBSD
 3

	)

355 
	#E2FS_OS_LITES
 4

	)

360 
	#E2FS_ISCLEAN
 0x01

	)

361 
	#E2FS_ERRORS
 0x02

	)

365 
	sext2_gd
 {

366 
uöt32_t
 
	mext2bgd_b_bôm≠
;

367 
uöt32_t
 
	mext2bgd_i_bôm≠
;

368 
uöt32_t
 
	mext2bgd_i_èbÀs
;

369 
uöt16_t
 
	mext2bgd_nb‰ì
;

370 
uöt16_t
 
	mext2bgd_ni‰ì
;

371 
uöt16_t
 
	mext2bgd_ndús
;

372 
uöt16_t
 
	mª£rved
;

373 
uöt32_t
 
	mª£rved2
[3];

383 
__ölöe
 
	$cg_has_sb
(Ë
__unu£d
;

384 
__ölöe
 

385 
	$cg_has_sb
(
i
)

387 
a3
, 
a5
, 
a7
;

389 i‡(
i
 == 0 || i == 1)

391 
a3
 = 3, 
a5
 = 5, 
a7
 = 7;

392 
a3
 <
i
 || 
a5
 <ò|| 
a7
 <= i;

393 
a3
 *3, 
a5
 *5, 
a7
 *= 7)

394 i‡(
i
 =
a3
 || i =
a5
 || i =
a7
)

397 
	}
}

403 #i‡
BYTE_ORDER
 =
LITTLE_ENDIAN


404 
	#h2fs16
(
x
Ë(x)

	)

405 
	#h2fs32
(
x
Ë(x)

	)

406 
	#h2fs64
(
x
Ë(x)

	)

407 
	#fs2h16
(
x
Ë(x)

	)

408 
	#fs2h32
(
x
Ë(x)

	)

409 
	#fs2h64
(
x
Ë(x)

	)

410 
	#e2fs_sblﬂd
(
ﬁd
, 
√w
Ë
	`mem˝y
(“ew), (ﬁd), 
SBSIZE
);

	)

411 
	#e2fs_cglﬂd
(
ﬁd
, 
√w
, 
size
Ë
	`mem˝y
(“ew), (ﬁd), (size));

	)

412 
	#e2fs_sbßve
(
ﬁd
, 
√w
Ë
	`mem˝y
(“ew), (ﬁd), 
SBSIZE
);

	)

413 
	#e2fs_cgßve
(
ﬁd
, 
√w
, 
size
Ë
	`mem˝y
(“ew), (ﬁd), (size));

	)

415 
e2fs_sb_bsw≠
(
ext2fs
 *, ext2fs *);

416 
e2fs_cg_bsw≠
(
ext2_gd
 *, ext2_gd *, );

417 
	#h2fs16
(
x
Ë
	`bsw≠16
(x)

	)

418 
	#h2fs32
(
x
Ë
	`bsw≠32
(x)

	)

419 
	#h2fs64
(
x
Ë
	`bsw≠64
(x)

	)

420 
	#fs2h16
(
x
Ë
	`bsw≠16
(x)

	)

421 
	#fs2h32
(
x
Ë
	`bsw≠32
(x)

	)

422 
	#fs2h64
(
x
Ë
	`bsw≠64
(x)

	)

423 
	#e2fs_sblﬂd
(
ﬁd
, 
√w
Ë
	`e2fs_sb_bsw≠
((ﬁd), (√w))

	)

424 
	#e2fs_cglﬂd
(
ﬁd
, 
√w
, 
size
Ë
	`e2fs_cg_bsw≠
((ﬁd), (√w), (size));

	)

425 
	#e2fs_sbßve
(
ﬁd
, 
√w
Ë
	`e2fs_sb_bsw≠
((ﬁd), (√w))

	)

426 
	#e2fs_cgßve
(
ﬁd
, 
√w
, 
size
Ë
	`e2fs_cg_bsw≠
((ﬁd), (√w), (size));

	)

433 
	#EXT2_FSBTODB
(
fs
, 
b
Ë((bË<< (fs)->
e2fs_fsbtodb
)

	)

434 
	#EXT2_DBTOFSB
(
fs
, 
b
Ë((bË>> (fs)->
e2fs_fsbtodb
)

	)

442 
	#öo_to_cg
(
fs
, 
x
Ë(((xË- 1Ë/ (fs)->
e2fs
.
e2fs_ùg
)

	)

443 
	#öo_to_fsba
(
fs
, 
x
) \

444 ((
fs
)->
e2fs_gd
[
	`öo_to_cg
((fs), (
x
))].
ext2bgd_i_èbÀs
 + \

445 (((
x
Ë- 1Ë% (
fs
)->
e2fs
.
e2fs_ùg
Ë/ (fs)->
e2fs_ùb
)

	)

446 
	#öo_to_fsbo
(
fs
, 
x
Ë(((xË- 1Ë% (fs)->
e2fs_ùb
)

	)

452 
	#dtog
(
fs
, 
d
Ë(((dË- (fs)->
e2fs
.
e2fs_fú°_dblock
Ë/ (fs)->e2fs.
e2fs_Âg
)

	)

453 
	#dtogd
(
fs
, 
d
) \

454 (((
d
Ë- (
fs
)->
e2fs
.
e2fs_fú°_dblock
Ë% (fs)->e2fs.
e2fs_Âg
)

	)

461 
	#ext2_blkoff
(
fs
, 
loc
) \

462 ((
loc
Ë& (
fs
)->
e2fs_qbmask
)

	)

463 
	#ext2_lblktosize
(
fs
, 
blk
) \

464 ((
blk
Ë<< (
fs
)->
e2fs_bshi·
)

	)

465 
	#ext2_lblkno
(
fs
, 
loc
) \

466 ((
loc
Ë>> (
fs
)->
e2fs_bshi·
)

	)

467 
	#ext2_blkroundup
(
fs
, 
size
) \

468 (((
size
Ë+ (
fs
)->
e2fs_qbmask
Ë& (fs)->
e2fs_bmask
)

	)

469 
	#ext2_‰agroundup
(
fs
, 
size
) \

470 (((
size
Ë+ (
fs
)->
e2fs_qbmask
Ë& (fs)->
e2fs_bmask
)

	)

475 
	#‰ì•a˚
(
fs
) \

476 ((
fs
)->
e2fs
.
e2fs_fbcou¡
 - (fs)->e2fs.
e2fs_rbcou¡
)

	)

481 
	#EXT2_NINDIR
(
fs
Ë((fs)->
e2fs_bsize
 / (
uöt32_t
))

	)

	@ext2fs_alloc.c

62 
	~<sys/cdefs.h
>

63 
__KERNEL_RCSID
(0, "$NetBSD:Éxt2fs_alloc.c,v 1.46 2015/03/28 19:24:04 maxv Exp $");

65 
	~<sys/∑øm.h
>

66 
	~<sys/sy°m.h
>

67 
	~<sys/buf.h
>

68 
	~<sys/¥oc.h
>

69 
	~<sys/vnode.h
>

70 
	~<sys/mou¡.h
>

71 
	~<sys/kî√l.h
>

72 
	~<sys/sy¶og.h
>

73 
	~<sys/kauth.h
>

75 
	~<ufs/ufs/öode.h
>

76 
	~<ufs/ufs/ufs_exã∫.h
>

77 
	~<ufs/ufs/ufsmou¡.h
>

79 
	~<ufs/ext2fs/ext2fs.h
>

80 
	~<ufs/ext2fs/ext2fs_exã∫.h
>

82 
u_l⁄g
 
	gext2gínumbî
;

84 
daddr_t
 
ext2fs_Æloccg
(
öode
 *, , daddr_t, );

85 
u_l⁄g
 
ext2fs_dú¥ef
(
m_ext2fs
 *);

86 
ext2fs_f£º
(
m_ext2fs
 *, 
u_öt
, const *);

87 
u_l⁄g
 
ext2fs_hashÆloc
(
öode
 *, , , ,

88 
	$daddr_t
 (*)(
öode
 *, , 
daddr_t
, ));

89 
daddr_t
 
	`ext2fs_nodóŒoccg
(
öode
 *, , daddr_t, );

90 
daddr_t
 
	`ext2fs_m≠£¨ch
(
m_ext2fs
 *, *, daddr_t);

110 
	$ext2fs_Æloc
(
öode
 *
ù
, 
daddr_t
 
lbn
, daddr_à
b¥ef
,

111 
kauth_¸ed_t
 
¸ed
, 
daddr_t
 *
b≈
)

114 
m_ext2fs
 *
fs
;

115 
daddr_t
 
bno
;

116 
cg
;

118 *
b≈
 = 0;

119 
fs
 = 
ù
->
i_e2fs
;

120 #ifde‡
DIAGNOSTIC


121 i‡(
¸ed
 =
NOCRED
)

122 
	`∑nic
("ext2fs_alloc: missing credential");

124 i‡(
fs
->
e2fs
.
e2fs_fbcou¡
 == 0)

125 
no•a˚
;

126 i‡(
	`kauth_auth‹ize_sy°em
(
¸ed
, 
KAUTH_SYSTEM_FS_RESERVEDSPACE
, 0, 
NULL
,

127 
NULL
, NULL) != 0 &&

128 
	`‰ì•a˚
(
fs
) <= 0)

129 
no•a˚
;

130 i‡(
b¥ef
 >
fs
->
e2fs
.
e2fs_bcou¡
)

131 
b¥ef
 = 0;

132 i‡(
b¥ef
 == 0)

133 
cg
 = 
	`öo_to_cg
(
fs
, 
ù
->
i_numbî
);

135 
cg
 = 
	`dtog
(
fs
, 
b¥ef
);

136 
bno
 = (
daddr_t
)
	`ext2fs_hashÆloc
(
ù
, 
cg
, 
b¥ef
, 
fs
->
e2fs_bsize
,

137 
ext2fs_Æloccg
);

138 i‡(
bno
 > 0) {

139 
	`ext2fs_£äblock
(
ù
, 
	`ext2fs_nblock
(ùË+ 
	`btodb
(
fs
->
e2fs_bsize
));

140 
ù
->
i_Êag
 |
IN_CHANGE
 | 
IN_UPDATE
;

141 *
b≈
 = 
bno
;

144 
no•a˚
:

145 
	`ext2fs_f£º
(
fs
, 
	`kauth_¸ed_gëeuid
(
¸ed
), "file system full");

146 
	`u¥ötf
("\n%s: wrôêÁûed, fûêsy°em i†fuŒ\n", 
fs
->
e2fs_fsm¡
);

147  (
ENOSPC
);

148 
	}
}

166 
	$ext2fs_vÆloc
(
vnode
 *
pvp
, 
mode
, 
kauth_¸ed_t
 
¸ed
,

167 
vnode
 **
vµ
)

170 
öode
 *
pù
;

171 
m_ext2fs
 *
fs
;

172 
öode
 *
ù
;

173 
öo_t
 
öo
, 
ùªf
;

174 
cg
, 
îr‹
;

176 *
vµ
 = 
NULL
;

177 
pù
 = 
	`VTOI
(
pvp
);

178 
fs
 = 
pù
->
i_e2fs
;

179 i‡(
fs
->
e2fs
.
e2fs_ficou¡
 == 0)

180 
noöodes
;

182 i‡((
mode
 & 
IFMT
Ë=
IFDIR
)

183 
cg
 = 
	`ext2fs_dú¥ef
(
fs
);

185 
cg
 = 
	`öo_to_cg
(
fs
, 
pù
->
i_numbî
);

186 
ùªf
 = 
cg
 * 
fs
->
e2fs
.
e2fs_ùg
 + 1;

187 
öo
 = (
öo_t
)
	`ext2fs_hashÆloc
(
pù
, 
cg
, ()
ùªf
, 
mode
, 
ext2fs_nodóŒoccg
);

188 i‡(
öo
 == 0)

189 
noöodes
;

190 
îr‹
 = 
	`VFS_VGET
(
pvp
->
v_mou¡
, 
öo
, 
vµ
);

191 i‡(
îr‹
) {

192 
	`ext2fs_v‰ì
(
pvp
, 
öo
, 
mode
);

193  (
îr‹
);

195 
ù
 = 
	`VTOI
(*
vµ
);

196 i‡(
ù
->
i_e2fs_mode
 && ip->
i_e2fs_∆ök
 != 0) {

197 
	`¥ötf
("mode = 0%o,Çlinks %d, inum = %llu, fs = %s\n",

198 
ù
->
i_e2fs_mode
, ip->
i_e2fs_∆ök
,

199 ()
ù
->
i_numbî
, 
fs
->
e2fs_fsm¡
);

200 
	`∑nic
("ext2fs_valloc: dupálloc");

203 
	`mem£t
(
ù
->
i_dö
.
e2fs_dö
, 0, (
ext2fs_döode
));

208 i‡(++
ext2gínumbî
 < 
time_£c⁄d
)

209 
ext2gínumbî
 = 
time_£c⁄d
;

210 
ù
->
i_e2fs_gí
 = 
ext2gínumbî
;

212 
noöodes
:

213 
	`ext2fs_f£º
(
fs
, 
	`kauth_¸ed_gëeuid
(
¸ed
), "out of inodes");

214 
	`u¥ötf
("\n%s: cª©e/symlök faûed,Çÿöode†‰ì\n", 
fs
->
e2fs_fsm¡
);

215  (
ENOSPC
);

216 
	}
}

225 
u_l⁄g


226 
	$ext2fs_dú¥ef
(
m_ext2fs
 *
fs
)

229 
cg
, 
max•a˚
, 
möcg
, 
avgi‰ì
;

231 
avgi‰ì
 = 
fs
->
e2fs
.
e2fs_ficou¡
 / fs->
e2fs_ncg
;

232 
max•a˚
 = 0;

233 
möcg
 = -1;

234 
cg
 = 0; cg < 
fs
->
e2fs_ncg
; cg++)

235 i‡–
fs
->
e2fs_gd
[
cg
].
ext2bgd_ni‰ì
 >
avgi‰ì
) {

236 i‡(
möcg
 =-1 || 
fs
->
e2fs_gd
[
cg
].
ext2bgd_nb‰ì
 > 
max•a˚
) {

237 
möcg
 = 
cg
;

238 
max•a˚
 = 
fs
->
e2fs_gd
[
cg
].
ext2bgd_nb‰ì
;

241  
möcg
;

242 
	}
}

255 
daddr_t


256 
	$ext2fs_blk¥ef
(
öode
 *
ù
, 
daddr_t
 
lbn
, 
ödx
,

257 
öt32_t
 *
b≠
 )

260 
m_ext2fs
 *
fs
;

261 
cg
, 
i
;

263 
fs
 = 
ù
->
i_e2fs
;

269 i‡–
ù
->
i_e2fs_œ°_blk
 && 
lbn
 =ù->
i_e2fs_œ°_lblk
 + 1) {

270  
ù
->
i_e2fs_œ°_blk
 + 1;

278 i‡(
b≠
) {

279 
i
 = 
ödx
; i >= 0 ; i--) {

280 i‡(
b≠
[
i
]) {

281  
	`fs2h32
(
b≠
[
i
]) + 1;

288 
cg
 = 
	`öo_to_cg
(
fs
, 
ù
->
i_numbî
);

289  
fs
->
e2fs
.
e2fs_bpg
 * 
cg
 + fs->e2fs.
e2fs_fú°_dblock
 + 1;

290 
	}
}

300 
u_l⁄g


301 
	$ext2fs_hashÆloc
(
öode
 *
ù
, 
cg
, 
¥ef
, 
size
,

302 
	$daddr_t
 (*
Æloˇt‹
)(
öode
 *, , 
daddr_t
, ))

305 
m_ext2fs
 *
fs
;

306 
ªsu…
;

307 
i
, 
icg
 = 
cg
;

309 
fs
 = 
ù
->
i_e2fs
;

313 
ªsu…
 = (*
Æloˇt‹
)(
ù
, 
cg
, 
¥ef
, 
size
);

314 i‡(
ªsu…
)

315  (
ªsu…
);

319 
i
 = 1; i < 
fs
->
e2fs_ncg
; i *= 2) {

320 
cg
 +
i
;

321 i‡(
cg
 >
fs
->
e2fs_ncg
)

322 
cg
 -
fs
->
e2fs_ncg
;

323 
ªsu…
 = (*
Æloˇt‹
)(
ù
, 
cg
, 0, 
size
);

324 i‡(
ªsu…
)

325  (
ªsu…
);

332 
cg
 = (
icg
 + 2Ë% 
fs
->
e2fs_ncg
;

333 
i
 = 2; i < 
fs
->
e2fs_ncg
; i++) {

334 
ªsu…
 = (*
Æloˇt‹
)(
ù
, 
cg
, 0, 
size
);

335 i‡(
ªsu…
)

336  (
ªsu…
);

337 
cg
++;

338 i‡(
cg
 =
fs
->
e2fs_ncg
)

339 
cg
 = 0;

342 
	}
}

351 
daddr_t


352 
	$ext2fs_Æloccg
(
öode
 *
ù
, 
cg
, 
daddr_t
 
b¥ef
, 
size
)

354 
m_ext2fs
 *
fs
;

355 *
bbp
;

356 
buf
 *
bp
;

358 
îr‹
, 
bno
, 
°¨t
, 
íd
, 
loc
;

360 
fs
 = 
ù
->
i_e2fs
;

361 i‡(
fs
->
e2fs_gd
[
cg
].
ext2bgd_nb‰ì
 == 0)

363 
îr‹
 = 
	`bªad
(
ù
->
i_devvp
, 
	`EXT2_FSBTODB
(
fs
,

364 
fs
->
e2fs_gd
[
cg
].
ext2bgd_b_bôm≠
),

365 ()
fs
->
e2fs_bsize
, 
B_MODIFY
, &
bp
);

366 i‡(
îr‹
) {

369 
bbp
 = (*)
bp
->
b_d©a
;

371 i‡(
	`dtog
(
fs
, 
b¥ef
Ë!
cg
)

372 
b¥ef
 = 0;

373 i‡(
b¥ef
 != 0) {

374 
b¥ef
 = 
	`dtogd
(
fs
, bpref);

378 i‡(
	`is˛r
(
bbp
, 
b¥ef
)) {

379 
bno
 = 
b¥ef
;

380 
gŸô
;

389 i‡(
b¥ef
)

390 
°¨t
 = 
	`dtogd
(
fs
, 
b¥ef
Ë/ 
NBBY
;

392 
°¨t
 = 0;

393 
íd
 = 
	`howm™y
(
fs
->
e2fs
.
e2fs_Âg
, 
NBBY
Ë- 
°¨t
;

394 
loc
 = 
°¨t
;Üo¯< 
íd
;Üoc++) {

395 i‡(
bbp
[
loc
] == 0) {

396 
bno
 = 
loc
 * 
NBBY
;

397 
gŸô
;

400 
loc
 = 0;Üo¯< 
°¨t
;Üoc++) {

401 i‡(
bbp
[
loc
] == 0) {

402 
bno
 = 
loc
 * 
NBBY
;

403 
gŸô
;

407 
bno
 = 
	`ext2fs_m≠£¨ch
(
fs
, 
bbp
, 
b¥ef
);

408 i‡(
bno
 < 0)

410 
gŸô
:

411 #ifde‡
DIAGNOSTIC


412 i‡(
	`is£t
(
bbp
, (
daddr_t
)
bno
)) {

413 
	`¥ötf
("ext2fs_alloccgblk: cg=%d bno=%d fs=%s\n",

414 
cg
, 
bno
, 
fs
->
e2fs_fsm¡
);

415 
	`∑nic
("ext2fs_alloccg: dupálloc");

418 
	`£tbô
(
bbp
, (
daddr_t
)
bno
);

419 
fs
->
e2fs
.
e2fs_fbcou¡
--;

420 
fs
->
e2fs_gd
[
cg
].
ext2bgd_nb‰ì
--;

421 
fs
->
e2fs_fmod
 = 1;

422 
	`bdwrôe
(
bp
);

423  (
cg
 * 
fs
->
e2fs
.
e2fs_Âg
 + fs->e2fs.
e2fs_fú°_dblock
 + 
bno
);

424 
	}
}

435 
daddr_t


436 
	$ext2fs_nodóŒoccg
(
öode
 *
ù
, 
cg
, 
daddr_t
 
ùªf
, 
mode
)

438 
m_ext2fs
 *
fs
;

439 *
ibp
;

440 
buf
 *
bp
;

441 
îr‹
, 
°¨t
, 
Àn
, 
loc
, 
m≠
, 
i
;

443 
ùªf
--;

444 i‡(
ùªf
 == -1)

445 
ùªf
 = 0;

446 
fs
 = 
ù
->
i_e2fs
;

447 i‡(
fs
->
e2fs_gd
[
cg
].
ext2bgd_ni‰ì
 == 0)

449 
îr‹
 = 
	`bªad
(
ù
->
i_devvp
, 
	`EXT2_FSBTODB
(
fs
,

450 
fs
->
e2fs_gd
[
cg
].
ext2bgd_i_bôm≠
),

451 ()
fs
->
e2fs_bsize
, 
B_MODIFY
, &
bp
);

452 i‡(
îr‹
) {

455 
ibp
 = (*)
bp
->
b_d©a
;

456 i‡(
ùªf
) {

457 
ùªf
 %
fs
->
e2fs
.
e2fs_ùg
;

458 i‡(
	`is˛r
(
ibp
, 
ùªf
))

459 
gŸô
;

461 
°¨t
 = 
ùªf
 / 
NBBY
;

462 
Àn
 = 
	`howm™y
(
fs
->
e2fs
.
e2fs_ùg
 - 
ùªf
, 
NBBY
);

463 
loc
 = 
	`skpc
(0xff, 
Àn
, &
ibp
[
°¨t
]);

464 i‡(
loc
 == 0) {

465 
Àn
 = 
°¨t
 + 1;

466 
°¨t
 = 0;

467 
loc
 = 
	`skpc
(0xff, 
Àn
, &
ibp
[0]);

468 i‡(
loc
 == 0) {

469 
	`¥ötf
("cg = %d, ipref = %lld, fs = %s\n",

470 
cg
, ()
ùªf
, 
fs
->
e2fs_fsm¡
);

471 
	`∑nic
("ext2fs_nodealloccg: map corrupted");

475 
i
 = 
°¨t
 + 
Àn
 - 
loc
;

476 
m≠
 = 
ibp
[
i
] ^ 0xff;

477 i‡(
m≠
 == 0) {

478 
	`¥ötf
("f†%s\n", 
fs
->
e2fs_fsm¡
);

479 
	`∑nic
("ext2fs_nodealloccg: blockÇot in map");

481 
ùªf
 = 
i
 * 
NBBY
 + 
	`ffs
(
m≠
) - 1;

482 
gŸô
:

483 
	`£tbô
(
ibp
, 
ùªf
);

484 
fs
->
e2fs
.
e2fs_ficou¡
--;

485 
fs
->
e2fs_gd
[
cg
].
ext2bgd_ni‰ì
--;

486 
fs
->
e2fs_fmod
 = 1;

487 i‡((
mode
 & 
IFMT
Ë=
IFDIR
) {

488 
fs
->
e2fs_gd
[
cg
].
ext2bgd_ndús
++;

490 
	`bdwrôe
(
bp
);

491  (
cg
 * 
fs
->
e2fs
.
e2fs_ùg
 + 
ùªf
 +1);

492 
	}
}

501 
	$ext2fs_blk‰ì
(
öode
 *
ù
, 
daddr_t
 
bno
)

503 
m_ext2fs
 *
fs
;

504 *
bbp
;

505 
buf
 *
bp
;

506 
îr‹
, 
cg
;

508 
fs
 = 
ù
->
i_e2fs
;

509 
cg
 = 
	`dtog
(
fs
, 
bno
);

510 i‡((
u_öt
)
bno
 >
fs
->
e2fs
.
e2fs_bcou¡
) {

511 
	`¥ötf
("bad block %Œd, inÿ%Œu\n", ()
bno
,

512 ()
ù
->
i_numbî
);

513 
	`ext2fs_f£º
(
fs
, 
ù
->
i_uid
, "bad block");

516 
îr‹
 = 
	`bªad
(
ù
->
i_devvp
,

517 
	`EXT2_FSBTODB
(
fs
, fs->
e2fs_gd
[
cg
].
ext2bgd_b_bôm≠
),

518 ()
fs
->
e2fs_bsize
, 
B_MODIFY
, &
bp
);

519 i‡(
îr‹
) {

522 
bbp
 = (*)
bp
->
b_d©a
;

523 
bno
 = 
	`dtogd
(
fs
, bno);

524 i‡(
	`is˛r
(
bbp
, 
bno
)) {

525 
	`¥ötf
("dev = 0x%llx, block = %lld, fs = %s\n",

526 ()
ù
->
i_dev
, ()
bno
,

527 
fs
->
e2fs_fsm¡
);

528 
	`∑nic
("blkfree: freeing free block");

530 
	`˛rbô
(
bbp
, 
bno
);

531 
fs
->
e2fs
.
e2fs_fbcou¡
++;

532 
fs
->
e2fs_gd
[
cg
].
ext2bgd_nb‰ì
++;

534 
fs
->
e2fs_fmod
 = 1;

535 
	`bdwrôe
(
bp
);

536 
	}
}

544 
	$ext2fs_v‰ì
(
vnode
 *
pvp
, 
öo_t
 
öo
, 
mode
)

546 
m_ext2fs
 *
fs
;

547 *
ibp
;

548 
öode
 *
pù
;

549 
buf
 *
bp
;

550 
îr‹
, 
cg
;

552 
pù
 = 
	`VTOI
(
pvp
);

553 
fs
 = 
pù
->
i_e2fs
;

554 i‡((
u_öt
)
öo
 > 
fs
->
e2fs
.
e2fs_icou¡
 || (u_öt)öÿ< 
EXT2_FIRSTINO
)

555 
	`∑nic
("ifree:Ñange: dev = 0x%llx, ino = %llu, fs = %s",

556 ()
pù
->
i_dev
, ()
öo
,

557 
fs
->
e2fs_fsm¡
);

558 
cg
 = 
	`öo_to_cg
(
fs
, 
öo
);

559 
îr‹
 = 
	`bªad
(
pù
->
i_devvp
,

560 
	`EXT2_FSBTODB
(
fs
, fs->
e2fs_gd
[
cg
].
ext2bgd_i_bôm≠
),

561 ()
fs
->
e2fs_bsize
, 
B_MODIFY
, &
bp
);

562 i‡(
îr‹
) {

565 
ibp
 = (*)
bp
->
b_d©a
;

566 
öo
 = (öÿ- 1Ë% 
fs
->
e2fs
.
e2fs_ùg
;

567 i‡(
	`is˛r
(
ibp
, 
öo
)) {

568 
	`¥ötf
("dev = 0x%llx, ino = %llu, fs = %s\n",

569 ()
pù
->
i_dev
,

570 ()
öo
, 
fs
->
e2fs_fsm¡
);

571 i‡(
fs
->
e2fs_r⁄ly
 == 0)

572 
	`∑nic
("ifree: freeing free inode");

574 
	`˛rbô
(
ibp
, 
öo
);

575 
fs
->
e2fs
.
e2fs_ficou¡
++;

576 
fs
->
e2fs_gd
[
cg
].
ext2bgd_ni‰ì
++;

577 i‡((
mode
 & 
IFMT
Ë=
IFDIR
) {

578 
fs
->
e2fs_gd
[
cg
].
ext2bgd_ndús
--;

580 
fs
->
e2fs_fmod
 = 1;

581 
	`bdwrôe
(
bp
);

583 
	}
}

592 
daddr_t


593 
	$ext2fs_m≠£¨ch
(
m_ext2fs
 *
fs
, *
bbp
, 
daddr_t
 
b¥ef
)

595 
°¨t
, 
Àn
, 
loc
, 
i
, 
m≠
;

601 i‡(
b¥ef
)

602 
°¨t
 = 
	`dtogd
(
fs
, 
b¥ef
Ë/ 
NBBY
;

604 
°¨t
 = 0;

605 
Àn
 = 
	`howm™y
(
fs
->
e2fs
.
e2fs_Âg
, 
NBBY
Ë- 
°¨t
;

606 
loc
 = 
	`skpc
(0xff, 
Àn
, &
bbp
[
°¨t
]);

607 i‡(
loc
 == 0) {

608 
Àn
 = 
°¨t
 + 1;

609 
°¨t
 = 0;

610 
loc
 = 
	`skpc
(0xff, 
Àn
, &
bbp
[
°¨t
]);

611 i‡(
loc
 == 0) {

612 
	`¥ötf
("start = %d,Üen = %d, fs = %s\n",

613 
°¨t
, 
Àn
, 
fs
->
e2fs_fsm¡
);

614 
	`∑nic
("ext2fs_alloccg: map corrupted");

618 
i
 = 
°¨t
 + 
Àn
 - 
loc
;

619 
m≠
 = 
bbp
[
i
] ^ 0xff;

620 i‡(
m≠
 == 0) {

621 
	`¥ötf
("f†%s\n", 
fs
->
e2fs_fsm¡
);

622 
	`∑nic
("ext2fs_mapsearch: blockÇot in map");

624  
i
 * 
NBBY
 + 
	`ffs
(
m≠
) - 1;

625 
	}
}

634 
	$ext2fs_f£º
(
m_ext2fs
 *
fs
, 
u_öt
 
uid
, c⁄° *
˝
)

637 
	`log
(
LOG_ERR
, "uid %d o¿%s: %s\n", 
uid
, 
fs
->
e2fs_fsm¡
, 
˝
);

638 
	}
}

	@ext2fs_balloc.c

62 
	~<sys/cdefs.h
>

63 
__KERNEL_RCSID
(0, "$NetBSD:Éxt2fs_balloc.c,v 1.40 2015/03/28 19:24:04 maxv Exp $");

65 #i‡
deföed
(
_KERNEL_OPT
)

66 
	~"›t_uvmhi°.h
"

69 
	~<sys/∑øm.h
>

70 
	~<sys/sy°m.h
>

71 
	~<sys/buf.h
>

72 
	~<sys/¥oc.h
>

73 
	~<sys/fûe.h
>

74 
	~<sys/vnode.h
>

75 
	~<sys/mou¡.h
>

76 
	~<sys/kauth.h
>

78 
	~<uvm/uvm.h
>

80 
	~<ufs/ufs/öode.h
>

81 
	~<ufs/ufs/ufs_exã∫.h
>

83 
	~<ufs/ext2fs/ext2fs.h
>

84 
	~<ufs/ext2fs/ext2fs_exã∫.h
>

92 
	$ext2fs_bÆloc
(
öode
 *
ù
, 
daddr_t
 
bn
, 
size
,

93 
kauth_¸ed_t
 
¸ed
, 
buf
 **
bµ
, 
Êags
)

96 
m_ext2fs
 *
fs
;

97 
daddr_t
 
nb
;

98 
buf
 *
bp
, *
nbp
;

99 
vnode
 *
vp
 = 
	`ITOV
(
ù
);

100 
ödú
 
ödús
[
EXT2FS_NIADDR
 + 2];

101 
daddr_t
 
√wb
, 
lbn
, 
¥ef
;

102 
öt32_t
 *
b≠
;

103 
num
, 
i
, 
îr‹
;

104 
u_öt
 
dóŒoˇãd
;

105 
daddr_t
 *
blkp
, *
Ælocblk
, 
Ælociblk
[
EXT2FS_NIADDR
 + 1];

106 
öt32_t
 *
Ælocib
;

107 
unwödidx
 = -1;

108 
	`UVMHIST_FUNC
("ext2fs_bÆloc"); 
	`UVMHIST_CALLED
(
ubchi°
);

110 
	`UVMHIST_LOG
(
ubchi°
, "b¿0x%x", 
bn
,0,0,0);

112 i‡(
bµ
 !
NULL
) {

113 *
bµ
 = 
NULL
;

115 i‡(
bn
 < 0)

116  (
EFBIG
);

117 
fs
 = 
ù
->
i_e2fs
;

118 
lbn
 = 
bn
;

123 i‡(
bn
 < 
EXT2FS_NDADDR
) {

125 
nb
 = 
	`fs2h32
(
ù
->
i_e2fs_blocks
[
bn
]);

126 i‡(
nb
 != 0) {

132 i‡(
bµ
 !
NULL
) {

133 
îr‹
 = 
	`bªad
(
vp
, 
bn
, 
fs
->
e2fs_bsize
,

134 
B_MODIFY
, &
bp
);

135 i‡(
îr‹
) {

136  (
îr‹
);

138 *
bµ
 = 
bp
;

147 
îr‹
 = 
	`ext2fs_Æloc
(
ù
, 
bn
,

148 
	`ext2fs_blk¥ef
(
ù
, 
bn
, bn, &ù->
i_e2fs_blocks
[0]),

149 
¸ed
, &
√wb
);

150 i‡(
îr‹
)

151  (
îr‹
);

152 
ù
->
i_e2fs_œ°_lblk
 = 
lbn
;

153 
ù
->
i_e2fs_œ°_blk
 = 
√wb
;

155 
ù
->
i_e2fs_blocks
[
bn
] = 
	`h2fs32
((
öt32_t
)
√wb
);

156 
ù
->
i_Êag
 |
IN_CHANGE
 | 
IN_UPDATE
;

157 i‡(
bµ
 !
NULL
) {

158 
bp
 = 
	`gëblk
(
vp
, 
bn
, 
fs
->
e2fs_bsize
, 0, 0);

159 
bp
->
b_blkno
 = 
	`EXT2_FSBTODB
(
fs
, 
√wb
);

160 i‡(
Êags
 & 
B_CLRBUF
)

161 
	`˛rbuf
(
bp
);

162 *
bµ
 = 
bp
;

169 
¥ef
 = 0;

170 i‡((
îr‹
 = 
	`ufs_gëlbns
(
vp
, 
bn
, 
ödús
, &
num
)) != 0)

171 (
îr‹
);

172 #ifde‡
DIAGNOSTIC


173 i‡(
num
 < 1)

174 
	`∑nic
 ("ext2fs_balloc: ufs_getlbnsÑeturned indirect block\n");

179 --
num
;

181 
nb
 = 
	`fs2h32
(
ù
->
i_e2fs_blocks
[
EXT2FS_NDADDR
 + 
ödús
[0].
ö_off
]);

182 
Ælocib
 = 
NULL
;

183 
Ælocblk
 = 
Ælociblk
;

184 i‡(
nb
 == 0) {

185 
¥ef
 = 
	`ext2fs_blk¥ef
(
ù
, 
lbn
, 0, (
öt32_t
 *)0);

186 
îr‹
 = 
	`ext2fs_Æloc
(
ù
, 
lbn
, 
¥ef
, 
¸ed
, &
√wb
);

187 i‡(
îr‹
)

188  (
îr‹
);

189 
nb
 = 
√wb
;

190 *
Ælocblk
++ = 
nb
;

191 
ù
->
i_e2fs_œ°_blk
 = 
√wb
;

192 
bp
 = 
	`gëblk
(
vp
, 
ödús
[1].
ö_lbn
, 
fs
->
e2fs_bsize
, 0, 0);

193 
bp
->
b_blkno
 = 
	`EXT2_FSBTODB
(
fs
, 
√wb
);

194 
	`˛rbuf
(
bp
);

199 i‡((
îr‹
 = 
	`bwrôe
(
bp
)) != 0)

200 
Áû
;

201 
unwödidx
 = 0;

202 
Ælocib
 = &
ù
->
i_e2fs_blocks
[
EXT2FS_NDADDR
 + 
ödús
[0].
ö_off
];

204 *
Ælocib
 = 
	`h2fs32
((
öt32_t
)
√wb
);

205 
ù
->
i_Êag
 |
IN_CHANGE
 | 
IN_UPDATE
;

210 
i
 = 1;;) {

211 
îr‹
 = 
	`bªad
(
vp
,

212 
ödús
[
i
].
ö_lbn
, ()
fs
->
e2fs_bsize
, 0, &
bp
);

213 i‡(
îr‹
) {

214 
Áû
;

216 
b≠
 = (
öt32_t
 *)
bp
->
b_d©a
;

217 
nb
 = 
	`fs2h32
(
b≠
[
ödús
[
i
].
ö_off
]);

218 i‡(
i
 =
num
)

220 
i
++;

221 i‡(
nb
 != 0) {

222 
	`bªl£
(
bp
, 0);

225 
¥ef
 = 
	`ext2fs_blk¥ef
(
ù
, 
lbn
, 0, (
öt32_t
 *)0);

226 
îr‹
 = 
	`ext2fs_Æloc
(
ù
, 
lbn
, 
¥ef
, 
¸ed
, &
√wb
);

227 i‡(
îr‹
) {

228 
	`bªl£
(
bp
, 0);

229 
Áû
;

231 
nb
 = 
√wb
;

232 *
Ælocblk
++ = 
nb
;

233 
ù
->
i_e2fs_œ°_blk
 = 
√wb
;

234 
nbp
 = 
	`gëblk
(
vp
, 
ödús
[
i
].
ö_lbn
, 
fs
->
e2fs_bsize
, 0, 0);

235 
nbp
->
b_blkno
 = 
	`EXT2_FSBTODB
(
fs
, 
nb
);

236 
	`˛rbuf
(
nbp
);

241 i‡((
îr‹
 = 
	`bwrôe
(
nbp
)) != 0) {

242 
	`bªl£
(
bp
, 0);

243 
Áû
;

245 i‡(
unwödidx
 < 0)

246 
unwödidx
 = 
i
 - 1;

248 
b≠
[
ödús
[
i
 - 1].
ö_off
] = 
	`h2fs32
((
öt32_t
)
nb
);

253 i‡(
Êags
 & 
B_SYNC
) {

254 
	`bwrôe
(
bp
);

256 
	`bdwrôe
(
bp
);

262 i‡(
nb
 == 0) {

263 
¥ef
 = 
	`ext2fs_blk¥ef
(
ù
, 
lbn
, 
ödús
[
num
].
ö_off
, &
b≠
[0]);

264 
îr‹
 = 
	`ext2fs_Æloc
(
ù
, 
lbn
, 
¥ef
, 
¸ed
, &
√wb
);

265 i‡(
îr‹
) {

266 
	`bªl£
(
bp
, 0);

267 
Áû
;

269 
nb
 = 
√wb
;

270 *
Ælocblk
++ = 
nb
;

271 
ù
->
i_e2fs_œ°_lblk
 = 
lbn
;

272 
ù
->
i_e2fs_œ°_blk
 = 
√wb
;

274 
b≠
[
ödús
[
num
].
ö_off
] = 
	`h2fs32
((
öt32_t
)
nb
);

279 i‡(
Êags
 & 
B_SYNC
) {

280 
	`bwrôe
(
bp
);

282 
	`bdwrôe
(
bp
);

284 i‡(
bµ
 !
NULL
) {

285 
nbp
 = 
	`gëblk
(
vp
, 
lbn
, 
fs
->
e2fs_bsize
, 0, 0);

286 
nbp
->
b_blkno
 = 
	`EXT2_FSBTODB
(
fs
, 
nb
);

287 i‡(
Êags
 & 
B_CLRBUF
)

288 
	`˛rbuf
(
nbp
);

289 *
bµ
 = 
nbp
;

293 
	`bªl£
(
bp
, 0);

294 i‡(
bµ
 !
NULL
) {

295 i‡(
Êags
 & 
B_CLRBUF
) {

296 
îr‹
 = 
	`bªad
(
vp
, 
lbn
, ()
fs
->
e2fs_bsize
,

297 
B_MODIFY
, &
nbp
);

298 i‡(
îr‹
) {

299 
Áû
;

302 
nbp
 = 
	`gëblk
(
vp
, 
lbn
, 
fs
->
e2fs_bsize
, 0, 0);

303 
nbp
->
b_blkno
 = 
	`EXT2_FSBTODB
(
fs
, 
nb
);

305 *
bµ
 = 
nbp
;

308 
Áû
:

313 
dóŒoˇãd
 = 0, 
blkp
 = 
Ælociblk
; blk∞< 
Ælocblk
; blkp++) {

314 
	`ext2fs_blk‰ì
(
ù
, *
blkp
);

315 
dóŒoˇãd
 +
fs
->
e2fs_bsize
;

317 i‡(
unwödidx
 >= 0) {

318 i‡(
unwödidx
 == 0) {

319 *
Ælocib
 = 0;

321 
r
;

323 
r
 = 
	`bªad
(
vp
, 
ödús
[
unwödidx
].
ö_lbn
,

324 ()
fs
->
e2fs_bsize
, 
B_MODIFY
, &
bp
);

325 i‡(
r
) {

326 
	`∑nic
("CouldÇŸ unwöd indúe˘ block,Éº‹ %d", 
r
);

328 
b≠
 = (
öt32_t
 *)
bp
->
b_d©a
;

329 
b≠
[
ödús
[
unwödidx
].
ö_off
] = 0;

330 i‡(
Êags
 & 
B_SYNC
)

331 
	`bwrôe
(
bp
);

333 
	`bdwrôe
(
bp
);

336 
i
 = 
unwödidx
 + 1; i <
num
; i++) {

337 
bp
 = 
	`gëblk
(
vp
, 
ödús
[
i
].
ö_lbn
, ()
fs
->
e2fs_bsize
,

339 
	`bªl£
(
bp
, 
BC_INVAL
);

342 i‡(
dóŒoˇãd
) {

343 
	`ext2fs_£äblock
(
ù
, 
	`ext2fs_nblock
(ùË- 
	`btodb
(
dóŒoˇãd
));

344 
ù
->
i_e2fs_Êags
 |
IN_CHANGE
 | 
IN_UPDATE
;

346  
îr‹
;

347 
	}
}

350 
	$ext2fs_g›_Æloc
(
vnode
 *
vp
, 
off_t
 
off
, off_à
Àn
, 
Êags
,

351 
kauth_¸ed_t
 
¸ed
)

354 
öode
 *
ù
 = 
	`VTOI
(
vp
);

355 
m_ext2fs
 *
fs
 = 
ù
->
i_e2fs
;

356 
îr‹
, 
dñè
, 
bshi·
, 
bsize
;

357 
	`UVMHIST_FUNC
("ext2fs_g›_Æloc"); 
	`UVMHIST_CALLED
(
ubchi°
);

359 
bshi·
 = 
fs
->
e2fs_bshi·
;

360 
bsize
 = 1 << 
bshi·
;

362 
dñè
 = 
off
 & (
bsize
 - 1);

363 
off
 -
dñè
;

364 
Àn
 +
dñè
;

366 
Àn
 > 0) {

367 
bsize
 = 
	`mö
(bsize, 
Àn
);

368 
	`UVMHIST_LOG
(
ubchi°
, "off 0x%xÜen 0x%x bsize 0x%x",

369 
off
, 
Àn
, 
bsize
, 0);

371 
îr‹
 = 
	`ext2fs_bÆloc
(
ù
, 
	`ext2_lblkno
(
fs
, 
off
), 
bsize
, 
¸ed
,

372 
NULL
, 
Êags
);

373 i‡(
îr‹
) {

374 
	`UVMHIST_LOG
(
ubchi°
, "îr‹ %d", 
îr‹
, 0,0,0);

375  
îr‹
;

383 i‡(
	`ext2fs_size
(
ù
Ë< 
off
 + 
bsize
) {

384 
	`UVMHIST_LOG
(
ubchi°
, "old 0x%lx%8lxÇew 0x%lx%8lx",

386 
	`ext2fs_size
(
ù
) >> 32,

387 
	`ext2fs_size
(
ù
) & 0xffffffff,

388 (
off
 + 
bsize
) >> 32,

389 (
off
 + 
bsize
) & 0xffffffff);

390 
îr‹
 = 
	`ext2fs_£tsize
(
ù
, 
off
 + 
bsize
);

391 i‡(
îr‹
) {

392 
	`UVMHIST_LOG
(
ubchi°
, "îr‹ %d", 
îr‹
, 0,0,0);

393  
îr‹
;

397 
off
 +
bsize
;

398 
Àn
 -
bsize
;

401 
	}
}

	@ext2fs_bmap.c

67 
	~<sys/cdefs.h
>

68 
__KERNEL_RCSID
(0, "$NetBSD:Éxt2fs_bmap.c,v 1.27 2016/06/03 15:35:48 christos Exp $");

70 
	~<sys/∑øm.h
>

71 
	~<sys/sy°m.h
>

72 
	~<sys/buf.h
>

73 
	~<sys/¥oc.h
>

74 
	~<sys/vnode.h
>

75 
	~<sys/mou¡.h
>

76 
	~<sys/ªsour˚v¨.h
>

77 
	~<sys/åa˚.h
>

79 
	~<miscfs/•ecfs/•ecdev.h
>

81 
	~<ufs/ufs/öode.h
>

82 
	~<ufs/ufs/ufsmou¡.h
>

83 
	~<ufs/ufs/ufs_exã∫.h
>

84 
	~<ufs/ext2fs/ext2fs.h
>

85 
	~<ufs/ext2fs/ext2fs_exã∫.h
>

88 
ext4_bm≠ext
(
vnode
 *, 
öt32_t
, 
öt64_t
 *, *, *);

89 
ext2fs_bm≠¨øy
(
vnode
 *, 
daddr_t
, daddr_à*, 
ödú
 *,

92 
	#is_£quítül
(
ump
, 
a
, 
b
Ë((bË=◊Ë+ ump->
um_£qöc
)

	)

100 
	$ext2fs_bm≠
(*
v
)

102 
v›_bm≠_¨gs


108  *
≠
 = 
v
;

113 i‡(
≠
->
a_vµ
 !
NULL
)

114 *
≠
->
a_vµ
 = 
	`VTOI
◊p->
a_vp
)->
i_devvp
;

115 i‡(
≠
->
a_b≈
 =
NULL
)

119 i‡(
	`VTOI
(
≠
->
a_vp
)->
i_dö
.
e2fs_dö
->
e2di_Êags
 & 
IN_E4EXTENTS
)

120  
	`ext4_bm≠ext
(
≠
->
a_vp
,áp->
a_bn
,áp->
a_b≈
,

121 
≠
->
a_ru≈
, 
NULL
);

123  
	`ext2fs_bm≠¨øy
(
≠
->
a_vp
,áp->
a_bn
,áp->
a_b≈
, 
NULL
,

124 
NULL
, 
≠
->
a_ru≈
);

127 
	}
}

134 
	$ext4_bm≠ext
(
vnode
 *
vp
, 
öt32_t
 
bn
, 
öt64_t
 *
b≈
, *
ru≈
, *
runb
)

136 
öode
 *
ù
;

137 
m_ext2fs
 *
fs
;

138 
ext4_exã¡
 *
ï
;

139 
ext4_exã¡_∑th
 
∑th
 = { .
ï_bp
 = 
NULL
 };

140 
daddr_t
 
lbn
;

141 
îr‹
 = 0;

143 
ù
 = 
	`VTOI
(
vp
);

144 
fs
 = 
ù
->
i_e2fs
;

145 
lbn
 = 
bn
;

148 i‡(
ru≈
 !
NULL
)

149 *
ru≈
 = 0;

151 i‡(
runb
 !
NULL
)

152 *
runb
 = 0;

154 
	`ext4_ext_föd_exã¡
(
fs
, 
ù
, 
lbn
, &
∑th
);

155 i‡(
∑th
.
ï_is_•¨£
) {

156 *
b≈
 = -1;

157 i‡(
ru≈
 !
NULL
)

158 *
ru≈
 = 
∑th
.
ï_•¨£_ext
.
e_Àn
 -

159 (
lbn
 - 
∑th
.
ï_•¨£_ext
.
e_blk
) - 1;

160 i‡(
runb
 !
NULL
)

161 *
runb
 = 
lbn
 - 
∑th
.
ï_•¨£_ext
.
e_blk
;

163 i‡(
∑th
.
ï_ext
 =
NULL
) {

164 
îr‹
 = 
EIO
;

165 
out
;

167 
ï
 = 
∑th
.
ï_ext
;

168 *
b≈
 = 
	`fsbtodb
(
fs
, 
lbn
 - 
ï
->
e_blk


169 + (
ï
->
e_°¨t_lo
 | (
daddr_t
Îp->
e_°¨t_hi
 << 32));

171 i‡(*
b≈
 == 0)

172 *
b≈
 = -1;

174 i‡(
ru≈
 !
NULL
)

175 *
ru≈
 = 
ï
->
e_Àn
 - (
lbn
 -Ép->
e_blk
) - 1;

176 i‡(
runb
 !
NULL
)

177 *
runb
 = 
lbn
 - 
ï
->
e_blk
;

180 
out
:

181 i‡(
∑th
.
ï_bp
 !
NULL
) {

182 
	`bªl£
(
∑th
.
ï_bp
, 0);

185  
îr‹
;

186 
	}
}

205 
	$ext2fs_bm≠¨øy
(
vnode
 *
vp
, 
daddr_t
 
bn
, daddr_à*
b≈
, 
ödú
 *
≠
,

206 *
nump
, *
ru≈
)

208 
öode
 *
ù
;

209 
buf
 *
bp
, *
cbp
;

210 
ufsmou¡
 *
ump
;

211 
mou¡
 *
mp
;

212 
ödú
 
a
[
EXT2FS_NIADDR
+1], *
x≠
;

213 
daddr_t
 
daddr
;

214 
daddr_t
 
mëÆbn
;

215 
îr‹
, 
maxrun
 = 0, 
num
;

217 
ù
 = 
	`VTOI
(
vp
);

218 
mp
 = 
vp
->
v_mou¡
;

219 
ump
 = 
ù
->
i_ump
;

220 #ifde‡
DIAGNOSTIC


221 i‡((
≠
 !
NULL
 && 
nump
 == NULL) || (ap == NULL &&Çump != NULL))

222 
	`∑nic
("ext2fs_bmaparray: invalidárguments");

225 i‡(
ru≈
) {

232 *
ru≈
 = 0;

233 
maxrun
 = 
MAXBSIZE
 / 
mp
->
m¡_°©
.
f_iosize
 - 1;

236 i‡(
bn
 >0 && b¿< 
EXT2FS_NDADDR
) {

238 *
b≈
 = 
	`blk±πodb
(
ump
, 
	`fs2h32
(
ù
->
i_e2fs_blocks
[
bn
]));

239 i‡(*
b≈
 == 0)

240 *
b≈
 = -1;

241 i‡(
ru≈
)

243 ++
bn
; b¿< 
EXT2FS_NDADDR
 && *
ru≈
 < 
maxrun
 &&

244 
	`is_£quítül
(
ump
, (
daddr_t
)
	`fs2h32
(
ù
->
i_e2fs_blocks
[
bn
 - 1]),

245 (
daddr_t
)
	`fs2h32
(
ù
->
i_e2fs_blocks
[
bn
]));

246 ++
bn
, ++*
ru≈
);

250 
x≠
 = 
≠
 =
NULL
 ? 
a
 :áp;

251 i‡(!
nump
)

252 
nump
 = &
num
;

253 i‡((
îr‹
 = 
	`ufs_gëlbns
(
vp
, 
bn
, 
x≠
, 
nump
)) != 0)

254  (
îr‹
);

256 
num
 = *
nump
;

260 
daddr
 = 
	`fs2h32
(
ù
->
i_e2fs_blocks
[
EXT2FS_NDADDR
 + 
x≠
->
ö_off
]);

262 #ifde‡
DIAGNOSTIC


263 i‡(
num
 > 
EXT2FS_NIADDR
 + 1 ||Çum < 1) {

264 
	`¥ötf
("ext2fs_bm≠¨øy:Çum=%d\n", 
num
);

265 
	`∑nic
("ext2fs_bmaparray:Çum");

268 
bp
 = 
NULL
, ++
x≠
; --
num
; ++xap) {

275 
mëÆbn
 = 
x≠
->
ö_lbn
;

276 i‡(
mëÆbn
 =
bn
)

278 i‡(
daddr
 == 0) {

279 
	`muãx_íãr
(&
bufˇche_lock
);

280 
cbp
 = 
	`öc‹e
(
vp
, 
mëÆbn
);

281 
	`muãx_exô
(&
bufˇche_lock
);

282 i‡(
cbp
 =
NULL
)

289 i‡(
bp
)

290 
	`bªl£
(
bp
, 0);

292 
x≠
->
ö_exi°s
 = 1;

293 
bp
 = 
	`gëblk
(
vp
, 
mëÆbn
, 
mp
->
m¡_°©
.
f_iosize
, 0, 0);

294 i‡(
bp
 =
NULL
) {

302  (
ENOMEM
);

304 i‡(
bp
->
b_oÊags
 & (
BO_DONE
 | 
BO_DELWRI
)) {

305 
	`åa˚
(
TR_BREADHIT
, 
	`∑ck
(
vp
, 
size
), 
mëÆbn
);

307 #ifde‡
DIAGNOSTIC


308 i‡(!
daddr
)

309 
	`∑nic
("ext2fs_bmaparry: indirect blockÇot in cache");

312 
	`åa˚
(
TR_BREADMISS
, 
	`∑ck
(
vp
, 
size
), 
mëÆbn
);

313 
bp
->
b_blkno
 = 
	`blk±πodb
(
ump
, 
daddr
);

314 
bp
->
b_Êags
 |
B_READ
;

315 
	`VOP_STRATEGY
(
vp
, 
bp
);

316 
cuæwp
->
l_ru
.
ru_öblock
++;

317 i‡((
îr‹
 = 
	`biowaô
(
bp
)) != 0) {

318 
	`bªl£
(
bp
, 0);

319  (
îr‹
);

324 
daddr
 = 
	`fs2h32
(((
öt32_t
 *)
bp
->
b_d©a
)[
x≠
->
ö_off
]);

325 i‡(
num
 =1 && 
daddr
 && 
ru≈
)

327 
bn
 = 
x≠
->
ö_off
 + 1;

328 
bn
 < 
	`MNINDIR
(
ump
Ë&& *
ru≈
 < 
maxrun
 &&

329 
	`is_£quítül
(
ump
, ((
öt32_t
 *)
bp
->
b_d©a
)[
bn
 - 1],

330 ((
öt32_t
 *)
bp
->
b_d©a
)[
bn
]);

331 ++
bn
, ++*
ru≈
);

333 i‡(
bp
)

334 
	`bªl£
(
bp
, 0);

336 
daddr
 = 
	`blk±πodb
(
ump
, daddr);

337 *
b≈
 = 
daddr
 == 0 ? -1 : daddr;

339 
	}
}

	@ext2fs_bswap.c

28 
	~<sys/cdefs.h
>

29 
__KERNEL_RCSID
(0, "$NetBSD:Éxt2fs_bswap.c,v 1.19 2013/01/22 09:39:15 dholland Exp $");

31 
	~<sys/ty≥s.h
>

32 
	~<ufs/ext2fs/ext2fs.h
>

33 
	~<ufs/ext2fs/ext2fs_döode.h
>

35 #i‡
deföed
(
_KERNEL
)

36 
	~<sys/sy°m.h
>

38 
	~<°rög.h
>

42 #i‡
BYTE_ORDER
 =
BIG_ENDIAN


44 
	$e2fs_sb_bsw≠
(
ext2fs
 *
ﬁd
, ext2f†*
√w
)

46 
	`¥ötf
("I¿fûe: %s, fun: %s,löío: %d\n",
__FILE__
, 
__func__
, 
__LINE__
);

48 
	`mem˝y
(
√w
, 
ﬁd
, (
ext2fs
));

49 
√w
->
e2fs_icou¡
 = 
	`bsw≠32
(
ﬁd
->e2fs_icount);

50 
√w
->
e2fs_bcou¡
 = 
	`bsw≠32
(
ﬁd
->e2fs_bcount);

51 
√w
->
e2fs_rbcou¡
 = 
	`bsw≠32
(
ﬁd
->e2fs_rbcount);

52 
√w
->
e2fs_fbcou¡
 = 
	`bsw≠32
(
ﬁd
->e2fs_fbcount);

53 
√w
->
e2fs_ficou¡
 = 
	`bsw≠32
(
ﬁd
->e2fs_ficount);

54 
√w
->
e2fs_fú°_dblock
 = 
	`bsw≠32
(
ﬁd
->e2fs_first_dblock);

55 
√w
->
e2fs_log_bsize
 = 
	`bsw≠32
(
ﬁd
->e2fs_log_bsize);

56 
√w
->
e2fs_fsize
 = 
	`bsw≠32
(
ﬁd
->e2fs_fsize);

57 
√w
->
e2fs_bpg
 = 
	`bsw≠32
(
ﬁd
->e2fs_bpg);

58 
√w
->
e2fs_Âg
 = 
	`bsw≠32
(
ﬁd
->e2fs_fpg);

59 
√w
->
e2fs_ùg
 = 
	`bsw≠32
(
ﬁd
->e2fs_ipg);

60 
√w
->
e2fs_mtime
 = 
	`bsw≠32
(
ﬁd
->e2fs_mtime);

61 
√w
->
e2fs_wtime
 = 
	`bsw≠32
(
ﬁd
->e2fs_wtime);

62 
√w
->
e2fs_m¡_cou¡
 = 
	`bsw≠16
(
ﬁd
->e2fs_mnt_count);

63 
√w
->
e2fs_max_m¡_cou¡
 = 
	`bsw≠16
(
ﬁd
->e2fs_max_mnt_count);

64 
√w
->
e2fs_magic
 = 
	`bsw≠16
(
ﬁd
->e2fs_magic);

65 
√w
->
e2fs_°©e
 = 
	`bsw≠16
(
ﬁd
->e2fs_state);

66 
√w
->
e2fs_beh
 = 
	`bsw≠16
(
ﬁd
->e2fs_beh);

67 
√w
->
e2fs_möªv
 = 
	`bsw≠16
(
ﬁd
->e2fs_minrev);

68 
√w
->
e2fs_œ°fsck
 = 
	`bsw≠32
(
ﬁd
->e2fs_lastfsck);

69 
√w
->
e2fs_fsckötv
 = 
	`bsw≠32
(
ﬁd
->e2fs_fsckintv);

70 
√w
->
e2fs_¸ót‹
 = 
	`bsw≠32
(
ﬁd
->e2fs_creator);

71 
√w
->
e2fs_ªv
 = 
	`bsw≠32
(
ﬁd
->e2fs_rev);

72 
√w
->
e2fs_ruid
 = 
	`bsw≠16
(
ﬁd
->e2fs_ruid);

73 
√w
->
e2fs_rgid
 = 
	`bsw≠16
(
ﬁd
->e2fs_rgid);

74 
√w
->
e2fs_fú°_öo
 = 
	`bsw≠32
(
ﬁd
->e2fs_first_ino);

75 
√w
->
e2fs_öode_size
 = 
	`bsw≠16
(
ﬁd
->e2fs_inode_size);

76 
√w
->
e2fs_block_group_ƒ
 = 
	`bsw≠16
(
ﬁd
->e2fs_block_group_nr);

77 
√w
->
e2fs_„©uªs_com∑t
 = 
	`bsw≠32
(
ﬁd
->e2fs_features_compat);

78 
√w
->
e2fs_„©uªs_öcom∑t
 = 
	`bsw≠32
(
ﬁd
->e2fs_features_incompat);

79 
√w
->
e2fs_„©uªs_rocom∑t
 = 
	`bsw≠32
(
ﬁd
->e2fs_features_rocompat);

80 
√w
->
e2fs_Ægo
 = 
	`bsw≠32
(
ﬁd
->e2fs_algo);

81 
√w
->
e2fs_ª£rved_ngdb
 = 
	`bsw≠16
(
ﬁd
->e2fs_reserved_ngdb);

82 
	}
}

84 
	$e2fs_cg_bsw≠
(
ext2_gd
 *
ﬁd
, ext2_gd *
√w
, 
size
)

86 
	`¥ötf
("I¿fûe: %s, fun: %s,löío: %d\n",
__FILE__
, 
__func__
, 
__LINE__
);

87 
i
;

89 
i
 = 0; i < (
size
 / ()(
ext2_gd
)); i++) {

90 
√w
[
i
].
ext2bgd_b_bôm≠
 = 
	`bsw≠32
(
ﬁd
[i].ext2bgd_b_bitmap);

91 
√w
[
i
].
ext2bgd_i_bôm≠
 = 
	`bsw≠32
(
ﬁd
[i].ext2bgd_i_bitmap);

92 
√w
[
i
].
ext2bgd_i_èbÀs
 = 
	`bsw≠32
(
ﬁd
[i].ext2bgd_i_tables);

93 
√w
[
i
].
ext2bgd_nb‰ì
 = 
	`bsw≠16
(
ﬁd
[i].ext2bgd_nbfree);

94 
√w
[
i
].
ext2bgd_ni‰ì
 = 
	`bsw≠16
(
ﬁd
[i].ext2bgd_nifree);

95 
√w
[
i
].
ext2bgd_ndús
 = 
	`bsw≠16
(
ﬁd
[i].ext2bgd_ndirs);

97 
	}
}

99 
	$e2fs_i_bsw≠
(
ext2fs_döode
 *
ﬁd
, ext2fs_döodê*
√w
)

101 
	`¥ötf
("I¿fûe: %s, fun: %s,löío: %d\n",
__FILE__
, 
__func__
, 
__LINE__
);

102 
√w
->
e2di_mode
 = 
	`bsw≠16
(
ﬁd
->e2di_mode);

103 
√w
->
e2di_uid
 = 
	`bsw≠16
(
ﬁd
->e2di_uid);

104 
√w
->
e2di_gid
 = 
	`bsw≠16
(
ﬁd
->e2di_gid);

105 
√w
->
e2di_∆ök
 = 
	`bsw≠16
(
ﬁd
->e2di_nlink);

106 
√w
->
e2di_size
 = 
	`bsw≠32
(
ﬁd
->e2di_size);

107 
√w
->
e2di_©ime
 = 
	`bsw≠32
(
ﬁd
->e2di_atime);

108 
√w
->
e2di_˘ime
 = 
	`bsw≠32
(
ﬁd
->e2di_ctime);

109 
√w
->
e2di_mtime
 = 
	`bsw≠32
(
ﬁd
->e2di_mtime);

110 
√w
->
e2di_dtime
 = 
	`bsw≠32
(
ﬁd
->e2di_dtime);

111 
√w
->
e2di_nblock
 = 
	`bsw≠32
(
ﬁd
->e2di_nblock);

112 
√w
->
e2di_Êags
 = 
	`bsw≠32
(
ﬁd
->e2di_flags);

113 
√w
->
e2di_vîsi⁄
 = 
	`bsw≠32
(
ﬁd
->e2di_version);

114 
√w
->
e2di_gí
 = 
	`bsw≠32
(
ﬁd
->e2di_gen);

115 
√w
->
e2di_Á˛
 = 
	`bsw≠32
(
ﬁd
->e2di_facl);

116 
√w
->
e2di_da˛
 = 
	`bsw≠32
(
ﬁd
->e2di_dacl);

117 
√w
->
e2di_Áddr
 = 
	`bsw≠32
(
ﬁd
->e2di_faddr);

118 
√w
->
e2di_nblock_high
 = 
	`bsw≠16
(
ﬁd
->e2di_nblock_high);

119 
√w
->
e2di_Á˛_high
 = 
	`bsw≠16
(
ﬁd
->e2di_facl_high);

120 
√w
->
e2di_uid_high
 = 
	`bsw≠16
(
ﬁd
->e2di_uid_high);

121 
√w
->
e2di_gid_high
 = 
	`bsw≠16
(
ﬁd
->e2di_gid_high);

122 
	`mem˝y
(&
√w
->
e2di_blocks
[0], &
ﬁd
->e2di_blocks[0],

123 (
EXT2FS_NDADDR
 + 
EXT2FS_NIADDR
Ë* (
uöt32_t
));

124 
	}
}

	@ext2fs_dinode.h

67 #i‚de‡
_UFS_EXT2FS_EXT2FS_DINODE_H_


68 
	#_UFS_EXT2FS_EXT2FS_DINODE_H_


	)

70 
	~<sys/°©.h
>

78 
	#EXT2_BADBLKINO
 ((
öo_t
)1)

	)

79 
	#EXT2_ROOTINO
 ((
öo_t
)2)

	)

80 
	#EXT2_ACLIDXINO
 ((
öo_t
)3)

	)

81 
	#EXT2_ACLDATAINO
 ((
öo_t
)4)

	)

82 
	#EXT2_BOOTLOADERINO
 ((
öo_t
)5)

	)

83 
	#EXT2_UNDELDIRINO
 ((
öo_t
)6)

	)

84 
	#EXT2_RESIZEINO
 ((
öo_t
)7)

	)

85 
	#EXT2_JOURNALINO
 ((
öo_t
)8)

	)

86 
	#EXT2_FIRSTINO
 ((
öo_t
)11)

	)

100 
	#EXT2FS_NDADDR
 12

	)

101 
	#EXT2FS_NIADDR
 3

	)

103 
	#EXT2_MAXSYMLINKLEN
 ((
EXT2FS_NDADDR
+
EXT2FS_NIADDR
Ë*  (
uöt32_t
))

	)

105 
	sext2fs_döode
 {

106 
uöt16_t
 
	me2di_mode
;

107 
uöt16_t
 
	me2di_uid
;

108 
uöt32_t
 
	me2di_size
;

109 
uöt32_t
 
	me2di_©ime
;

110 
uöt32_t
 
	me2di_˘ime
;

111 
uöt32_t
 
	me2di_mtime
;

112 
uöt32_t
 
	me2di_dtime
;

113 
uöt16_t
 
	me2di_gid
;

114 
uöt16_t
 
	me2di_∆ök
;

115 
uöt32_t
 
	me2di_nblock
;

116 
uöt32_t
 
	me2di_Êags
;

117 
uöt32_t
 
	me2di_vîsi⁄
;

118 
uöt32_t
 
	me2di_blocks
[
EXT2FS_NDADDR
+
EXT2FS_NIADDR
];

120 
uöt32_t
 
	me2di_gí
;

121 
uöt32_t
 
	me2di_Á˛
;

122 
uöt32_t
 
	me2di_da˛
;

123 
uöt32_t
 
	me2di_Áddr
;

124 
uöt16_t
 
	me2di_nblock_high
;

125 
uöt16_t
 
	me2di_Á˛_high
;

126 
uöt16_t
 
	me2di_uid_high
;

127 
uöt16_t
 
	me2di_gid_high
;

128 
uöt32_t
 
	me2di_löux_ª£rved3
;

133 
	#E2MAXSYMLINKLEN
 ((
EXT2FS_NDADDR
 + 
EXT2FS_NIADDR
Ë* (
uöt32_t
))

	)

136 
	#EXT2_IEXEC
 0000100

	)

137 
	#EXT2_IWRITE
 0000200

	)

138 
	#EXT2_IREAD
 0000400

	)

139 
	#EXT2_ISVTX
 0001000

	)

140 
	#EXT2_ISGID
 0002000

	)

141 
	#EXT2_ISUID
 0004000

	)

144 
	#EXT2_IFMT
 0170000

	)

145 
	#EXT2_IFIFO
 0010000

	)

146 
	#EXT2_IFCHR
 0020000

	)

147 
	#EXT2_IFDIR
 0040000

	)

148 
	#EXT2_IFBLK
 0060000

	)

149 
	#EXT2_IFREG
 0100000

	)

150 
	#EXT2_IFLNK
 0120000

	)

151 
	#EXT2_IFSOCK
 0140000

	)

154 
	#EXT2_SECRM
 0x00000001

	)

155 
	#EXT2_UNRM
 0x00000002

	)

156 
	#EXT2_COMPR
 0x00000004

	)

157 
	#EXT2_SYNC
 0x00000008

	)

158 
	#EXT2_IMMUTABLE
 0x00000010

	)

159 
	#EXT2_APPEND
 0x00000020

	)

160 
	#EXT2_NODUMP
 0x00000040

	)

161 
	#EXT2_NOATIME
 0x00000080

	)

162 
	#EXT2_INDEX
 0x00001000

	)

163 
	#EXT2_IMAGIC
 0x00002000

	)

164 
	#EXT2_JOURNAL_DATA
 0x00004000

	)

165 
	#EXT2_NOTAIL
 0x00008000

	)

166 
	#EXT2_DIRSYNC
 0x00010000

	)

167 
	#EXT2_TOPDIR
 0x00020000

	)

168 
	#EXT2_HUGE_FILE
 0x00040000

	)

169 
	#EXT2_EXTENTS
 0x00080000

	)

170 
	#EXT2_EOFBLOCKS
 0x00400000

	)

173 
	#EXT4_INDEX
 0x00001000

	)

177 
	#EXT2_REV0_DINODE_SIZE
 (
ext2fs_döode
)

	)

178 
	#EXT2_DINODE_SIZE
(
fs
Ë((fs)->
e2fs
.
e2fs_ªv
 > 
E2FS_REV0
 ? \

179 (
fs
)->
e2fs
.
e2fs_öode_size
 : \

180 
EXT2_REV0_DINODE_SIZE
)

	)

190 
	#e2di_rdev
 
e2di_blocks
[0]

	)

191 
	#e2di_sh‹éök
 
e2di_blocks


	)

194 #i‡
BYTE_ORDER
 =
LITTLE_ENDIAN


195 
	#e2fs_ûﬂd
(
ﬁd
, 
√w
) \

196 
	`mem˝y
((
√w
),(
ﬁd
),(
ext2fs_döode
))

	)

197 
	#e2fs_ißve
(
ﬁd
, 
√w
) \

198 
	`mem˝y
((
√w
),(
ﬁd
),(
ext2fs_döode
))

	)

200 
e2fs_i_bsw≠
(
ext2fs_döode
 *, ext2fs_dinode *);

201 
	#e2fs_ûﬂd
(
ﬁd
, 
√w
Ë
	`e2fs_i_bsw≠
((ﬁd), (√w))

	)

202 
	#e2fs_ißve
(
ﬁd
, 
√w
Ë
	`e2fs_i_bsw≠
((ﬁd), (√w))

	)

	@ext2fs_dir.h

67 #i‚de‡
_UFS_EXT2FS_EXT2FS_DIR_H_


68 
	#_UFS_EXT2FS_EXT2FS_DIR_H_


	)

70 
	~<ufs/ext2fs/ext2fs_döode.h
>

77 
	#doff_t
 
öt32_t


	)

78 
	#EXT2FS_MAXDIRSIZE
 
INT32_MAX


	)

107 
	#EXT2FS_MAXNAMLEN
 255

	)

109 
	sext2fs_dúe˘
 {

110 
uöt32_t
 
	me2d_öo
;

111 
uöt16_t
 
	me2d_ª˛í
;

112 
uöt8_t
 
	me2d_«mÀn
;

113 
uöt8_t
 
	me2d_ty≥
;

114 
	me2d_«me
[
EXT2FS_MAXNAMLEN
];

117 
	eext2fs_¶Ÿ°©us
 {

118 
	mNONE
,

119 
	mCOMPACT
,

120 
	mFOUND


123 
	sext2fs_£¨ch¶Ÿ
 {

124 
ext2fs_¶Ÿ°©us
 
	m¶Ÿ°©us
;

125 
doff_t
 
	m¶Ÿoff£t
;

126 
	m¶Ÿsize
;

127 
	m¶Ÿ‰ì•a˚
;

128 
	m¶Ÿ√eded
;

132 
	#EXT2_FT_UNKNOWN
 0

	)

133 
	#EXT2_FT_REG_FILE
 1

	)

134 
	#EXT2_FT_DIR
 2

	)

135 
	#EXT2_FT_CHRDEV
 3

	)

136 
	#EXT2_FT_BLKDEV
 4

	)

137 
	#EXT2_FT_FIFO
 5

	)

138 
	#EXT2_FT_SOCK
 6

	)

139 
	#EXT2_FT_SYMLINK
 7

	)

141 
	#EXT2_FT_MAX
 8

	)

143 
	#E2IFTODT
(
mode
Ë(((modeË& 0170000Ë>> 12)

	)

145 
__ölöe
 
uöt8_t
 
	$öŸ2ext2dt
(
uöt16_t
Ë
__unu£d
;

146 
__ölöe
 
uöt8_t


147 
	$öŸ2ext2dt
(
uöt16_t
 
ty≥
)

150 
ty≥
) {

151 
	`E2IFTODT
(
EXT2_IFIFO
):

152  
EXT2_FT_FIFO
;

153 
	`E2IFTODT
(
EXT2_IFCHR
):

154  
EXT2_FT_CHRDEV
;

155 
	`E2IFTODT
(
EXT2_IFDIR
):

156  
EXT2_FT_DIR
;

157 
	`E2IFTODT
(
EXT2_IFBLK
):

158  
EXT2_FT_BLKDEV
;

159 
	`E2IFTODT
(
EXT2_IFREG
):

160  
EXT2_FT_REG_FILE
;

161 
	`E2IFTODT
(
EXT2_IFLNK
):

162  
EXT2_FT_SYMLINK
;

163 
	`E2IFTODT
(
EXT2_IFSOCK
):

164  
EXT2_FT_SOCK
;

168 
	}
}

177 
	#EXT2FS_DIRSIZ
(
Àn
Ë
	`roundup2
(8 +Üí, 4)

	)

183 
	sext2fs_dúãm∂©e
 {

184 
uöt32_t
 
	mdŸ_öo
;

185 
öt16_t
 
	mdŸ_ª˛í
;

186 
uöt8_t
 
	mdŸ_«mÀn
;

187 
uöt8_t
 
	mdŸ_ty≥
;

188 
	mdŸ_«me
[4];

189 
uöt32_t
 
	mdŸdŸ_öo
;

190 
öt16_t
 
	mdŸdŸ_ª˛í
;

191 
uöt8_t
 
	mdŸdŸ_«mÀn
;

192 
uöt8_t
 
	mdŸdŸ_ty≥
;

193 
	mdŸdŸ_«me
[4];

201 
	#EXT2_DIR_PAD
 4

	)

202 
	#EXT2_DIR_ROUND
 (
EXT2_DIR_PAD
 - 1)

	)

203 
	#EXT2_DIR_REC_LEN
(
«mñí
) \

204 (((
«mñí
Ë+ 8 + 
EXT2_DIR_ROUND
Ë& ~EXT2_DIR_ROUND)

	)

	@ext2fs_extents.c

31 
	~<sys/cdefs.h
>

32 
__KERNEL_RCSID
(0, "$NetBSD:Éxt2fs_extents.c,v 1.1 2016/06/03 15:35:48 christos Exp $");

34 
	~<sys/∑øm.h
>

35 
	~<sys/sy°m.h
>

36 
	~<sys/ªsour˚v¨.h
>

37 
	~<sys/kî√l.h
>

38 
	~<sys/fûe.h
>

39 
	~<sys/°©.h
>

40 
	~<sys/buf.h
>

41 
	~<sys/¥oc.h
>

42 
	~<sys/mou¡.h
>

43 
	~<sys/vnode.h
>

44 
	~<sys/sig«lv¨.h
>

45 
	~<sys/kauth.h
>

47 
	~<ufs/ufs/öode.h
>

48 
	~<ufs/ufs/ufsmou¡.h
>

49 
	~<ufs/ufs/ufs_exã∫.h
>

52 
	~<ufs/ext2fs/ext2fs.h
>

53 
	~<ufs/ext2fs/ext2fs_exã¡s.h
>

54 
	~<ufs/ext2fs/ext2fs_exã∫.h
>

58 
boﬁ


59 
	$ext4_ext_bö£¨ch_ödex
(
öode
 *
ù
, 
ext4_exã¡_∑th
 *
∑th
,

60 
daddr_t
 
lbn
, daddr_à*
fú°_lbn
, daddr_à*
œ°_lbn
)

62 
ext4_exã¡_hódî
 *
ehp
 = 
∑th
->
ï_hódî
;

63 
ext4_exã¡_ödex
 *
fú°
, *
œ°
, *
l
, *
r
, *
m
;

65 
fú°
 = (
ext4_exã¡_ödex
 *)(*)(
ehp
 + 1);

66 
œ°
 = 
fú°
 + 
ehp
->
eh_ecou¡
 - 1;

67 
l
 = 
fú°
;

68 
r
 = 
œ°
;

69 
l
 <
r
) {

70 
m
 = 
l
 + (
r
 -Ü) / 2;

71 i‡(
lbn
 < 
m
->
ei_blk
)

72 
r
 = 
m
 - 1;

74 
l
 = 
m
 + 1;

77 i‡(
l
 =
fú°
) {

78 
∑th
->
ï_•¨£_ext
.
e_blk
 = *
fú°_lbn
;

79 
∑th
->
ï_•¨£_ext
.
e_Àn
 = 
fú°
->
ei_blk
 - *
fú°_lbn
;

80 
∑th
->
ï_•¨£_ext
.
e_°¨t_hi
 = 0;

81 
∑th
->
ï_•¨£_ext
.
e_°¨t_lo
 = 0;

82 
∑th
->
ï_is_•¨£
 = 
åue
;

83  
åue
;

85 
∑th
->
ï_ödex
 = 
l
 - 1;

86 *
fú°_lbn
 = 
∑th
->
ï_ödex
->
ei_blk
;

87 i‡(
∑th
->
ï_ödex
 < 
œ°
)

88 *
œ°_lbn
 = 
l
->
ei_blk
 - 1;

89  
Ál£
;

90 
	}
}

93 
	$ext4_ext_bö£¨ch
(
öode
 *
ù
, 
ext4_exã¡_∑th
 *
∑th
, 
daddr_t
 
lbn
,

94 
daddr_t
 
fú°_lbn
, daddr_à
œ°_lbn
)

96 
ext4_exã¡_hódî
 *
ehp
 = 
∑th
->
ï_hódî
;

97 
ext4_exã¡
 *
fú°
, *
l
, *
r
, *
m
;

99 i‡(
ehp
->
eh_ecou¡
 == 0)

102 
fú°
 = (
ext4_exã¡
 *)(*)(
ehp
 + 1);

103 
l
 = 
fú°
;

104 
r
 = 
fú°
 + 
ehp
->
eh_ecou¡
 - 1;

105 
l
 <
r
) {

106 
m
 = 
l
 + (
r
 -Ü) / 2;

107 i‡(
lbn
 < 
m
->
e_blk
)

108 
r
 = 
m
 - 1;

110 
l
 = 
m
 + 1;

113 i‡(
l
 =
fú°
) {

114 
∑th
->
ï_•¨£_ext
.
e_blk
 = 
fú°_lbn
;

115 
∑th
->
ï_•¨£_ext
.
e_Àn
 = 
fú°
->
e_blk
 - 
fú°_lbn
;

116 
∑th
->
ï_•¨£_ext
.
e_°¨t_hi
 = 0;

117 
∑th
->
ï_•¨£_ext
.
e_°¨t_lo
 = 0;

118 
∑th
->
ï_is_•¨£
 = 
åue
;

121 
∑th
->
ï_ext
 = 
l
 - 1;

122 i‡(
∑th
->
ï_ext
->
e_blk
 +Ö©h->ï_ext->
e_Àn
 <
lbn
) {

123 
∑th
->
ï_•¨£_ext
.
e_blk
 =Ö©h->
ï_ext
->e_blk +

124 
∑th
->
ï_ext
->
e_Àn
;

125 i‡(
l
 <(
fú°
 + 
ehp
->
eh_ecou¡
 - 1))

126 
∑th
->
ï_•¨£_ext
.
e_Àn
 = 
l
->
e_blk
 -

127 
∑th
->
ï_•¨£_ext
.
e_blk
;

129 
∑th
->
ï_•¨£_ext
.
e_Àn
 = 
œ°_lbn
 -

130 
∑th
->
ï_•¨£_ext
.
e_blk
 + 1;

131 
∑th
->
ï_•¨£_ext
.
e_°¨t_hi
 = 0;

132 
∑th
->
ï_•¨£_ext
.
e_°¨t_lo
 = 0;

133 
∑th
->
ï_is_•¨£
 = 
åue
;

135 
	}
}

141 
	$ext4_ext_ö_ˇche
(
öode
 *
ù
, 
daddr_t
 
lbn
, 
ext4_exã¡
 *
ï
)

143 
ext4_exã¡_ˇche
 *
e˝
;

144 
ªt
 = 
EXT4_EXT_CACHE_NO
;

146 
e˝
 = &
ù
->
öode_ext
.
e2fs
.
i_ext_ˇche
;

149 i‡(
e˝
->
ec_ty≥
 =
EXT4_EXT_CACHE_NO
)

150  (
ªt
);

152 i‡(
lbn
 >
e˝
->
ec_blk
 &&Üb¿<É˝->ec_blk +É˝->
ec_Àn
) {

153 
ï
->
e_blk
 = 
e˝
->
ec_blk
;

154 
ï
->
e_°¨t_lo
 = 
e˝
->
ec_°¨t
 & 0xffffffff;

155 
ï
->
e_°¨t_hi
 = 
e˝
->
ec_°¨t
 >> 32 & 0xffff;

156 
ï
->
e_Àn
 = 
e˝
->
ec_Àn
;

157 
ªt
 = 
e˝
->
ec_ty≥
;

159  
ªt
;

160 
	}
}

166 
	$ext4_ext_put_ˇche
(
öode
 *
ù
, 
ext4_exã¡
 *
ï
, 
ty≥
)

168 
ext4_exã¡_ˇche
 *
e˝
;

170 
e˝
 = &
ù
->
öode_ext
.
e2fs
.
i_ext_ˇche
;

171 
e˝
->
ec_ty≥
 = 
ty≥
;

172 
e˝
->
ec_blk
 = 
ï
->
e_blk
;

173 
e˝
->
ec_Àn
 = 
ï
->
e_Àn
;

174 
e˝
->
ec_°¨t
 = (
daddr_t
)
ï
->
e_°¨t_hi
 << 32 |Ép->
e_°¨t_lo
;

175 
	}
}

180 
ext4_exã¡_∑th
 *

181 
	$ext4_ext_föd_exã¡
(
m_ext2fs
 *
fs
, 
öode
 *
ù
,

182 
daddr_t
 
lbn
, 
ext4_exã¡_∑th
 *
∑th
)

184 
ext4_exã¡_hódî
 *
ehp
;

185 
uöt16_t
 
i
;

186 
îr‹
, 
size
;

187 
daddr_t
 
nblk
;

189 
ehp
 = (
ext4_exã¡_hódî
 *)
ù
->
i_dö
.
e2fs_dö
->
e2di_blocks
;

191 i‡(
ehp
->
eh_magic
 !
EXT4_EXT_MAGIC
)

192  
NULL
;

194 
∑th
->
ï_hódî
 = 
ehp
;

196 
daddr_t
 
fú°_lbn
 = 0;

197 
daddr_t
 
œ°_lbn
 = 
	`lblkno
(
ù
->
i_e2fs
, ip->
i_size
);

199 
i
 = 
ehp
->
eh_dïth
; i != 0; --i) {

200 
∑th
->
ï_dïth
 = 
i
;

201 
∑th
->
ï_ext
 = 
NULL
;

202 i‡(
	`ext4_ext_bö£¨ch_ödex
(
ù
, 
∑th
, 
lbn
, &
fú°_lbn
,

203 &
œ°_lbn
)) {

204  
∑th
;

207 
nblk
 = (
daddr_t
)
∑th
->
ï_ödex
->
ei_Àaf_hi
 << 32 |

208 
∑th
->
ï_ödex
->
ei_Àaf_lo
;

209 
size
 = 
	`blksize
(
fs
, 
ù
, 
nblk
);

210 i‡(
∑th
->
ï_bp
 !
NULL
) {

211 
	`bªl£
(
∑th
->
ï_bp
, 0);

212 
∑th
->
ï_bp
 = 
NULL
;

214 
îr‹
 = 
	`bªad
(
ù
->
i_devvp
, 
	`fsbtodb
(
fs
, 
nblk
), 
size
, 0,

215 &
∑th
->
ï_bp
);

216 i‡(
îr‹
) {

217 
	`bªl£
(
∑th
->
ï_bp
, 0);

218 
∑th
->
ï_bp
 = 
NULL
;

219  
NULL
;

221 
ehp
 = (
ext4_exã¡_hódî
 *)
∑th
->
ï_bp
->
b_d©a
;

222 
∑th
->
ï_hódî
 = 
ehp
;

225 
∑th
->
ï_dïth
 = 
i
;

226 
∑th
->
ï_ext
 = 
NULL
;

227 
∑th
->
ï_ödex
 = 
NULL
;

228 
∑th
->
ï_is_•¨£
 = 
Ál£
;

230 
	`ext4_ext_bö£¨ch
(
ù
, 
∑th
, 
lbn
, 
fú°_lbn
, 
œ°_lbn
);

231  
∑th
;

232 
	}
}

	@ext2fs_extents.h

31 #i‚de‡
_UFS_EXT2FS_EXT2FS_EXTENTS_H_


32 
	#_UFS_EXT2FS_EXT2FS_EXTENTS_H_


	)

34 
	~<sys/ty≥s.h
>

35 
	~<ufs/ufs/öode.h
>

36 
	#EXT4_EXT_MAGIC
 0xf30a

	)

38 
	#EXT4_EXT_CACHE_NO
 0

	)

39 
	#EXT4_EXT_CACHE_GAP
 1

	)

40 
	#EXT4_EXT_CACHE_IN
 2

	)

45 
	sext4_exã¡
 {

46 
uöt32_t
 
	me_blk
;

47 
uöt16_t
 
	me_Àn
;

48 
uöt16_t
 
	me_°¨t_hi
;

49 
uöt32_t
 
	me_°¨t_lo
;

55 
	sext4_exã¡_ödex
 {

56 
uöt32_t
 
	mei_blk
;

57 
uöt32_t
 
	mei_Àaf_lo
;

59 
uöt16_t
 
	mei_Àaf_hi
;

60 
uöt16_t
 
	mei_unu£d
;

66 
	sext4_exã¡_hódî
 {

67 
uöt16_t
 
	meh_magic
;

68 
uöt16_t
 
	meh_ecou¡
;

69 
uöt16_t
 
	meh_max
;

70 
uöt16_t
 
	meh_dïth
;

71 
uöt32_t
 
	meh_gí
;

77 
	sext4_exã¡_ˇche
 {

78 
daddr_t
 
	mec_°¨t
;

79 
uöt32_t
 
	mec_blk
;

80 
uöt32_t
 
	mec_Àn
;

81 
uöt32_t
 
	mec_ty≥
;

87 
	sext4_exã¡_∑th
 {

88 
uöt16_t
 
	mï_dïth
;

89 
buf
 *
	mï_bp
;

90 
boﬁ
 
	mï_is_•¨£
;

92 
ext4_exã¡
 
	mï_•¨£_ext
;

93 
ext4_exã¡
 *
	mï_ext
;

95 
ext4_exã¡_ödex
 *
	mï_ödex
;

96 
ext4_exã¡_hódî
 *
	mï_hódî
;

99 
	göode
;

100 
	gm_ext2fs
;

102 
ext4_ext_ö_ˇche
(
öode
 *, 
daddr_t
, 
ext4_exã¡
 *);

103 
ext4_ext_put_ˇche
(
öode
 *, 
ext4_exã¡
 *, );

104 
ext4_exã¡_∑th
 *
ext4_ext_föd_exã¡
(
m_ext2fs
 *
fs
,

105 
öode
 *, 
daddr_t
, 
ext4_exã¡_∑th
 *);

	@ext2fs_extern.h

62 #i‚de‡
_UFS_EXT2FS_EXT2FS_EXTERN_H_


63 
	#_UFS_EXT2FS_EXT2FS_EXTERN_H_


	)

65 
	gbuf
;

66 
	gfid
;

67 
	gm_ext2fs
;

68 
	göode
;

69 
	gmou¡
;

70 
	g«meid©a
;

71 
	glwp
;

72 
	g¥oc
;

73 
	g°©vfs
;

74 
	gtimevÆ
;

75 
	gufsmou¡
;

76 
	guio
;

77 
	gvnode
;

78 
	gmbuf
;

79 
	gcomp⁄íäame
;

80 
	gufs_lookup_ªsu…s
;

81 
	gext2fs_£¨ch¶Ÿ
;

82 
	gext2fs_dúe˘
;

84 
poﬁ
 
ext2fs_öode_poﬁ
;

85 
poﬁ
 
ext2fs_döode_poﬁ
;

87 
	#EXT2FS_ITIMES
(
ù
, 
acc
, 
mod
, 
¸e
) \

88 (
ù
)->
i_Êag
 & (
IN_ACCESS
 | 
IN_CHANGE
 | 
IN_UPDATE
 | 
IN_MODIFY
)) \

89 
	`ext2fs_ôimes
(
ù
, 
acc
, 
mod
, 
¸e
)

	)

91 
__BEGIN_DECLS


94 
ext2fs_Æloc
(
öode
 *, 
daddr_t
, daddr_à, 
kauth_¸ed_t
,

95 
daddr_t
 *);

96 
ext2fs_ªÆloccg
(
öode
 *, 
daddr_t
, daddr_t, , ,

97 
kauth_¸ed_t
, 
buf
 **);

98 
ext2fs_vÆloc
(
vnode
 *, , 
kauth_¸ed_t
, vnode **);

100 
daddr_t
 
ext2fs_blk¥ef
(
öode
 *, daddr_t, , 
öt32_t
 *);

101 
ext2fs_blk‰ì
(
öode
 *, 
daddr_t
);

102 
ext2fs_v‰ì
(
vnode
 *, 
öo_t
, );

105 
ext2fs_bÆloc
(
öode
 *, 
daddr_t
, , 
kauth_¸ed_t
,

106 
buf
 **, );

107 
ext2fs_g›_Æloc
(
vnode
 *, 
off_t
, off_t, , 
kauth_¸ed_t
);

110 
ext2fs_bm≠
(*);

113 
uöt64_t
 
ext2fs_size
(
öode
 *);

114 
ext2fs_£tsize
(
öode
 *, 
uöt64_t
);

115 
uöt64_t
 
ext2fs_nblock
(
öode
 *);

116 
ext2fs_£äblock
(
öode
 *, 
uöt64_t
);

117 
ext2fs_upd©e
(
vnode
 *, c⁄° 
time•ec
 *,

118 c⁄° 
time•ec
 *, );

119 
ext2fs_åunˇã
(
vnode
 *, 
off_t
, , 
kauth_¸ed_t
);

120 
ext2fs_öa˘ive
(*);

123 
ext2fs_ªaddú
(*);

124 
ext2fs_lookup
(*);

125 
ext2fs_£¨ch_dúblock
(
öode
 *, *, *,

126 c⁄° *, , *, 
doff_t
 *, doff_t *, doff_t *,

127 
ext2fs_£¨ch¶Ÿ
 *);

128 
ext2fs_dúíãr
(
öode
 *, 
vnode
 *,

129 c⁄° 
ufs_lookup_ªsu…s
 *,

130 
comp⁄íäame
 *);

131 
ext2fs_dúªmove
(
vnode
 *, c⁄° 
ufs_lookup_ªsu…s
 *,

132 
comp⁄íäame
 *);

133 
ext2fs_dúªwrôe
(
öode
 *, c⁄° 
ufs_lookup_ªsu…s
 *,

134 
öode
 *, 
comp⁄íäame
 *);

135 
ext2fs_dúem±y
(
öode
 *, 
öo_t
, 
kauth_¸ed_t
);

137 
ext2fs_add_íåy
 (
vnode
 *, 
ext2fs_dúe˘
 *, c⁄° 
ufs_lookup_ªsu…s
 *
uÃ
);

141 
ext2fs_blk©off
(
vnode
 *, 
off_t
, **, 
buf
 **);

142 
ext2fs_‰agac˘
(
m_ext2fs
 *, , 
öt32_t
[], );

143 
ext2fs_ôimes
(
öode
 *, c⁄° 
time•ec
 *,

144 c⁄° 
time•ec
 *, const timespec *);

147 
VFS_PROTOS
(
ext2fs
);

148 
ext2fs_ªlﬂd
(
mou¡
 *, 
kauth_¸ed_t
, 
lwp
 *);

149 
ext2fs_mou¡fs
(
vnode
 *, 
mou¡
 *);

150 
ext2fs_Êushfûes
(
mou¡
 *, );

151 
ext2fs_sbupd©e
(
ufsmou¡
 *, );

152 
ext2fs_cgupd©e
(
ufsmou¡
 *, );

153 
ext2fs_£t_öode_guid
(
öode
 *);

156 
ext2fs_ªad
(*);

157 
ext2fs_wrôe
(*);

158 
ext2fs_bu‰d
(
vnode
 *, 
uio
 *, , 
kauth_¸ed_t
);

159 
ext2fs_bufwr
(
vnode
 *, 
uio
 *, , 
kauth_¸ed_t
);

162 
ext2fs_¸óã
(*);

163 
ext2fs_mknod
(*);

164 
ext2fs_›í
(*);

165 
ext2fs_ac˚ss
(*);

166 
ext2fs_gë©å
(*);

167 
ext2fs_£èâr
(*);

168 
ext2fs_ªmove
(*);

169 
ext2fs_lök
(*);

170 
ext2fs_ª«me
(*);

171 
ext2fs_mkdú
(*);

172 
ext2fs_rmdú
(*);

173 
ext2fs_symlök
(*);

174 
ext2fs_ªadlök
(*);

175 
ext2fs_advlock
(*);

176 
ext2fs_fsync
(*);

177 
ext2fs_vöô
(
mou¡
 *, (**
•ec›s
)(*),

178 (**
fifo›s
)(*), 
vnode
 **);

179 
	`ext2fs_makeöode
(, 
vnode
 *, vnode **,

180 
comp⁄íäame
 *
˙p
);

181 
	`ext2fs_ª˛aim
(*);

184 
	`ext2fs_håì_hash
(c⁄° *, , 
uöt32_t
 *, , uint32_t *,

185 
uöt32_t
 *);

188 
	`ext2fs_håì_has_idx
(
öode
 *);

189 
	`ext2fs_håì_lookup
(
öode
 *, c⁄° *, , 
buf
 **,

190 *, 
doff_t
 *, doff_à*, doff_à*, 
ext2fs_£¨ch¶Ÿ
 *);

195 
	`ext2fs_håì_¸óã_ödex
(
vnode
 *, 
comp⁄íäame
 *, 
ext2fs_dúe˘
 *);

196 
	`ext2fs_håì_add_íåy
(
vnode
 *, 
ext2fs_dúe˘
 *, 
comp⁄íäame
 *);

198 
__END_DECLS


200 
	#IS_EXT2_VNODE
(
vp
Ë(vp->
v_èg
 =
VT_EXT2FS
)

	)

202 (**
ext2fs_vnode›_p
)(*);

203 (**
ext2fs_•ec›_p
)(*);

204 (**
ext2fs_fifo›_p
)(*);

	@ext2fs_hash.c

56 
	~<sys/cdefs.h
>

57 
__KERNEL_RCSID
(0, "$NetBSD:Éxt2fs_hash.c,v 1.1 2016/06/24 17:21:30 christos Exp $");

59 
	~<sys/∑øm.h
>

60 
	~<sys/sy°m.h
>

61 
	~<sys/c⁄f.h
>

62 
	~<sys/vnode.h
>

63 
	~<sys/°©.h
>

64 
	~<sys/mou¡.h
>

66 
	~<ufs/ext2fs/ext2fs_håì.h
>

67 
	~<ufs/ext2fs/ext2fs_hash.h
>

68 
	~<ufs/ufs/öode.h
>

69 
	~<ufs/ufs/ufsmou¡.h
>

70 
	~<ufs/ext2fs/ext2fs_exã∫.h
>

76 
	#FF
(
a
, 
b
, 
c
, 
d
, 
x
, 
s
) { \

77 (
a
Ë+
	`F
 ((
b
), (
c
), (
d
)Ë+ (
x
); \

78 (
a
Ë
	`ROTATE_LEFT
 (◊), (
s
)); \

79 }

	)

81 
	#GG
(
a
, 
b
, 
c
, 
d
, 
x
, 
s
) { \

82 (
a
Ë+
	`G
 ((
b
), (
c
), (
d
)Ë+ (
x
Ë+ (
uöt32_t
)0x5A827999; \

83 (
a
Ë
	`ROTATE_LEFT
 (◊), (
s
)); \

84 }

	)

86 
	#HH
(
a
, 
b
, 
c
, 
d
, 
x
, 
s
) { \

87 (
a
Ë+
	`H
 ((
b
), (
c
), (
d
)Ë+ (
x
Ë+ (
uöt32_t
)0x6ED9EBA1; \

88 (
a
Ë
	`ROTATE_LEFT
 (◊), (
s
)); \

89 }

	)

92 
	$ext2fs_¥ï_hashbuf
(c⁄° *
§c
, 
¶í
, 
uöt32_t
 *
d°
, 
dÀn
,

93 
unsig√d_ch¨
)

95 
uöt32_t
 
∑ddög
 = 
¶í
 | (slen << 8) | (slen << 16) | (slen << 24);

96 
uöt32_t
 
buf_vÆ
;

97 c⁄° *
ubuf
 = (c⁄° *)
§c
;

98 c⁄° sig√d *
sbuf
 = (c⁄° sig√d *)
§c
;

99 
Àn
, 
i
;

100 
buf_byã
;

102 i‡(
¶í
 > 
dÀn
)

103 
Àn
 = 
dÀn
;

105 
Àn
 = 
¶í
;

107 
buf_vÆ
 = 
∑ddög
;

109 
i
 = 0; i < 
Àn
; i++) {

110 i‡(
unsig√d_ch¨
)

111 
buf_byã
 = (
u_öt
)
ubuf
[
i
];

113 
buf_byã
 = ()
sbuf
[
i
];

115 i‡((
i
 % 4) == 0)

116 
buf_vÆ
 = 
∑ddög
;

118 
buf_vÆ
 <<= 8;

119 
buf_vÆ
 +
buf_byã
;

121 i‡((
i
 % 4) == 3) {

122 *
d°
++ = 
buf_vÆ
;

123 
dÀn
 -(
uöt32_t
);

124 
buf_vÆ
 = 
∑ddög
;

128 
dÀn
 -(
uöt32_t
);

129 i‡(
dÀn
 >= 0)

130 *
d°
++ = 
buf_vÆ
;

132 
dÀn
 -(
uöt32_t
);

133 
dÀn
 >= 0) {

134 *
d°
++ = 
∑ddög
;

135 
dÀn
 -(
uöt32_t
);

137 
	}
}

139 
uöt32_t


140 
	$ext2fs_Àgacy_hash
(c⁄° *
«me
, 
Àn
, 
unsig√d_ch¨
)

142 
uöt32_t
 
h0
, 
h1
 = 0x12A3FE2D, 
h2
 = 0x37ABE8F9;

143 
uöt32_t
 
mu…i
 = 0x6D22F5;

144 c⁄° *
u«me
 = (c⁄° *)
«me
;

145 c⁄° sig√d *
¢ame
 = (c⁄° sig√d *)
«me
;

146 
vÆ
, 
i
;

148 
i
 = 0; i < 
Àn
; i++) {

149 i‡(
unsig√d_ch¨
)

150 
vÆ
 = (
u_öt
)*
u«me
++;

152 
vÆ
 = ()*
¢ame
++;

154 
h0
 = 
h2
 + (
h1
 ^ (
vÆ
 * 
mu…i
));

155 i‡(
h0
 & 0x80000000)

156 
h0
 -= 0x7FFFFFFF;

157 
h2
 = 
h1
;

158 
h1
 = 
h0
;

161  
h1
 << 1;

162 
	}
}

176 
	$ext2fs_hÆf_md4
(
uöt32_t
 
hash
[4], uöt32_à
d©a
[8])

178 
uöt32_t
 
a
 = 
hash
[0], 
b
 = hash[1], 
c
 = hash[2], 
d
 = hash[3];

181 
	`FF
(
a
, 
b
, 
c
, 
d
, 
d©a
[0], 3);

182 
	`FF
(
d
, 
a
, 
b
, 
c
, 
d©a
[1], 7);

183 
	`FF
(
c
, 
d
, 
a
, 
b
, 
d©a
[2], 11);

184 
	`FF
(
b
, 
c
, 
d
, 
a
, 
d©a
[3], 19);

185 
	`FF
(
a
, 
b
, 
c
, 
d
, 
d©a
[4], 3);

186 
	`FF
(
d
, 
a
, 
b
, 
c
, 
d©a
[5], 7);

187 
	`FF
(
c
, 
d
, 
a
, 
b
, 
d©a
[6], 11);

188 
	`FF
(
b
, 
c
, 
d
, 
a
, 
d©a
[7], 19);

191 
	`GG
(
a
, 
b
, 
c
, 
d
, 
d©a
[1], 3);

192 
	`GG
(
d
, 
a
, 
b
, 
c
, 
d©a
[3], 5);

193 
	`GG
(
c
, 
d
, 
a
, 
b
, 
d©a
[5], 9);

194 
	`GG
(
b
, 
c
, 
d
, 
a
, 
d©a
[7], 13);

195 
	`GG
(
a
, 
b
, 
c
, 
d
, 
d©a
[0], 3);

196 
	`GG
(
d
, 
a
, 
b
, 
c
, 
d©a
[2], 5);

197 
	`GG
(
c
, 
d
, 
a
, 
b
, 
d©a
[4], 9);

198 
	`GG
(
b
, 
c
, 
d
, 
a
, 
d©a
[6], 13);

201 
	`HH
(
a
, 
b
, 
c
, 
d
, 
d©a
[3], 3);

202 
	`HH
(
d
, 
a
, 
b
, 
c
, 
d©a
[7], 9);

203 
	`HH
(
c
, 
d
, 
a
, 
b
, 
d©a
[2], 11);

204 
	`HH
(
b
, 
c
, 
d
, 
a
, 
d©a
[6], 15);

205 
	`HH
(
a
, 
b
, 
c
, 
d
, 
d©a
[1], 3);

206 
	`HH
(
d
, 
a
, 
b
, 
c
, 
d©a
[5], 9);

207 
	`HH
(
c
, 
d
, 
a
, 
b
, 
d©a
[0], 11);

208 
	`HH
(
b
, 
c
, 
d
, 
a
, 
d©a
[4], 15);

210 
hash
[0] +
a
;

211 
hash
[1] +
b
;

212 
hash
[2] +
c
;

213 
hash
[3] +
d
;

214 
	}
}

220 
	$ext2fs_ãa
(
uöt32_t
 
hash
[4], uöt32_à
d©a
[8])

222 
uöt32_t
 
ãa_dñè
 = 0x9E3779B9;

223 
uöt32_t
 
sum
;

224 
uöt32_t
 
x
 = 
hash
[0], 
y
 = hash[1];

225 
n
 = 16;

226 
i
 = 1;

228 
n
-- > 0) {

229 
sum
 = 
i
 * 
ãa_dñè
;

230 
x
 +((
y
 << 4Ë+ 
d©a
[0]Ë^ (y + 
sum
) ^ ((y >> 5) + data[1]);

231 
y
 +((
x
 << 4Ë+ 
d©a
[2]Ë^ (x + 
sum
) ^ ((x >> 5) + data[3]);

232 
i
++;

235 
hash
[0] +
x
;

236 
hash
[1] +
y
;

237 
	}
}

240 
	$ext2fs_håì_hash
(c⁄° *
«me
, 
Àn
,

241 
uöt32_t
 *
hash_£ed
, 
hash_vîsi⁄
,

242 
uöt32_t
 *
hash_maj‹
, uöt32_à*
hash_mö‹
)

244 
uöt32_t
 
hash
[4];

245 
uöt32_t
 
d©a
[8];

246 
uöt32_t
 
maj‹
 = 0, 
mö‹
 = 0;

247 
unsig√d_ch¨
 = 0;

249 i‡(!
«me
 || !
hash_maj‹
)

252 i‡(
Àn
 < 1 ||Üen > 255)

253 
îr‹
;

255 
hash
[0] = 0x67452301;

256 
hash
[1] = 0xEFCDAB89;

257 
hash
[2] = 0x98BADCFE;

258 
hash
[3] = 0x10325476;

260 i‡(
hash_£ed
)

261 
	`mem˝y
(
hash
, 
hash_£ed
, (hash));

263 
hash_vîsi⁄
) {

264 
EXT2_HTREE_TEA_UNSIGNED
:

265 
unsig√d_ch¨
 = 1;

267 
EXT2_HTREE_TEA
:

268 
Àn
 > 0) {

269 
	`ext2fs_¥ï_hashbuf
(
«me
, 
Àn
, 
d©a
, 16, 
unsig√d_ch¨
);

270 
	`ext2fs_ãa
(
hash
, 
d©a
);

271 
Àn
 -= 16;

272 
«me
 += 16;

274 
maj‹
 = 
hash
[0];

275 
mö‹
 = 
hash
[1];

277 
EXT2_HTREE_LEGACY_UNSIGNED
:

278 
unsig√d_ch¨
 = 1;

280 
EXT2_HTREE_LEGACY
:

281 
maj‹
 = 
	`ext2fs_Àgacy_hash
(
«me
, 
Àn
, 
unsig√d_ch¨
);

283 
EXT2_HTREE_HALF_MD4_UNSIGNED
:

284 
unsig√d_ch¨
 = 1;

286 
EXT2_HTREE_HALF_MD4
:

287 
Àn
 > 0) {

288 
	`ext2fs_¥ï_hashbuf
(
«me
, 
Àn
, 
d©a
, 32, 
unsig√d_ch¨
);

289 
	`ext2fs_hÆf_md4
(
hash
, 
d©a
);

290 
Àn
 -= 32;

291 
«me
 += 32;

293 
maj‹
 = 
hash
[1];

294 
mö‹
 = 
hash
[2];

297 
îr‹
;

300 
maj‹
 &= ~1;

301 i‡(
maj‹
 =(
EXT2_HTREE_EOF
 << 1))

302 
maj‹
 = (
EXT2_HTREE_EOF
 - 1) << 1;

303 *
hash_maj‹
 = 
maj‹
;

304 i‡(
hash_mö‹
)

305 *
hash_mö‹
 = 
mö‹
;

309 
îr‹
:

310 *
hash_maj‹
 = 0;

311 i‡(
hash_mö‹
)

312 *
hash_mö‹
 = 0;

314 
	}
}

	@ext2fs_hash.h

29 #i‚de‡
_EXT2FS_HASH_H_


30 
	#_EXT2FS_HASH_H_


	)

33 
	#F
(
x
, 
y
, 
z
Ë(((xË& (y)Ë| ((~xË& (z)))

	)

34 
	#G
(
x
, 
y
, 
z
Ë(((xË& (y)Ë| ((xË& (z)Ë| ((yË& (z)))

	)

35 
	#H
(
x
, 
y
, 
z
Ë((xË^ (yË^ (z))

	)

38 
	#ROTATE_LEFT
(
x
, 
n
Ë(((xË<< (n)Ë| ((xË>> (32 - (n))))

	)

	@ext2fs_htree.c

31 
	~<sys/cdefs.h
>

32 
__KERNEL_RCSID
(0, "$NetBSD:Éxt2fs_htree.c,v 1.1 2016/06/24 17:21:30 christos Exp $");

34 
	~<sys/∑øm.h
>

35 
	~<sys/sy°m.h
>

36 
	~<sys/ªsour˚v¨.h
>

37 
	~<sys/kî√l.h
>

38 
	~<sys/fûe.h
>

39 
	~<sys/°©.h
>

40 
	~<sys/buf.h
>

41 
	~<sys/¥oc.h
>

42 
	~<sys/mou¡.h
>

43 
	~<sys/«mei.h
>

44 
	~<sys/vnode.h
>

45 
	~<sys/lockf.h
>

46 
	~<sys/poﬁ.h
>

47 
	~<sys/sig«lv¨.h
>

48 
	~<sys/kauth.h
>

49 
	~<sys/mÆloc.h
>

50 
	~<ufs/ufs/dú.h
>

52 
	~<ufs/ufs/öode.h
>

53 
	~<ufs/ufs/ufsmou¡.h
>

54 
	~<ufs/ext2fs/ext2fs.h
>

56 
	~<ufs/ext2fs/ext2fs_exã∫.h
>

57 
	~<ufs/ext2fs/ext2fs_döode.h
>

58 
	~<ufs/ext2fs/ext2fs_dú.h
>

59 
	~<ufs/ext2fs/ext2fs_håì.h
>

60 
	~<ufs/ext2fs/ext2fs_hash.h
>

69 
ext2fs_håì_föd_Àaf
(
öode
 *, c⁄° *, , 
uöt32_t
 *, 
uöt8_t
 *,

70 
ext2fs_håì_lookup_öfo
 *);

74 
	$ext2fs_håì_has_idx
(
öode
 *
ù
)

81 
	`¥ötf
("fú°Ö¨à: %dánd 2ndÖ¨à: %d \n", 
	`EXT2_HAS_COMPAT_FEATURE
(
ù
->
i_e2fs
, 
EXT2F_COMPAT_DIRHASHINDEX
)

82 ,(
ù
->
i_dö
.
e2fs_dö
->
e2di_Êags
 & 
EXT2_INDEX
));

83  
	`EXT2_HAS_COMPAT_FEATURE
(
ù
->
i_e2fs
, 
EXT2F_COMPAT_DIRHASHINDEX
)

84 && (
ù
->
i_dö
.
e2fs_dö
->
e2di_Êags
 & 
EXT2_INDEX
);

85 
	}
}

87 
off_t


88 
	$ext2fs_håì_gë_block
(
ext2fs_håì_íåy
 *
ï
)

90  
ï
->
h_blk
 & 0x00FFFFFF;

91 
	}
}

95 
	$ext2fs_håì_ªÀa£
(
ext2fs_håì_lookup_öfo
 *
öfo
)

97 
u_öt
 
i
 = 0; i < 
öfo
->
h_Àvñs_num
; i++) {

98 
buf
 *
bp
 = 
öfo
->
h_Àvñs
[
i
].
h_bp
;

99 i‡(
bp
 !
NULL
)

100 
	`bªl£
(
bp
, 0);

102 
	}
}

104 
uöt16_t


105 
	$ext2fs_håì_gë_limô
(
ext2fs_håì_íåy
 *
ï
)

107  ((
ext2fs_håì_cou¡
 *)(
ï
))->
h_íåõs_max
;

108 
	}
}

110 
uöt32_t


111 
	$ext2fs_håì_roŸ_limô
(
öode
 *
ù
, 
Àn
)

113 
uöt32_t
 
•a˚
 = 
ù
->
i_e2fs
->
e2fs_bsize
 - 
	`EXT2_DIR_REC_LEN
(1) -

114 
	`EXT2_DIR_REC_LEN
(2Ë- 
Àn
;

115  
•a˚
 / (
ext2fs_håì_íåy
);

116 
	}
}

118 
uöt16_t


119 
	$ext2fs_håì_gë_cou¡
(
ext2fs_håì_íåy
 *
ï
)

121  ((
ext2fs_håì_cou¡
 *)(
ï
))->
h_íåõs_num
;

122 
	}
}

124 
uöt32_t


125 
	$ext2fs_håì_gë_hash
(
ext2fs_håì_íåy
 *
ï
)

127  
ï
->
h_hash
;

128 
	}
}

139 
	$ext2fs_håì_£t_block
(
ext2fs_håì_íåy
 *
ï
, 
uöt32_t
 
blk
)

141 
ï
->
h_blk
 = 
blk
;

142 
	}
}

145 
	$ext2fs_håì_£t_cou¡
(
ext2fs_håì_íåy
 *
ï
, 
uöt16_t
 
˙t
)

147 ((
ext2fs_håì_cou¡
 *)(
ï
))->
h_íåõs_num
 = 
˙t
;

148 
	}
}

151 
	$ext2fs_håì_£t_hash
(
ext2fs_håì_íåy
 *
ï
, 
uöt32_t
 
hash
)

153 
ï
->
h_hash
 = 
hash
;

154 
	}
}

157 
	$ext2fs_håì_£t_limô
(
ext2fs_håì_íåy
 *
ï
, 
uöt16_t
 
limô
)

159 ((
ext2fs_håì_cou¡
 *)(
ï
))->
h_íåõs_max
 = 
limô
;

160 
	}
}

162 
uöt32_t


163 
	$ext2fs_håì_node_limô
(
öode
 *
ù
)

165 
m_ext2fs
 *
fs
;

166 
uöt32_t
 
•a˚
;

168 
fs
 = 
ù
->
i_e2fs
;

169 
•a˚
 = 
fs
->
e2fs_bsize
 - 
	`EXT2_DIR_REC_LEN
(0);

171  (
•a˚
 / (
ext2fs_håì_íåy
));

172 
	}
}

175 
	$ext2fs_håì_≠≥nd_block
(
vnode
 *
vp
, *
d©a
,

176 
comp⁄íäame
 *
˙p
, 
uöt32_t
 
blksize
)

178 
iovec
 
aiov
;

179 
uio
 
auio
;

180 
öode
 *
dp
 = 
	`VTOI
(
vp
);

181 
uöt64_t
 
cursize
, 
√wsize
;

182 
îr‹
;

184 
cursize
 = 
	`roundup
(
dp
->
i_size
, 
blksize
);

185 
√wsize
 = 
cursize
 + 
blksize
;

187 
auio
.
uio_off£t
 = 
cursize
;

188 
auio
.
uio_ªsid
 = 
blksize
;

189 
aiov
.
iov_Àn
 = 
blksize
;

190 
aiov
.
iov_ba£
 = 
d©a
;

191 
auio
.
uio_iov
 = &
aiov
;

192 
auio
.
uio_iov˙t
 = 1;

193 
auio
.
uio_rw
 = 
UIO_WRITE
;

195 
îr‹
 = 
	`VOP_WRITE
(
vp
, &
auio
, 
IO_SYNC
, 
˙p
->
˙_¸ed
);

196 i‡(!
îr‹
)

197 
dp
->
i_size
 = 
√wsize
;

199  (
îr‹
);

200 
	}
}

203 
	$ext2fs_håì_wrôebuf
(
ext2fs_håì_lookup_öfo
 *
öfo
)

205 
i
, 
îr‹
;

207 
i
 = 0; i < 
öfo
->
h_Àvñs_num
; i++) {

208 
buf
 *
bp
 = 
öfo
->
h_Àvñs
[
i
].
h_bp
;

209 
îr‹
 = 
	`bwrôe
(
bp
);

210 i‡(
îr‹
)

211  (
îr‹
);

215 
	}
}

218 
	$ext2fs_håì_ö£π_íåy_to_Àvñ
(
ext2fs_håì_lookup_Àvñ
 *
Àvñ
,

219 
uöt32_t
 
hash
, uöt32_à
blk
)

221 
ext2fs_håì_íåy
 *
èrgë
;

222 
íåõs_num
;

224 
èrgë
 = 
Àvñ
->
h_íåy
 + 1;

225 
íåõs_num
 = 
	`ext2fs_håì_gë_cou¡
(
Àvñ
->
h_íåõs
);

227 
	`memmove
(
èrgë
 + 1,Å¨gë, (*)(
Àvñ
->
h_íåõs
 + 
íåõs_num
) -

228 (*)
èrgë
);

229 
	`ext2fs_håì_£t_block
(
èrgë
, 
blk
);

230 
	`ext2fs_håì_£t_hash
(
èrgë
, 
hash
);

231 
	`ext2fs_håì_£t_cou¡
(
Àvñ
->
h_íåõs
, 
íåõs_num
 + 1);

232 
	}
}

238 
	$ext2fs_håì_ö£π_íåy
(
ext2fs_håì_lookup_öfo
 *
öfo
,

239 
uöt32_t
 
hash
, uöt32_à
blk
)

241 
ext2fs_håì_lookup_Àvñ
 *
Àvñ
;

243 
Àvñ
 = &
öfo
->
h_Àvñs
[öfo->
h_Àvñs_num
 - 1];

244 
	`ext2fs_håì_ö£π_íåy_to_Àvñ
(
Àvñ
, 
hash
, 
blk
);

245 
	}
}

252 
	$ext2fs_håì_cmp_s‹t_íåy
(c⁄° *
e1
, c⁄° *
e2
)

254 c⁄° 
ext2fs_håì_s‹t_íåy
 *
íåy1
, *
íåy2
;

256 
íåy1
 = (c⁄° 
ext2fs_håì_s‹t_íåy
 *)
e1
;

257 
íåy2
 = (c⁄° 
ext2fs_håì_s‹t_íåy
 *)
e2
;

259 i‡(
íåy1
->
h_hash
 < 
íåy2
->h_hash)

261 i‡(
íåy1
->
h_hash
 > 
íåy2
->h_hash)

264 
	}
}

270 
	$ext2fs_≠≥nd_íåy
(*
block
, 
uöt32_t
 
blksize
,

271 
ext2fs_dúe˘
 *
œ°_íåy
,

272 
ext2fs_dúe˘
 *
√w_íåy
)

274 
uöt16_t
 
íåy_Àn
;

276 
íåy_Àn
 = 
	`EXT2_DIR_REC_LEN
(
œ°_íåy
->
e2d_«mÀn
);

277 
œ°_íåy
->
e2d_ª˛í
 = 
íåy_Àn
;

278 
œ°_íåy
 = (
ext2fs_dúe˘
 *)((*Óa°_íåy + 
íåy_Àn
);

279 
√w_íåy
->
e2d_ª˛í
 = 
block
 + 
blksize
 - (*)
œ°_íåy
;

280 
	`mem˝y
(
œ°_íåy
, 
√w_íåy
, 
	`EXT2_DIR_REC_LEN
“ew_íåy->
e2d_«mÀn
));

281 
	}
}

287 
	$ext2fs_håì_•lô_dúblock
(*
block1
, *
block2
, 
uöt32_t
 
blksize
,

288 
uöt32_t
 *
hash_£ed
, 
uöt8_t
 
hash_vîsi⁄
,

289 
uöt32_t
 *
•lô_hash
, 
ext2fs_dúe˘
 *
íåy
)

291 
íåy_˙t
 = 0;

292 
size
 = 0;

293 
i
, 
k
;

294 
uöt32_t
 
off£t
;

295 
uöt16_t
 
íåy_Àn
 = 0;

296 
uöt32_t
 
íåy_hash
;

297 
ext2fs_dúe˘
 *
ï
, *
œ°
;

298 *
de°
;

299 
ext2fs_håì_s‹t_íåy
 *
s‹t_öfo
, 
dummy
;

301 
ï
 = (
ext2fs_dúe˘
 *)
block1
;

302 
de°
 = 
block2
;

303 
s‹t_öfo
 = (
ext2fs_håì_s‹t_íåy
 *)

304 ((*)
block2
 + 
blksize
);

309 
	`ext2fs_håì_hash
(
íåy
->
e2d_«me
,É¡ry->
e2d_«mÀn
, 
hash_£ed
,

310 
hash_vîsi⁄
, &
íåy_hash
, 
NULL
);

315 (*)
ï
 < 
block1
 + 
blksize
) {

316 i‡(
ï
->
e2d_öo
 &&Ép->
e2d_«mÀn
) {

317 
íåy_˙t
++;

318 
s‹t_öfo
--;

319 
s‹t_öfo
->
h_size
 = 
ï
->
e2d_ª˛í
;

320 
s‹t_öfo
->
h_off£t
 = (*)
ï
 - 
block1
;

321 
	`ext2fs_håì_hash
(
ï
->
e2d_«me
,Ép->
e2d_«mÀn
,

322 
hash_£ed
, 
hash_vîsi⁄
,

323 &
s‹t_öfo
->
h_hash
, 
NULL
);

325 
ï
 = (
ext2fs_dúe˘
 *)

326 ((*)
ï
 +Ép->
e2d_ª˛í
);

332 
	`khóps‹t
(
s‹t_öfo
, 
íåy_˙t
, (
ext2fs_håì_s‹t_íåy
),

333 
ext2fs_håì_cmp_s‹t_íåy
,&
dummy
);

338 
i
 = 
íåy_˙t
 - 1; i >= 0; i--) {

339 i‡(
s‹t_öfo
[
i
].
h_size
 + 
size
 > 
blksize
 / 2)

341 
size
 +
s‹t_öfo
[
i
].
h_size
;

344 *
•lô_hash
 = 
s‹t_öfo
[
i
 + 1].
h_hash
;

349 i‡(*
•lô_hash
 =
s‹t_öfo
[
i
].
h_hash
)

350 *
•lô_hash
 += 1;

355 
k
 = 
i
 + 1; k < 
íåy_˙t
; k++) {

356 
ï
 = (
ext2fs_dúe˘
 *)((*)
block1
 +

357 
s‹t_öfo
[
k
].
h_off£t
);

358 
íåy_Àn
 = 
	`EXT2_DIR_REC_LEN
(
ï
->
e2d_«mÀn
);

359 
	`mem˝y
(
de°
, 
ï
, 
íåy_Àn
);

360 ((
ext2fs_dúe˘
 *)
de°
)->
e2d_ª˛í
 = 
íåy_Àn
;

362 
ï
->
e2d_öo
 = 0;

363 
de°
 +
íåy_Àn
;

365 
de°
 -
íåy_Àn
;

368 
œ°
 = (
ext2fs_dúe˘
 *)
block1
;

369 
íåy_Àn
 = 0;

370 
off£t
 = 0; off£à< 
blksize
; ) {

371 
ï
 = (
ext2fs_dúe˘
 *)(
block1
 + 
off£t
);

372 
off£t
 +
ï
->
e2d_ª˛í
;

373 i‡(
ï
->
e2d_öo
) {

374 
œ°
 = (
ext2fs_dúe˘
 *)

375 ((*)
œ°
 + 
íåy_Àn
);

376 
íåy_Àn
 = 
	`EXT2_DIR_REC_LEN
(
ï
->
e2d_«mÀn
);

377 
	`mem˝y
((*)
œ°
, (*)
ï
, 
íåy_Àn
);

378 
œ°
->
e2d_ª˛í
 = 
íåy_Àn
;

382 i‡(
íåy_hash
 >*
•lô_hash
) {

384 
	`ext2fs_≠≥nd_íåy
(
block2
, 
blksize
,

385 (
ext2fs_dúe˘
 *)
de°
, 
íåy
);

388 
œ°
->
e2d_ª˛í
 = 
block1
 + 
blksize
 - (*)last;

391 
	`ext2fs_≠≥nd_íåy
(
block1
, 
blksize
, 
œ°
, 
íåy
);

394 ((
ext2fs_dúe˘
 *)
de°
)->
e2d_ª˛í
 =

395 
block2
 + 
blksize
 - 
de°
;

399 
	}
}

405 
	$ext2fs_håì_¸óã_ödex
(
vnode
 *
vp
, 
comp⁄íäame
 *
˙p
,

406 
ext2fs_dúe˘
 *
√w_íåy
)

408 
buf
 *
bp
 = 
NULL
;

409 
öode
 *
dp
;

410 
ext2fs
 *
fs
;

411 
m_ext2fs
 *
m_fs
;

412 
ext2fs_dúe˘
 *
ï
, *
dŸdŸ
;

413 
ext2fs_håì_roŸ
 *
roŸ
;

414 
ext2fs_håì_lookup_öfo
 
öfo
;

415 
uöt32_t
 
blksize
, 
dúÀn
, 
•lô_hash
;

416 
uöt8_t
 
hash_vîsi⁄
;

417 *
buf1
 = 
NULL
;

418 *
buf2
 = 
NULL
;

419 
îr‹
 = 0;

421 
dp
 = 
	`VTOI
(
vp
);

422 
fs
 = &(
dp
->
i_e2fs
->
e2fs
);

423 
m_fs
 = 
dp
->
i_e2fs
;

424 
blksize
 = 
m_fs
->
e2fs_bsize
;

426 
buf1
 = 
	`mÆloc
(
blksize
, 
M_TEMP
, 
M_WAITOK
 | 
M_ZERO
);

427 
buf2
 = 
	`mÆloc
(
blksize
, 
M_TEMP
, 
M_WAITOK
 | 
M_ZERO
);

429 i‡((
îr‹
 = 
	`ext2fs_blk©off
(
vp
, 0, 
NULL
, &
bp
)) != 0)

430 
out
;

432 
roŸ
 = (
ext2fs_håì_roŸ
 *)
bp
->
b_d©a
;

433 
dŸdŸ
 = (
ext2fs_dúe˘
 *)((*)&(
roŸ
->
h_dŸdŸ
));

434 
ï
 = (
ext2fs_dúe˘
 *)((*)
dŸdŸ
 + dŸdŸ->
e2d_ª˛í
);

435 
dúÀn
 = (*)
roŸ
 + 
blksize
 - (*)
ï
;

436 
	`mem˝y
(
buf1
, 
ï
, 
dúÀn
);

437 
ï
 = (
ext2fs_dúe˘
 *)
buf1
;

438 (*)
ï
 < 
buf1
 + 
dúÀn
)

439 
ï
 = (
ext2fs_dúe˘
 *)((*Î∞+Ép->
e2d_ª˛í
);

440 
ï
->
e2d_ª˛í
 = 
buf1
 + 
blksize
 - (*)ep;

443 
dp
->
i_dö
.
e2fs_dö
->
e2di_Êags
 |
EXT2_INDEX
;

448 
dŸdŸ
->
e2d_ª˛í
 = 
blksize
 - 
	`EXT2_DIR_REC_LEN
(1);

449 
	`mem£t
(&
roŸ
->
h_öfo
, 0, (root->h_info));

450 
roŸ
->
h_öfo
.
h_hash_vîsi⁄
 = 
fs
->
e3fs_def_hash_vîsi⁄
;

451 
roŸ
->
h_öfo
.
h_öfo_Àn
 = (root->h_info);

452 
	`ext2fs_håì_£t_block
(
roŸ
->
h_íåõs
, 1);

453 
	`ext2fs_håì_£t_cou¡
(
roŸ
->
h_íåõs
, 1);

454 
	`ext2fs_håì_£t_limô
(
roŸ
->
h_íåõs
,

455 
	`ext2fs_håì_roŸ_limô
(
dp
, (
roŸ
->
h_öfo
)));

457 
	`mem£t
(&
öfo
, 0, (info));

458 
öfo
.
h_Àvñs_num
 = 1;

459 
öfo
.
h_Àvñs
[0].
h_íåõs
 = 
roŸ
->h_entries;

460 
öfo
.
h_Àvñs
[0].
h_íåy
 = 
roŸ
->
h_íåõs
;

462 
hash_vîsi⁄
 = 
roŸ
->
h_öfo
.
h_hash_vîsi⁄
;

463 i‡(
hash_vîsi⁄
 <
EXT2_HTREE_TEA
)

464 
hash_vîsi⁄
 +
m_fs
->
e2fs_uhash
;

465 
	`ext2fs_håì_•lô_dúblock
(
buf1
, 
buf2
, 
blksize
, 
fs
->
e3fs_hash_£ed
,

466 
hash_vîsi⁄
, &
•lô_hash
, 
√w_íåy
);

467 
	`ext2fs_håì_ö£π_íåy
(&
öfo
, 
•lô_hash
, 2);

481 i‡–(
vp
)->
v_mou¡
->
m¡_iÊag
 & 
IO_SYNC
)

482 ()
	`bwrôe
(
bp
);

484 
	`bdwrôe
(
bp
);

486 
dp
->
i_Êag
 |
IN_CHANGE
 | 
IN_UPDATE
;

487 i‡(
îr‹
)

488 
out
;

493 
îr‹
 = 
	`ext2fs_håì_≠≥nd_block
(
vp
, 
buf1
, 
˙p
, 
blksize
);

494 i‡(
îr‹
)

495 
out1
;

500 
îr‹
 = 
	`ext2fs_håì_≠≥nd_block
(
vp
, 
buf2
, 
˙p
, 
blksize
);

502 
	`‰ì
(
buf1
, 
M_TEMP
);

503 
	`‰ì
(
buf2
, 
M_TEMP
);

504  (
îr‹
);

505 
out
:

506 i‡(
bp
 !
NULL
)

507 
	`bªl£
(
bp
,0);

508 
out1
:

509 
	`‰ì
(
buf1
, 
M_TEMP
);

510 
	`‰ì
(
buf2
, 
M_TEMP
);

511  (
îr‹
);

512 
	}
}

518 
	$ext2fs_håì_add_íåy
(
vnode
 *
dvp
, 
ext2fs_dúe˘
 *
íåy
,

519 
comp⁄íäame
 *
˙p
)

521 
	`¥ötf
("fun: %s,löío: %d\n", 
__func__
, 
__LINE__
);

522 
ext2fs_håì_íåy
 *
íåõs
, *
Àaf_node
;

523 
ext2fs_håì_lookup_öfo
 
öfo
;

524 
buf
 *
bp
 = 
NULL
;

525 
ext2fs
 *
fs
;

526 
m_ext2fs
 *
m_fs
;

527 
öode
 *
ù
;

528 
uöt16_t
 
ít_num
;

529 
uöt32_t
 
dúhash
, 
•lô_hash
;

530 
uöt32_t
 
blksize
, 
blknum
;

531 
uöt64_t
 
cursize
, 
dúsize
;

532 
uöt8_t
 
hash_vîsi⁄
;

533 *
√wdúblock
 = 
NULL
;

534 *
√widxblock
 = 
NULL
;

535 
ext2fs_håì_node
 *
d°_node
;

536 
ext2fs_håì_íåy
 *
d°_íåõs
;

537 
ext2fs_håì_íåy
 *
roŸ_ítúes
;

538 
buf
 *
d°_bp
 = 
NULL
;

539 
îr‹
, 
wrôe_bp
 = 0, 
wrôe_d°_bp
 = 0, 
wrôe_öfo
 = 0;

541 
ù
 = 
	`VTOI
(
dvp
);

542 
m_fs
 = 
ù
->
i_e2fs
;

543 
fs
 = &(
m_fs
->
e2fs
);

544 
blksize
 = 
m_fs
->
e2fs_bsize
;

546 i‡(
ù
->
i_¸≠
.
uÃ_cou¡
 != 0)

547  
	`ext2fs_add_íåy
(
dvp
, 
íåy
, &(
ù
->
i_¸≠
) );

548 
	`¥ötf
("fun: %s,löío: %d\n", 
__func__
, 
__LINE__
);

550 
	`mem£t
(&
öfo
, 0, (info));

551 
îr‹
 = 
	`ext2fs_håì_föd_Àaf
(
ù
, 
íåy
->
e2d_«me
,É¡ry->
e2d_«mÀn
,

552 &
dúhash
, &
hash_vîsi⁄
, &
öfo
);

553 i‡(
îr‹
)

554  (
îr‹
);

555 
	`¥ötf
("fun: %s,löío: %d\n", 
__func__
, 
__LINE__
);

556 
íåõs
 = 
öfo
.
h_Àvñs
[öfo.
h_Àvñs_num
 - 1].
h_íåõs
;

557 
ít_num
 = 
	`ext2fs_håì_gë_cou¡
(
íåõs
);

558 i‡(
ít_num
 =
	`ext2fs_håì_gë_limô
(
íåõs
)) {

560 
roŸ_ítúes
 = 
öfo
.
h_Àvñs
[0].
h_íåõs
;

561 
√widxblock
 = 
	`mÆloc
(
blksize
, 
M_TEMP
, 
M_WAITOK
 | 
M_ZERO
);

562 
d°_node
 = (
ext2fs_håì_node
 *)
√widxblock
;

563 
d°_íåõs
 = 
d°_node
->
h_íåõs
;

564 
	`mem£t
(&
d°_node
->
h_Áke_dúít
, 0,

565 (
d°_node
->
h_Áke_dúít
));

566 
d°_node
->
h_Áke_dúít
.
e2d_ª˛í
 = 
blksize
;

568 
cursize
 = 
	`roundup
(
ù
->
i_size
, 
blksize
);

569 
dúsize
 = 
cursize
 + 
blksize
;

570 
blknum
 = 
dúsize
 / 
blksize
 - 1;

572 
îr‹
 = 
	`ext2fs_håì_≠≥nd_block
(
dvp
, 
√widxblock
,

573 
˙p
, 
blksize
);

574 i‡(
îr‹
)

575 
föish
;

576 
îr‹
 = 
	`ext2fs_blk©off
(
dvp
, 
cursize
, 
NULL
, &
d°_bp
);

577 
	`¥ötf
("fun: %s,löío: %d\n", 
__func__
, 
__LINE__
);

578 i‡(
îr‹
)

579 
föish
;

580 
	`¥ötf
("fun: %s,löío: %d\n", 
__func__
, 
__LINE__
);

581 
d°_node
 = (
ext2fs_håì_node
 *)
d°_bp
->
b_d©a
;

582 
d°_íåõs
 = 
d°_node
->
h_íåõs
;

584 i‡(
öfo
.
h_Àvñs_num
 == 2) {

585 
uöt16_t
 
§c_ít_num
, 
d°_ít_num
;

587 i‡(
	`ext2fs_håì_gë_cou¡
(
roŸ_ítúes
) ==

588 
	`ext2fs_håì_gë_limô
(
roŸ_ítúes
)) {

590 
îr‹
 = 
EIO
;

591 
föish
;

593 
	`¥ötf
("fun: %s,löío: %d\n", 
__func__
, 
__LINE__
);

594 
§c_ít_num
 = 
ít_num
 / 2;

595 
d°_ít_num
 = 
ít_num
 - 
§c_ít_num
;

596 
•lô_hash
 = 
	`ext2fs_håì_gë_hash
(
íåõs
 + 
§c_ít_num
);

599 
	`mem˝y
(
d°_íåõs
, 
íåõs
 + 
§c_ít_num
,

600 
d°_ít_num
 * (
ext2fs_håì_íåy
));

601 
	`ext2fs_håì_£t_cou¡
(
íåõs
, 
§c_ít_num
);

602 
	`ext2fs_håì_£t_cou¡
(
d°_íåõs
, 
d°_ít_num
);

603 
	`ext2fs_håì_£t_limô
(
d°_íåõs
,

604 
	`ext2fs_håì_node_limô
(
ù
));

606 i‡(
öfo
.
h_Àvñs
[1].
h_íåy
 >
íåõs
 + 
§c_ít_num
) {

607 
buf
 *
tmp
 = 
öfo
.
h_Àvñs
[1].
h_bp
;

608 
öfo
.
h_Àvñs
[1].
h_bp
 = 
d°_bp
;

609 
d°_bp
 = 
tmp
;

611 
öfo
.
h_Àvñs
[1].
h_íåy
 =

612 
öfo
.
h_Àvñs
[1].
h_íåy
 -

613 (
íåõs
 + 
§c_ít_num
) +

614 
d°_íåõs
;

615 
öfo
.
h_Àvñs
[1].
h_íåõs
 = 
d°_íåõs
;

617 
	`ext2fs_håì_ö£π_íåy_to_Àvñ
(&
öfo
.
h_Àvñs
[0],

618 
•lô_hash
, 
blknum
);

621 
îr‹
 = 
	`bwrôe
(
d°_bp
);

622 
ù
->
i_Êag
 |
IN_CHANGE
 | 
IN_UPDATE
;

623 i‡(
îr‹
)

624 
föish
;

625 
	`¥ötf
("fun: %s,löío: %d\n", 
__func__
, 
__LINE__
);

626 
wrôe_d°_bp
 = 1;

629 
	`¥ötf
("fun: %s,löío: %d\n", 
__func__
, 
__LINE__
);

630 
ext2fs_håì_roŸ
 *
idx_roŸ
;

632 
	`mem˝y
(
d°_íåõs
, 
íåõs
,

633 
ít_num
 * (
ext2fs_håì_íåy
));

634 
	`ext2fs_håì_£t_limô
(
d°_íåõs
,

635 
	`ext2fs_håì_node_limô
(
ù
));

637 
idx_roŸ
 = (
ext2fs_håì_roŸ
 *)

638 
öfo
.
h_Àvñs
[0].
h_bp
->
b_d©a
;

639 
idx_roŸ
->
h_öfo
.
h_öd_Àvñs
 = 1;

641 
	`ext2fs_håì_£t_cou¡
(
íåõs
, 1);

642 
	`ext2fs_håì_£t_block
(
íåõs
, 
blknum
);

644 
öfo
.
h_Àvñs_num
 = 2;

645 
öfo
.
h_Àvñs
[1].
h_íåõs
 = 
d°_íåõs
;

646 
öfo
.
h_Àvñs
[1].
h_íåy
 = info.h_levels[0].h_entry -

647 
öfo
.
h_Àvñs
[0].
h_íåõs
 + 
d°_íåõs
;

648 
öfo
.
h_Àvñs
[1].
h_bp
 = 
d°_bp
;

649 
d°_bp
 = 
NULL
;

653 
Àaf_node
 = 
öfo
.
h_Àvñs
[öfo.
h_Àvñs_num
 - 1].
h_íåy
;

654 
blknum
 = 
	`ext2fs_håì_gë_block
(
Àaf_node
);

655 
îr‹
 = 
	`ext2fs_blk©off
(
dvp
, 
blknum
 * 
blksize
, 
NULL
, &
bp
);

656 i‡(
îr‹
)

657 
föish
;

658 
	`¥ötf
("fun: %s,löío: %d\n", 
__func__
, 
__LINE__
);

660 
√wdúblock
 = 
	`mÆloc
(
blksize
, 
M_TEMP
, 
M_WAITOK
 | 
M_ZERO
);

661 
	`ext2fs_håì_•lô_dúblock
((*)
bp
->
b_d©a
, 
√wdúblock
, 
blksize
,

662 
fs
->
e3fs_hash_£ed
, 
hash_vîsi⁄
, &
•lô_hash
, 
íåy
);

663 
cursize
 = 
	`roundup
(
ù
->
i_size
, 
blksize
);

664 
dúsize
 = 
cursize
 + 
blksize
;

665 
blknum
 = 
dúsize
 / 
blksize
 - 1;

668 
	`ext2fs_håì_ö£π_íåy
(&
öfo
, 
•lô_hash
, 
blknum
);

671 
îr‹
 = 
	`ext2fs_håì_≠≥nd_block
(
dvp
, 
√wdúblock
, 
˙p
, 
blksize
);

672 
	`¥ötf
("fun: %s,löío: %d\n", 
__func__
, 
__LINE__
);

673 i‡(
îr‹
)

674 
föish
;

677 
îr‹
 = 
	`bwrôe
(
bp
);

678 
ù
->
i_Êag
 |
IN_CHANGE
 | 
IN_UPDATE
;

679 
	`¥ötf
("fun: %s,löío: %d\n", 
__func__
, 
__LINE__
);

680 i‡(
îr‹
)

681 
föish
;

682 
wrôe_bp
 = 1;

685 
îr‹
 = 
	`ext2fs_håì_wrôebuf
(&
öfo
);

686 i‡(!
îr‹
)

687 
wrôe_öfo
 = 1;

689 
föish
:

690 i‡(
d°_bp
 !
NULL
 && !
wrôe_d°_bp
)

691 
	`bªl£
(
d°_bp
, 0);

692 i‡(
bp
 !
NULL
 && !
wrôe_bp
)

693 
	`bªl£
(
bp
, 0);

694 i‡(
√wdúblock
 !
NULL
)

695 
	`‰ì
(
√wdúblock
, 
M_TEMP
);

696 i‡(
√widxblock
 !
NULL
)

697 
	`‰ì
(
√widxblock
, 
M_TEMP
);

698 i‡(!
wrôe_öfo
)

699 
	`ext2fs_håì_ªÀa£
(&
öfo
);

700 
	`¥ötf
("fun: %s,löío: %d\n", 
__func__
, 
__LINE__
);

701  (
îr‹
);

702 
	}
}

719 
	$ext2fs_håì_check_√xt
(
öode
 *
ù
, 
uöt32_t
 
hash
, c⁄° *
«me
,

720 
ext2fs_håì_lookup_öfo
 *
öfo
)

722 
vnode
 *
vp
 = 
	`ITOV
(
ù
);

723 
ext2fs_håì_lookup_Àvñ
 *
Àvñ
;

724 
buf
 *
bp
;

725 
uöt32_t
 
√xt_hash
;

726 
idx
 = 
öfo
->
h_Àvñs_num
 - 1;

727 
Àvñs
 = 0;

730 
Àvñ
 = &
öfo
->
h_Àvñs
[
idx
];

731 
Àvñ
->
h_íåy
++;

732 i‡(
Àvñ
->
h_íåy
 <Üevñ->
h_íåõs
 +

733 
	`ext2fs_håì_gë_cou¡
(
Àvñ
->
h_íåõs
))

735 i‡(
idx
 == 0)

737 
idx
--;

738 
Àvñs
++;

741 
√xt_hash
 = 
	`ext2fs_håì_gë_hash
(
Àvñ
->
h_íåy
);

742 i‡((
hash
 & 1) == 0) {

743 i‡(
hash
 !(
√xt_hash
 & ~1))

747 
Àvñs
 > 0) {

748 
Àvñs
--;

749 i‡(
	`ext2fs_blk©off
(
vp
, 
	`ext2fs_håì_gë_block
(
Àvñ
->
h_íåy
) *

750 
ù
->
i_e2fs
->
e2fs_bsize
, 
NULL
, &
bp
) != 0)

752 
Àvñ
 = &
öfo
->
h_Àvñs
[
idx
 + 1];

753 
	`bªl£
(
Àvñ
->
h_bp
, 0);

754 
Àvñ
->
h_bp
 = 
bp
;

755 
Àvñ
->
h_íåy
 =Üevñ->
h_íåõs
 =

756 ((
ext2fs_håì_node
 *)
bp
->
b_d©a
)->
h_íåõs
;

760 
	}
}

763 
	$ext2fs_håì_föd_Àaf
(
öode
 *
ù
, c⁄° *
«me
, 
«mñí
,

764 
uöt32_t
 *
hash
, 
uöt8_t
 *
hash_vî
,

765 
ext2fs_håì_lookup_öfo
 *
öfo
)

767 
vnode
 *
vp
;

768 
ext2fs
 *
fs
;

769 
m_ext2fs
 *
m_fs
;

770 
buf
 *
bp
 = 
NULL
;

771 
ext2fs_håì_roŸ
 *
roŸp
;

772 
ext2fs_håì_íåy
 *
íç
, *
°¨t
, *
íd
, *
middÀ
, *
found
;

773 
ext2fs_håì_lookup_Àvñ
 *
Àvñ_öfo
;

774 
uöt32_t
 
hash_maj‹
 = 0, 
hash_mö‹
 = 0;

775 
uöt32_t
 
Àvñs
, 
˙t
;

776 
uöt8_t
 
hash_vîsi⁄
;

778 i‡(
«me
 =
NULL
 || 
öfo
 == NULL)

781 
vp
 = 
	`ITOV
(
ù
);

782 
fs
 = &(
ù
->
i_e2fs
->
e2fs
);

783 
m_fs
 = 
ù
->
i_e2fs
;

785 i‡(
	`ext2fs_blk©off
(
vp
, 0, 
NULL
, &
bp
) != 0)

788 
öfo
->
h_Àvñs_num
 = 1;

789 
öfo
->
h_Àvñs
[0].
h_bp
 = 
bp
;

790 
roŸp
 = (
ext2fs_håì_roŸ
 *)
bp
->
b_d©a
;

791 i‡(
roŸp
->
h_öfo
.
h_hash_vîsi⁄
 !
EXT2_HTREE_LEGACY
 &&

792 
roŸp
->
h_öfo
.
h_hash_vîsi⁄
 !
EXT2_HTREE_HALF_MD4
 &&

793 
roŸp
->
h_öfo
.
h_hash_vîsi⁄
 !
EXT2_HTREE_TEA
)

794 
îr‹
;

796 
hash_vîsi⁄
 = 
roŸp
->
h_öfo
.
h_hash_vîsi⁄
;

797 i‡(
hash_vîsi⁄
 <
EXT2_HTREE_TEA
)

798 
hash_vîsi⁄
 +
m_fs
->
e2fs_uhash
;

799 *
hash_vî
 = 
hash_vîsi⁄
;

801 
	`ext2fs_håì_hash
(
«me
, 
«mñí
, 
fs
->
e3fs_hash_£ed
,

802 
hash_vîsi⁄
, &
hash_maj‹
, &
hash_mö‹
);

803 *
hash
 = 
hash_maj‹
;

805 i‡((
Àvñs
 = 
roŸp
->
h_öfo
.
h_öd_Àvñs
) > 1)

806 
îr‹
;

808 
íç
 = (
ext2fs_håì_íåy
 *)(((*)&
roŸp
->
h_öfo
) +

809 
roŸp
->
h_öfo
.
h_öfo_Àn
);

811 i‡(
	`ext2fs_håì_gë_limô
(
íç
) !=

812 
	`ext2fs_håì_roŸ_limô
(
ù
, 
roŸp
->
h_öfo
.
h_öfo_Àn
))

813 
îr‹
;

816 
˙t
 = 
	`ext2fs_håì_gë_cou¡
(
íç
);

817 i‡(
˙t
 =0 || c¡ > 
	`ext2fs_håì_gë_limô
(
íç
))

818 
îr‹
;

820 
°¨t
 = 
íç
 + 1;

821 
íd
 = 
íç
 + 
˙t
 - 1;

822 
°¨t
 <
íd
) {

823 
middÀ
 = 
°¨t
 + (
íd
 - start) / 2;

824 i‡(
	`ext2fs_håì_gë_hash
(
middÀ
Ë> 
hash_maj‹
)

825 
íd
 = 
middÀ
 - 1;

827 
°¨t
 = 
middÀ
 + 1;

829 
found
 = 
°¨t
 - 1;

831 
Àvñ_öfo
 = &(
öfo
->
h_Àvñs
[öfo->
h_Àvñs_num
 - 1]);

832 
Àvñ_öfo
->
h_bp
 = 
bp
;

833 
Àvñ_öfo
->
h_íåõs
 = 
íç
;

834 
Àvñ_öfo
->
h_íåy
 = 
found
;

835 i‡(
Àvñs
 == 0)

837 
Àvñs
--;

838 i‡(
	`ext2fs_blk©off
(
vp
,

839 
	`ext2fs_håì_gë_block
(
found
Ë* 
m_fs
->
e2fs_bsize
,

840 
NULL
, &
bp
) != 0)

841 
îr‹
;

842 
íç
 = ((
ext2fs_håì_node
 *)
bp
->
b_d©a
)->
h_íåõs
;

843 
öfo
->
h_Àvñs_num
++;

844 
öfo
->
h_Àvñs
[öfo->
h_Àvñs_num
 - 1].
h_bp
 = 
bp
;

847 
îr‹
:

848 
	`ext2fs_håì_ªÀa£
(
öfo
);

850 
	}
}

856 
	$ext2fs_håì_lookup
(
öode
 *
ù
, c⁄° *
«me
, 
«mñí
,

857 
buf
 **
bµ
, *
íåyofÂ
, 
doff_t
 *
ofÂ
,

858 
doff_t
 *
¥evofÂ
, doff_à*
ídu£fuÕ
, 
ext2fs_£¨ch¶Ÿ
 *
ss
)

860 
	`¥ötf
 ("ex2fs_htree_lookup() called\n");

861 
	`k∑u£
 ("extdbg2", 
åue
,200,
NULL
);

862 
vnode
 *
vp
;

863 
ext2fs_håì_lookup_öfo
 
öfo
;

864 
ext2fs_håì_íåy
 *
Àaf_node
;

865 
m_ext2fs
 *
m_fs
;

866 
buf
 *
bp
;

867 
uöt32_t
 
blk
;

868 
uöt32_t
 
dúhash
;

869 
uöt32_t
 
bsize
;

870 
uöt8_t
 
hash_vîsi⁄
;

871 
£¨ch_√xt
;

872 
found
=0;

874 
m_fs
 = 
ù
->
i_e2fs
;

875 
bsize
 = 
m_fs
->
e2fs_bsize
;

876 
vp
 = 
	`ITOV
(
ù
);

879 
	`¥ötf
("fun: %s,löío: %d\n", 
__func__
, 
__LINE__
);

881 
	`mem£t
(&
öfo
, 0, (info));

882 i‡(
	`ext2fs_håì_föd_Àaf
(
ù
, 
«me
, 
«mñí
, &
dúhash
,

883 &
hash_vîsi⁄
, &
öfo
)) {

886 
	`¥ötf
("fun: %s,löío: %d\n", 
__func__
, 
__LINE__
);

888 
Àaf_node
 = 
öfo
.
h_Àvñs
[öfo.
h_Àvñs_num
 - 1].
h_íåy
;

889 
blk
 = 
	`ext2fs_håì_gë_block
(
Àaf_node
);

890 i‡(
	`ext2fs_blk©off
(
vp
, 
blk
 * 
bsize
, 
NULL
, &
bp
) != 0) {

891 
	`¥ötf
("fun: %s,löío: %d\n", 
__func__
, 
__LINE__
);

892 
	`ext2fs_håì_ªÀa£
(&
öfo
);

895 
	`¥ötf
("fun: %s,löío: %d\n", 
__func__
, 
__LINE__
);

896 *
ofÂ
 = 
blk
 * 
bsize
;

897 *
íåyofÂ
 = 0;

898 *
¥evofÂ
 = 
blk
 * 
bsize
;

899 *
ídu£fuÕ
 = 
blk
 * 
bsize
;

901 i‡(
ss
->
¶Ÿ°©us
 =
NONE
) {

902 
ss
->
¶Ÿoff£t
 = -1;

903 
ss
->
¶Ÿ‰ì•a˚
 = 0;

906 
	`¥ötf
("fun: %s,löío: %d\n", 
__func__
, 
__LINE__
);

907 i‡(
	`ext2fs_£¨ch_dúblock
(
ù
, 
bp
->
b_d©a
, &
found
,

908 
«me
, 
«mñí
, 
íåyofÂ
, 
ofÂ
, 
¥evofÂ
,

909 
ídu£fuÕ
, 
ss
) != 0) {

910 
	`bªl£
(
bp
, 0);

911 
	`ext2fs_håì_ªÀa£
(&
öfo
);

914 
	`¥ötf
("fun: %s,löío: %d\n", 
__func__
, 
__LINE__
);

915 i‡(
found
) {

916 *
bµ
 = 
bp
;

917 
	`ext2fs_håì_ªÀa£
(&
öfo
);

920 
	`¥ötf
("fun: %s,löío: %d\n", 
__func__
, 
__LINE__
);

921 
	`bªl£
(
bp
,0);

922 
£¨ch_√xt
 = 
	`ext2fs_håì_check_√xt
(
ù
, 
dúhash
, 
«me
, &
öfo
);

923 } 
£¨ch_√xt
);

924 
	`¥ötf
("fun: %s,löío: %d\n", 
__func__
, 
__LINE__
);

925 
	`ext2fs_håì_ªÀa£
(&
öfo
);

926  
ENOENT
;

927 
	}
}

	@ext2fs_htree.h

31 #i‚de‡
_FS_EXT2FS_HTREE_H_


32 
	#_FS_EXT2FS_HTREE_H_


	)

36 
	#EXT2_HTREE_LEGACY
 0

	)

37 
	#EXT2_HTREE_HALF_MD4
 1

	)

38 
	#EXT2_HTREE_TEA
 2

	)

39 
	#EXT2_HTREE_LEGACY_UNSIGNED
 3

	)

40 
	#EXT2_HTREE_HALF_MD4_UNSIGNED
 4

	)

41 
	#EXT2_HTREE_TEA_UNSIGNED
 5

	)

43 
	#EXT2_HTREE_EOF
 0x7FFFFFFF

	)

45 
	sext2fs_Áke_dúe˘
 {

46 
uöt32_t
 
	me2d_öo
;

47 
uöt16_t
 
	me2d_ª˛í
;

48 
uöt8_t
 
	me2d_«mÀn
;

49 
uöt8_t
 
	me2d_ty≥
;

52 
	sext2fs_håì_cou¡
 {

53 
uöt16_t
 
	mh_íåõs_max
;

54 
uöt16_t
 
	mh_íåõs_num
;

57 
	sext2fs_håì_íåy
 {

58 
uöt32_t
 
	mh_hash
;

59 
uöt32_t
 
	mh_blk
;

62 
	sext2fs_håì_roŸ_öfo
 {

63 
uöt32_t
 
	mh_ª£rved1
;

64 
uöt8_t
 
	mh_hash_vîsi⁄
;

65 
uöt8_t
 
	mh_öfo_Àn
;

66 
uöt8_t
 
	mh_öd_Àvñs
;

67 
uöt8_t
 
	mh_ª£rved2
;

70 
	sext2fs_håì_roŸ
 {

71 
ext2fs_Áke_dúe˘
 
	mh_dŸ
;

72 
	mh_dŸ_«me
[4];

73 
ext2fs_Áke_dúe˘
 
	mh_dŸdŸ
;

74 
	mh_dŸdŸ_«me
[4];

75 
ext2fs_håì_roŸ_öfo
 
	mh_öfo
;

76 
ext2fs_håì_íåy
 
	mh_íåõs
[0];

79 
	sext2fs_håì_node
 {

80 
ext2fs_Áke_dúe˘
 
	mh_Áke_dúít
;

81 
ext2fs_håì_íåy
 
	mh_íåõs
[0];

84 
	sext2fs_håì_lookup_Àvñ
 {

85 
buf
 *
	mh_bp
;

86 
ext2fs_håì_íåy
 *
	mh_íåõs
;

87 
ext2fs_håì_íåy
 *
	mh_íåy
;

90 
	sext2fs_håì_lookup_öfo
 {

91 
ext2fs_håì_lookup_Àvñ
 
	mh_Àvñs
[2];

92 
uöt32_t
 
	mh_Àvñs_num
;

95 
	sext2fs_håì_s‹t_íåy
 {

96 
uöt16_t
 
	mh_off£t
;

97 
uöt16_t
 
	mh_size
;

98 
uöt32_t
 
	mh_hash
;

	@ext2fs_inode.c

62 
	~<sys/cdefs.h
>

63 
__KERNEL_RCSID
(0, "$NetBSD:Éxt2fs_inode.c,v 1.82 2015/03/28 19:24:04 maxv Exp $");

65 
	~<sys/∑øm.h
>

66 
	~<sys/sy°m.h
>

67 
	~<sys/mou¡.h
>

68 
	~<sys/¥oc.h
>

69 
	~<sys/fûe.h
>

70 
	~<sys/buf.h
>

71 
	~<sys/vnode.h
>

72 
	~<sys/kî√l.h
>

73 
	~<sys/kmem.h
>

74 
	~<sys/åa˚.h
>

75 
	~<sys/ªsour˚v¨.h
>

76 
	~<sys/kauth.h
>

78 
	~<ufs/ufs/öode.h
>

79 
	~<ufs/ufs/ufsmou¡.h
>

80 
	~<ufs/ufs/ufs_exã∫.h
>

82 
	~<ufs/ext2fs/ext2fs.h
>

83 
	~<ufs/ext2fs/ext2fs_exã∫.h
>

85 
¥è˘ive
;

87 
ext2fs_ödúåunc
(
öode
 *, 
daddr_t
, daddr_t,

88 
daddr_t
, , *);

95 
CTASSERT
(
EXT2FS_NDADDR
 =
UFS_NDADDR
);

96 
CTASSERT
(
EXT2FS_NIADDR
 =
UFS_NIADDR
);

101 
uöt64_t


102 
	$ext2fs_size
(
öode
 *
ù
)

104 
uöt64_t
 
size
 = 
ù
->
i_e2fs_size
;

106 i‡((
ù
->
i_e2fs_mode
 & 
IFMT
Ë=
IFREG
)

107 
size
 |(
uöt64_t
)
ù
->
i_e2fs_da˛
 << 32;

108  
size
;

109 
	}
}

112 
	$ext2fs_£tsize
(
öode
 *
ù
, 
uöt64_t
 
size
)

114 i‡((
ù
->
i_e2fs_mode
 & 
IFMT
Ë=
IFREG
 ||

115 
ù
->
i_e2fs_mode
 == 0) {

116 
ù
->
i_e2fs_da˛
 = 
size
 >> 32;

117 i‡(
size
 >= 0x80000000U) {

118 
m_ext2fs
 *
fs
 = 
ù
->
i_e2fs
;

120 i‡(
fs
->
e2fs
.
e2fs_ªv
 <
E2FS_REV0
) {

122  
EFBIG
;

124 i‡(!(
fs
->
e2fs
.
e2fs_„©uªs_rocom∑t


125 & 
EXT2F_ROCOMPAT_LARGEFILE
)) {

126 
fs
->
e2fs
.
e2fs_„©uªs_rocom∑t
 |=

127 
EXT2F_ROCOMPAT_LARGEFILE
;

128 
fs
->
e2fs_fmod
 = 1;

131 } i‡(
size
 >= 0x80000000U)

132  
EFBIG
;

134 
ù
->
i_e2fs_size
 = 
size
;

137 
	}
}

139 
uöt64_t


140 
	$ext2fs_nblock
(
öode
 *
ù
)

142 
uöt64_t
 
nblock
 = 
ù
->
i_e2fs_nblock
;

143 
m_ext2fs
 * c⁄° 
fs
 = 
ù
->
i_e2fs
;

145 i‡(
fs
->
e2fs
.
e2fs_„©uªs_rocom∑t
 & 
EXT2F_ROCOMPAT_HUGE_FILE
) {

146 
nblock
 |(
uöt64_t
)
ù
->
i_e2fs_nblock_high
 << 32;

148 i‡((
ù
->
i_e2fs_Êags
 & 
EXT2_HUGE_FILE
)) {

149 
nblock
 = 
	`EXT2_FSBTODB
(
fs
,Çblock);

153  
nblock
;

154 
	}
}

157 
	$ext2fs_£äblock
(
öode
 *
ù
, 
uöt64_t
 
nblock
)

159 
m_ext2fs
 * c⁄° 
fs
 = 
ù
->
i_e2fs
;

161 i‡(
nblock
 <= 0xffffffffULL) {

162 
	`CLR
(
ù
->
i_e2fs_Êags
, 
EXT2_HUGE_FILE
);

163 
ù
->
i_e2fs_nblock
 = 
nblock
;

167 i‡(!
	`ISSET
(
fs
->
e2fs
.
e2fs_„©uªs_rocom∑t
, 
EXT2F_ROCOMPAT_HUGE_FILE
))

168  
EFBIG
;

170 i‡(
nblock
 <= 0xffffffffffffULL) {

171 
	`CLR
(
ù
->
i_e2fs_Êags
, 
EXT2_HUGE_FILE
);

172 
ù
->
i_e2fs_nblock
 = 
nblock
 & 0xffffffff;

173 
ù
->
i_e2fs_nblock_high
 = (
nblock
 >> 32) & 0xffff;

177 i‡(
	`EXT2_DBTOFSB
(
fs
, 
nblock
) <= 0xffffffffffffULL) {

178 
	`SET
(
ù
->
i_e2fs_Êags
, 
EXT2_HUGE_FILE
);

179 
ù
->
i_e2fs_nblock
 = 
	`EXT2_DBTOFSB
(
fs
, 
nblock
) & 0xffffffff;

180 
ù
->
i_e2fs_nblock_high
 = (
	`EXT2_DBTOFSB
(
fs
, 
nblock
) >> 32) & 0xffff;

184  
EFBIG
;

185 
	}
}

191 
	$ext2fs_öa˘ive
(*
v
)

193 
v›_öa˘ive_¨gs


196  *
≠
 = 
v
;

197 
vnode
 *
vp
 = 
≠
->
a_vp
;

198 
öode
 *
ù
 = 
	`VTOI
(
vp
);

199 
îr‹
 = 0;

201 i‡(
¥è˘ive
 && 
vp
->
v_u£cou¡
 != 0)

202 
	`v¥öt
("ext2fs_öa˘ive:Öushögá˘ive", 
vp
);

204 i‡(
ù
->
i_e2fs_mode
 =0 || ip->
i_e2fs_dtime
 != 0)

205 
out
;

207 
îr‹
 = 0;

208 i‡(
ù
->
i_e2fs_∆ök
 =0 && (
vp
->
v_mou¡
->
m¡_Êag
 & 
MNT_RDONLY
) == 0) {

210 i‡(
	`ext2fs_size
(
ù
) != 0) {

211 
îr‹
 = 
	`ext2fs_åunˇã
(
vp
, (
off_t
)0, 0, 
NOCRED
);

213 
ù
->
i_e2fs_dtime
 = 
time_£c⁄d
;

214 
ù
->
i_Êag
 |
IN_CHANGE
 | 
IN_UPDATE
;

215 
ù
->
i_omode
 = 1;

217 i‡(
ù
->
i_Êag
 & (
IN_CHANGE
 | 
IN_UPDATE
 | 
IN_MODIFIED
)) {

218 
	`ext2fs_upd©e
(
vp
, 
NULL
, NULL, 0);

220 
out
:

225 *
≠
->
a_ªcy˛e
 = (
ù
->
i_e2fs_dtime
 != 0);

226 
	`VOP_UNLOCK
(
vp
);

227  (
îr‹
);

228 
	}
}

241 
	$ext2fs_upd©e
(
vnode
 *
vp
, c⁄° 
time•ec
 *
acc
,

242 c⁄° 
time•ec
 *
mod
, 
updÊags
)

244 
m_ext2fs
 *
fs
;

245 
buf
 *
bp
;

246 
öode
 *
ù
;

247 
îr‹
;

248 *
˝
;

249 
Êags
;

251 i‡(
vp
->
v_mou¡
->
m¡_Êag
 & 
MNT_RDONLY
)

253 
ù
 = 
	`VTOI
(
vp
);

254 
	`EXT2FS_ITIMES
(
ù
, 
acc
, 
mod
, 
NULL
);

255 i‡(
updÊags
 & 
UPDATE_CLOSE
)

256 
Êags
 = 
ù
->
i_Êag
 & (
IN_MODIFIED
 | 
IN_ACCESSED
);

258 
Êags
 = 
ù
->
i_Êag
 & 
IN_MODIFIED
;

259 i‡(
Êags
 == 0)

261 
fs
 = 
ù
->
i_e2fs
;

263 
îr‹
 = 
	`bªad
(
ù
->
i_devvp
,

264 
	`EXT2_FSBTODB
(
fs
, 
	`öo_to_fsba
(fs, 
ù
->
i_numbî
)),

265 ()
fs
->
e2fs_bsize
, 
B_MODIFY
, &
bp
);

266 i‡(
îr‹
) {

267  (
îr‹
);

269 
ù
->
i_Êag
 &~(
IN_MODIFIED
 | 
IN_ACCESSED
);

270 
˝
 = (*)
bp
->
b_d©a
 +

271 (
	`öo_to_fsbo
(
fs
, 
ù
->
i_numbî
Ë* 
	`EXT2_DINODE_SIZE
(fs));

272 
	`e2fs_ißve
(
ù
->
i_dö
.
e2fs_dö
, (
ext2fs_döode
 *)
˝
);

273 i‡((
updÊags
 & (
UPDATE_WAIT
|
UPDATE_DIROP
)) != 0 &&

274 (
Êags
 & 
IN_MODIFIED
) != 0 &&

275 (
vp
->
v_mou¡
->
m¡_Êag
 & 
MNT_ASYNC
) == 0)

276  (
	`bwrôe
(
bp
));

278 
	`bdwrôe
(
bp
);

281 
	}
}

283 
	#SINGLE
 0

	)

284 
	#DOUBLE
 1

	)

285 
	#TRIPLE
 2

	)

291 
	$ext2fs_åunˇã
(
vnode
 *
ovp
, 
off_t
 
Àngth
, 
ioÊag
,

292 
kauth_¸ed_t
 
¸ed
)

294 
daddr_t
 
œ°block
;

295 
öode
 *
où
 = 
	`VTOI
(
ovp
);

296 
daddr_t
 
bn
, 
œ°iblock
[
EXT2FS_NIADDR
], 
ödú_lbn
[EXT2FS_NIADDR];

298 
öt32_t
 
ﬁdblks
[
EXT2FS_NDADDR
 + 
EXT2FS_NIADDR
], 
√wblks
[EXT2FS_NDADDR + EXT2FS_NIADDR];

299 
m_ext2fs
 *
fs
;

300 
off£t
, 
size
, 
Àvñ
;

301 
cou¡
, 
block§ñó£d
 = 0;

302 
i
, 
nblocks
;

303 
îr‹
, 
ÆÀº‹
 = 0;

304 
off_t
 
osize
;

305 
sync
;

306 
ufsmou¡
 *
ump
 = 
où
->
i_ump
;

308 i‡(
ovp
->
v_ty≥
 =
VCHR
 || ovp->v_ty≥ =
VBLK
 ||

309 
ovp
->
v_ty≥
 =
VFIFO
 || ovp->v_ty≥ =
VSOCK
) {

313 i‡(
Àngth
 < 0)

314  (
EINVAL
);

316 i‡(
ovp
->
v_ty≥
 =
VLNK
 &&

317 (
	`ext2fs_size
(
où
Ë< 
ump
->
um_maxsymlökÀn
 ||

318 (
ump
->
um_maxsymlökÀn
 =0 && 
	`ext2fs_nblock
(
où
) == 0))) {

319 
	`KDASSERT
(
Àngth
 == 0);

320 
	`mem£t
((*)&
où
->
i_dö
.
e2fs_dö
->
e2di_sh‹éök
, 0,

321 (
u_öt
)
	`ext2fs_size
(
où
));

322 ()
	`ext2fs_£tsize
(
où
, 0);

323 
où
->
i_Êag
 |
IN_CHANGE
 | 
IN_UPDATE
;

324  (
	`ext2fs_upd©e
(
ovp
, 
NULL
, NULL, 0));

326 i‡(
	`ext2fs_size
(
où
Ë=
Àngth
) {

328 
	`uvm_v≈_£tsize
(
ovp
, 
Àngth
);

329 
où
->
i_Êag
 |
IN_CHANGE
 | 
IN_UPDATE
;

330  (
	`ext2fs_upd©e
(
ovp
, 
NULL
, NULL, 0));

332 
fs
 = 
où
->
i_e2fs
;

333 i‡(
Àngth
 > 
ump
->
um_maxfûesize
)

334  (
EFBIG
);

336 
osize
 = 
	`ext2fs_size
(
où
);

343 i‡(
osize
 < 
Àngth
) {

344 
	`uvm_v≈_£twrôesize
(
ovp
, 
Àngth
);

345 
îr‹
 = 
	`ufs_bÆloc_ønge
(
ovp
, 
Àngth
 - 1, 1, 
¸ed
,

346 
ioÊag
 & 
IO_SYNC
 ? 
B_SYNC
 : 0);

347 i‡(
îr‹
) {

348 (Ë
	`ext2fs_åunˇã
(
ovp
, 
osize
, 
ioÊag
 & 
IO_SYNC
,

349 
¸ed
);

350  (
îr‹
);

352 
	`uvm_v≈_£tsize
(
ovp
, 
Àngth
);

353 
où
->
i_Êag
 |
IN_CHANGE
 | 
IN_UPDATE
;

354 
	`KASSERT
(
îr‹
 || 
ovp
->
v_size
 =
	`ext2fs_size
(
où
));

355  (
	`ext2fs_upd©e
(
ovp
, 
NULL
, NULL, 0));

364 
off£t
 = 
	`ext2_blkoff
(
fs
, 
Àngth
);

365 i‡(
off£t
 != 0) {

366 
size
 = 
fs
->
e2fs_bsize
;

369 
	`ubc_zî‹™ge
(&
ovp
->
v_uobj
, 
Àngth
, 
size
 - 
off£t
,

370 
	`UBC_UNMAP_FLAG
(
ovp
));

372 ()
	`ext2fs_£tsize
(
où
, 
Àngth
);

373 
	`uvm_v≈_£tsize
(
ovp
, 
Àngth
);

380 
œ°block
 = 
	`ext2_lblkno
(
fs
, 
Àngth
 + fs->
e2fs_bsize
 - 1) - 1;

381 
œ°iblock
[
SINGLE
] = 
œ°block
 - 
EXT2FS_NDADDR
;

382 
œ°iblock
[
DOUBLE
] =Üa°iblock[
SINGLE
] - 
	`EXT2_NINDIR
(
fs
);

383 
œ°iblock
[
TRIPLE
] =Üa°iblock[
DOUBLE
] - 
	`EXT2_NINDIR
(
fs
) * EXT2_NINDIR(fs);

384 
nblocks
 = 
	`btodb
(
fs
->
e2fs_bsize
);

391 
	`mem˝y
((*)
ﬁdblks
, (*)&
où
->
i_e2fs_blocks
[0],  oldblks);

392 
sync
 = 0;

393 
Àvñ
 = 
TRIPLE
;Üevñ >
SINGLE
;Üevel--) {

394 i‡(
œ°iblock
[
Àvñ
] < 0 && 
ﬁdblks
[
EXT2FS_NDADDR
 +Üevel] != 0) {

395 
sync
 = 1;

396 
où
->
i_e2fs_blocks
[
EXT2FS_NDADDR
 + 
Àvñ
] = 0;

397 
œ°iblock
[
Àvñ
] = -1;

400 
i
 = 0; i < 
EXT2FS_NDADDR
; i++) {

401 i‡(
i
 > 
œ°block
 && 
ﬁdblks
[i] != 0) {

402 
sync
 = 1;

403 
où
->
i_e2fs_blocks
[
i
] = 0;

406 
où
->
i_Êag
 |
IN_CHANGE
 | 
IN_UPDATE
;

407 i‡(
sync
) {

408 
îr‹
 = 
	`ext2fs_upd©e
(
ovp
, 
NULL
, NULL, 
UPDATE_WAIT
);

409 i‡(
îr‹
 && !
ÆÀº‹
)

410 
ÆÀº‹
 = 
îr‹
;

419 
	`mem˝y
((*)
√wblks
, (*)&
où
->
i_e2fs_blocks
[0], Çewblks);

420 
	`mem˝y
((*)&
où
->
i_e2fs_blocks
[0], (*)
ﬁdblks
,  oldblks);

422 ()
	`ext2fs_£tsize
(
où
, 
osize
);

423 
îr‹
 = 
	`våuncbuf
(
ovp
, 
œ°block
 + 1, 0, 0);

424 i‡(
îr‹
 && !
ÆÀº‹
)

425 
ÆÀº‹
 = 
îr‹
;

430 
ödú_lbn
[
SINGLE
] = -
EXT2FS_NDADDR
;

431 
ödú_lbn
[
DOUBLE
] = indú_lbn[
SINGLE
] - 
	`EXT2_NINDIR
(
fs
) -1;

432 
ödú_lbn
[
TRIPLE
] = indú_lbn[
DOUBLE
] - 
	`EXT2_NINDIR
(
fs
) * EXT2_NINDIR(fs) - 1;

433 
Àvñ
 = 
TRIPLE
;Üevñ >
SINGLE
;Üevel--) {

435 
bn
 = 
	`fs2h32
(
où
->
i_e2fs_blocks
[
EXT2FS_NDADDR
 + 
Àvñ
]);

436 i‡(
bn
 != 0) {

437 
îr‹
 = 
	`ext2fs_ödúåunc
(
où
, 
ödú_lbn
[
Àvñ
],

438 
	`EXT2_FSBTODB
(
fs
, 
bn
), 
œ°iblock
[
Àvñ
],Üevñ, &
cou¡
);

439 i‡(
îr‹
)

440 
ÆÀº‹
 = 
îr‹
;

441 
block§ñó£d
 +
cou¡
;

442 i‡(
œ°iblock
[
Àvñ
] < 0) {

443 
où
->
i_e2fs_blocks
[
EXT2FS_NDADDR
 + 
Àvñ
] = 0;

444 
	`ext2fs_blk‰ì
(
où
, 
bn
);

445 
block§ñó£d
 +
nblocks
;

448 i‡(
œ°iblock
[
Àvñ
] >= 0)

449 
d⁄e
;

455 
i
 = 
EXT2FS_NDADDR
 - 1; i > 
œ°block
; i--) {

457 
bn
 = 
	`fs2h32
(
où
->
i_e2fs_blocks
[
i
]);

458 i‡(
bn
 == 0)

460 
où
->
i_e2fs_blocks
[
i
] = 0;

461 
	`ext2fs_blk‰ì
(
où
, 
bn
);

462 
block§ñó£d
 +
	`btodb
(
fs
->
e2fs_bsize
);

465 
d⁄e
:

466 #ifde‡
DIAGNOSTIC


467 
Àvñ
 = 
SINGLE
;Üevñ <
TRIPLE
;Üevel++)

468 i‡(
√wblks
[
EXT2FS_NDADDR
 + 
Àvñ
] !=

469 
où
->
i_e2fs_blocks
[
EXT2FS_NDADDR
 + 
Àvñ
])

470 
	`∑nic
("ext2fs_truncate1");

471 
i
 = 0; i < 
EXT2FS_NDADDR
; i++)

472 i‡(
√wblks
[
i
] !
où
->
i_e2fs_blocks
[i])

473 
	`∑nic
("ext2fs_truncate2");

474 i‡(
Àngth
 == 0 &&

475 (!
	`LIST_EMPTY
(&
ovp
->
v_˛ónblkhd
) ||

476 !
	`LIST_EMPTY
(&
ovp
->
v_dútyblkhd
)))

477 
	`∑nic
("ext2fs_truncate3");

482 ()
	`ext2fs_£tsize
(
où
, 
Àngth
);

483 
îr‹
 = 
	`ext2fs_£äblock
(
où
, 
	`ext2fs_nblock
(oùË- 
block§ñó£d
);

484 i‡(
îr‹
 != 0)

485 
ÆÀº‹
 = 
îr‹
;

486 
où
->
i_Êag
 |
IN_CHANGE
;

487 
	`KASSERT
(
ovp
->
v_ty≥
 !
VREG
 || ovp->
v_size
 =
	`ext2fs_size
(
où
));

488  (
ÆÀº‹
);

489 
	}
}

501 
	$ext2fs_ödúåunc
(
öode
 *
ù
, 
daddr_t
 
lbn
, daddr_à
dbn
, daddr_à
œ°bn
,

502 
Àvñ
, *
cou¡p
)

504 
i
;

505 
buf
 *
bp
;

506 
m_ext2fs
 *
fs
 = 
ù
->
i_e2fs
;

507 
öt32_t
 *
b≠
;

508 
vnode
 *
vp
;

509 
daddr_t
 
nb
, 
∆bn
, 
œ°
;

510 
öt32_t
 *
c›y
 = 
NULL
;

511 
blkcou¡
, 
Á˘‹
;

512 
nblocks
, 
block§ñó£d
 = 0;

513 
îr‹
 = 0, 
ÆÀº‹
 = 0;

520 
Á˘‹
 = 1;

521 
i
 = 
SINGLE
; i < 
Àvñ
; i++)

522 
Á˘‹
 *
	`EXT2_NINDIR
(
fs
);

523 
œ°
 = 
œ°bn
;

524 i‡(
œ°bn
 > 0)

525 
œ°
 /
Á˘‹
;

526 
nblocks
 = 
	`btodb
(
fs
->
e2fs_bsize
);

535 
vp
 = 
	`ITOV
(
ù
);

536 
bp
 = 
	`gëblk
(
vp
, 
lbn
, ()
fs
->
e2fs_bsize
, 0, 0);

537 i‡(
bp
->
b_oÊags
 & (
BO_DONE
 | 
BO_DELWRI
)) {

539 
	`åa˚
(
TR_BREADHIT
, 
	`∑ck
(
vp
, 
fs
->
e2fs_bsize
), 
lbn
);

541 
	`åa˚
(
TR_BREADMISS
, 
	`∑ck
(
vp
, 
fs
->
e2fs_bsize
), 
lbn
);

542 
cuæwp
->
l_ru
.
ru_öblock
++;

543 
bp
->
b_Êags
 |
B_READ
;

544 i‡(
bp
->
b_bcou¡
 > bp->
b_bufsize
)

545 
	`∑nic
("ext2fs_indirtrunc: bad buffer size");

546 
bp
->
b_blkno
 = 
dbn
;

547 
	`VOP_STRATEGY
(
vp
, 
bp
);

548 
îr‹
 = 
	`biowaô
(
bp
);

550 i‡(
îr‹
) {

551 
	`bªl£
(
bp
, 0);

552 *
cou¡p
 = 0;

553  (
îr‹
);

556 
b≠
 = (
öt32_t
 *)
bp
->
b_d©a
;

557 i‡(
œ°bn
 >= 0) {

559 
c›y
 = 
	`kmem_Æloc
(
fs
->
e2fs_bsize
, 
KM_SLEEP
);

560 
	`mem˝y
((*)
c›y
, (*)
b≠
, (
u_öt
)
fs
->
e2fs_bsize
);

561 
	`mem£t
((*)&
b≠
[
œ°
 + 1], 0,

562 (
u_öt
)(
	`EXT2_NINDIR
(
fs
Ë- (
œ°
 + 1)Ë*  (
uöt32_t
));

563 
îr‹
 = 
	`bwrôe
(
bp
);

564 i‡(
îr‹
)

565 
ÆÀº‹
 = 
îr‹
;

566 
b≠
 = 
c›y
;

572 
i
 = 
	`EXT2_NINDIR
(
fs
) - 1,

573 
∆bn
 = 
lbn
 + 1 - 
i
 * 
Á˘‹
; i > 
œ°
;

574 
i
--, 
∆bn
 +
Á˘‹
) {

576 
nb
 = 
	`fs2h32
(
b≠
[
i
]);

577 i‡(
nb
 == 0)

579 i‡(
Àvñ
 > 
SINGLE
) {

580 
îr‹
 = 
	`ext2fs_ödúåunc
(
ù
, 
∆bn
, 
	`EXT2_FSBTODB
(
fs
, 
nb
),

581 (
daddr_t
)-1, 
Àvñ
 - 1,

582 &
blkcou¡
);

583 i‡(
îr‹
)

584 
ÆÀº‹
 = 
îr‹
;

585 
block§ñó£d
 +
blkcou¡
;

587 
	`ext2fs_blk‰ì
(
ù
, 
nb
);

588 
block§ñó£d
 +
nblocks
;

594 i‡(
Àvñ
 > 
SINGLE
 && 
œ°bn
 >= 0) {

595 
œ°
 = 
œ°bn
 % 
Á˘‹
;

597 
nb
 = 
	`fs2h32
(
b≠
[
i
]);

598 i‡(
nb
 != 0) {

599 
îr‹
 = 
	`ext2fs_ödúåunc
(
ù
, 
∆bn
, 
	`EXT2_FSBTODB
(
fs
, 
nb
),

600 
œ°
, 
Àvñ
 - 1, &
blkcou¡
);

601 i‡(
îr‹
)

602 
ÆÀº‹
 = 
îr‹
;

603 
block§ñó£d
 +
blkcou¡
;

607 i‡(
c›y
 !
NULL
) {

608 
	`kmem_‰ì
(
c›y
, 
fs
->
e2fs_bsize
);

610 
	`bªl£
(
bp
, 
BC_INVAL
);

613 *
cou¡p
 = 
block§ñó£d
;

614  (
ÆÀº‹
);

615 
	}
}

	@ext2fs_lookup.c

50 
	~<sys/cdefs.h
>

51 
__KERNEL_RCSID
(0, "$NetBSD:Éxt2fs_lookup.c,v 1.79 2016/01/12 21:29:29Ñiastradh Exp $");

53 
	~<sys/∑øm.h
>

55 
	~<sys/sy°m.h
>

56 
	~<sys/«mei.h
>

57 
	~<sys/buf.h
>

58 
	~<sys/fûe.h
>

59 
	~<sys/mou¡.h
>

60 
	~<sys/vnode.h
>

61 
	~<sys/kmem.h
>

62 
	~<sys/mÆloc.h
>

63 
	~<sys/dúít.h
>

64 
	~<sys/kauth.h
>

65 
	~<sys/¥oc.h
>

67 
	~<ufs/ufs/öode.h
>

68 
	~<ufs/ufs/ufsmou¡.h
>

69 
	~<ufs/ufs/ufs_exã∫.h
>

71 
	~<ufs/ext2fs/ext2fs_exã∫.h
>

72 
	~<ufs/ext2fs/ext2fs_dú.h
>

73 
	~<ufs/ext2fs/ext2fs.h
>

74 
	~<ufs/ext2fs/ext2fs_håì.h
>

76 
	~<miscfs/gífs/gífs.h
>

78 
dúchk
;

80 
ext2fs_dúc⁄v2ffs
(
ext2fs_dúe˘
 *
e2dú
,

81 
dúít
 *
ffsdú
);

82 
ext2fs_dúbadíåy
(
vnode
 *
dp
,

83 
ext2fs_dúe˘
 *
de
,

84 
íåyoff£töblock
);

85 
ext2fs_accumuœã•a˚
 (
ext2fs_£¨ch¶Ÿ
 *, 
ext2fs_dúe˘
 *, 
doff_t
 * );

86 
ˇŒög_msg
 (
dú_chk
);

98 
	$ext2fs_dúc⁄v2ffs
(
ext2fs_dúe˘
 *
e2dú
, 
dúít
 *
ffsdú
)

100 
	`mem£t
(
ffsdú
, 0, (
dúít
));

101 
ffsdú
->
d_fûío
 = 
	`fs2h32
(
e2dú
->
e2d_öo
);

102 
ffsdú
->
d_«mÀn
 = 
e2dú
->
e2d_«mÀn
;

104 
ffsdú
->
d_ty≥
 = 
DT_UNKNOWN
;

105 #ifde‡
DIAGNOSTIC


106 #i‡
MAXNAMLEN
 < 
E2FS_MAXNAMLEN


110 i‡(
e2dú
->
e2d_«mÀn
 > 
MAXNAMLEN
)

111 
	`∑nic
("ext2fs:É2dir->e2d_namlen");

114 
	`°∫˝y
(
ffsdú
->
d_«me
, 
e2dú
->
e2d_«me
, ffsdú->
d_«mÀn
);

120 
ffsdú
->
d_ª˛í
 = 
	`_DIRENT_SIZE
(ffsdir);

121 
	}
}

125 
	$ext2fs_is_dŸ_íåy
(
comp⁄íäame
 *
˙p
)

127 i‡(
˙p
->
˙_«mñí
 <2 && c≈->
˙_«mïå
[0] == '.' &&

128 (
˙p
->
˙_«mïå
[1] == '.' || cnp->cn_nameptr[1] == '\0'))

131 
	}
}

146 
	$ext2fs_ªaddú
(*
v
)

148 
v›_ªaddú_¨gs


155  *
≠
 = 
v
;

156 
uio
 *uiÿ
≠
->
a_uio
;

157 
îr‹
;

158 
size_t
 
e2fs_cou¡
, 
ªad˙t
;

159 
vnode
 *
vp
 = 
≠
->
a_vp
;

160 
m_ext2fs
 *
fs
 = 
	`VTOI
(
vp
)->
i_e2fs
;

162 
ext2fs_dúe˘
 *
dp
;

163 
dúít
 *
d°d
;

164 
uio
 
auio
;

165 
iovec
 
aiov
;

166 *
dúbuf
;

167 
off_t
 
off
 = 
uio
->
uio_off£t
;

168 
off_t
 *
cookõs
 = 
NULL
;

169 
nc
 = 0, 
ncookõs
 = 0;

170 
e2d_ª˛í
;

172 i‡(
vp
->
v_ty≥
 !
VDIR
)

173  (
ENOTDIR
);

175 
e2fs_cou¡
 = 
uio
->
uio_ªsid
;

177 
e2fs_cou¡
 -(
uio
->
uio_off£t
 +É2fs_cou¡Ë& (
fs
->
e2fs_bsize
 -1);

178 i‡(
e2fs_cou¡
 <= 0)

179  (
EINVAL
);

181 
auio
 = *
uio
;

182 
auio
.
uio_iov
 = &
aiov
;

183 
auio
.
uio_iov˙t
 = 1;

184 
aiov
.
iov_Àn
 = 
e2fs_cou¡
;

185 
auio
.
uio_ªsid
 = 
e2fs_cou¡
;

186 
	`UIO_SETUP_SYSSPACE
(&
auio
);

187 
dúbuf
 = 
	`kmem_Æloc
(
e2fs_cou¡
, 
KM_SLEEP
);

188 
d°d
 = 
	`kmem_zÆloc
((
dúít
), 
KM_SLEEP
);

189 i‡(
≠
->
a_ncookõs
) {

190 
nc
 = 
e2fs_cou¡
 / 
	`_DIRENT_MINSIZE
((
dúít
 *)0);

191 
ncookõs
 = 
nc
;

192 
cookõs
 = 
	`mÆloc
( (
off_t
Ë* 
ncookõs
, 
M_TEMP
, 
M_WAITOK
);

193 *
≠
->
a_cookõs
 = 
cookõs
;

195 
aiov
.
iov_ba£
 = 
dúbuf
;

197 
îr‹
 = 
	`UFS_BUFRD
(
≠
->
a_vp
, &
auio
, 0,áp->
a_¸ed
);

198 i‡(
îr‹
 == 0) {

199 
ªad˙t
 = 
e2fs_cou¡
 - 
auio
.
uio_ªsid
;

200 
dp
 = (
ext2fs_dúe˘
 *)
dúbuf
;

201 (*)
dp
 < (*)
dúbuf
 + 
ªad˙t
; ) {

202 
e2d_ª˛í
 = 
	`fs2h16
(
dp
->e2d_reclen);

203 i‡(
e2d_ª˛í
 == 0) {

204 
îr‹
 = 
EIO
;

207 
	`ext2fs_dúc⁄v2ffs
(
dp
, 
d°d
);

208 if(
d°d
->
d_ª˛í
 > 
uio
->
uio_ªsid
) {

211 
îr‹
 = 
	`uiomove
(
d°d
, d°d->
d_ª˛í
, 
uio
);

212 i‡(
îr‹
 != 0) {

215 
off
 = of‡+ 
e2d_ª˛í
;

216 i‡(
cookõs
 !
NULL
) {

217 *
cookõs
++ = 
off
;

218 i‡(--
ncookõs
 <= 0){

223 
dp
 = (
ext2fs_dúe˘
 *Ë((*)d∞+ 
e2d_ª˛í
);

226 
uio
->
uio_off£t
 = 
off
;

228 
	`kmem_‰ì
(
dúbuf
, 
e2fs_cou¡
);

229 
	`kmem_‰ì
(
d°d
, (*dstd));

230 *
≠
->
a_eofÊag
 = 
	`ext2fs_size
(
	`VTOI
◊p->
a_vp
)Ë<
uio
->
uio_off£t
;

231 i‡(
≠
->
a_ncookõs
) {

232 i‡(
îr‹
) {

233 
	`‰ì
(*
≠
->
a_cookõs
, 
M_TEMP
);

234 *
≠
->
a_ncookõs
 = 0;

235 *
≠
->
a_cookõs
 = 
NULL
;

237 *
≠
->
a_ncookõs
 = 
nc
 - 
ncookõs
;

239  (
îr‹
);

240 
	}
}

276 
	$ˇŒög_msg
 (
dú_chk
) {

277 
	`¥ötf
("vÆuêo‡dúchk %dánd CÆlögÉxt2fs_dúbadíåy()\n", 
dú_chk
);

279 
	}
}

282 
	$ext2fs_lookup
(*
v
)

284 
v›_lookup_v2_¨gs


288  *
≠
 = 
v
;

289 
vnode
 *
vdp
 = 
≠
->
a_dvp
;

290 
öode
 *
dp
 = 
	`VTOI
(
vdp
);

291 
buf
 *
bp
;

292 
ext2fs_dúe˘
 *
ï
;

293 
íåyoff£töblock
;

294 íum {
NONE
, 
COMPACT
, 
FOUND
} 
¶Ÿ°©us
;

295 
doff_t
 
¶Ÿoff£t
;

296 
¶Ÿsize
;

297 
¶Ÿ‰ì•a˚
;

298 
¶Ÿ√eded
;

299 
numdú∑s£s
;

300 
doff_t
 
íd£¨ch
;

301 
doff_t
 
¥evoff
;

302 
vnode
 *
tdp
;

303 
doff_t
 
ídu£ful
;

304 
u_l⁄g
 
bmask
;

305 
«mÀn
;

306 
îr‹
;

307 
doff_t
 
i_off£t
;

308 
ext2fs_£¨ch¶Ÿ
 
ss
;

309 
vnode
 **
vµ
 = 
≠
->
a_vµ
;

310 
comp⁄íäame
 *
˙p
 = 
≠
->
a_˙p
;

311 
kauth_¸ed_t
 
¸ed
 = 
˙p
->
˙_¸ed
;

312 
Êags
;

313 
«mei›
 = 
˙p
->
˙_«mei›
;

314 
ufsmou¡
 *
ump
 = 
dp
->
i_ump
;

315 
dúblksiz
 = 
ump
->
um_dúblksiz
;

316 
öo_t
 
foundöo
;

317 
ufs_lookup_ªsu…s
 *
ªsu…s
;

319 
DIRBLKSIZ
 = 
	`VTOI
(
vdp
)->
i_e2fs
->
e2fs_bsize
;

321 
bmask
 = 
	`VFSTOEXT2
(
vdp
->
v_mou¡
)->
um_mou¡p
->
m¡_°©
.
f_iosize
 - 1;

322 
Êags
 = 
˙p
->
˙_Êags
;

324 
bp
 = 
NULL
;

325 
¶Ÿoff£t
 = -1;

326 *
vµ
 = 
NULL
;

333 
ªsu…s
 = &
dp
->
i_¸≠
;

334 
dp
->
i_¸≠cou¡î
++;

340 i‡((
îr‹
 = 
	`VOP_ACCESS
(
vdp
, 
VEXEC
, 
¸ed
)) != 0)

341  
îr‹
;

344 i‡((
Êags
 & 
ISLASTCN
Ë&& (
vdp
->
v_mou¡
->
m¡_Êag
 & 
MNT_RDONLY
) &&

345 (
˙p
->
˙_«mei›
 =
DELETE
 || c≈->˙_«mei› =
RENAME
))

346  
EROFS
;

356 i‡(
	`ˇche_lookup
(
vdp
, 
˙p
->
˙_«mïå
, c≈->
˙_«mñí
,

357 
˙p
->
˙_«mei›
, c≈->
˙_Êags
, 
NULL
, 
vµ
)) {

358  *
vµ
 =
NULLVP
 ? 
ENOENT
 : 0;

367 
¶Ÿ°©us
 = 
FOUND
;

368 
¶Ÿ‰ì•a˚
 = 
¶Ÿsize
 = 
¶Ÿ√eded
 = 0;

369 i‡((
«mei›
 =
CREATE
 ||Çamei› =
RENAME
) &&

370 (
Êags
 & 
ISLASTCN
)) {

371 
¶Ÿ°©us
 = 
NONE
;

372 
¶Ÿ√eded
 = 
	`EXT2FS_DIRSIZ
(
˙p
->
˙_«mñí
);

386 
	`¥ötf
("ext2fs_håì_has_idx(dpËªtu∫s: %x\n",
	`ext2fs_håì_has_idx
(
dp
));

387 i‡(! 
	`ext2fs_is_dŸ_íåy
(
˙p
)&&
	`ext2fs_håì_has_idx
(
dp
)) {

388 
numdú∑s£s
 = 1;

389 
íåyoff£töblock
 = 0;

390 
	`¥ötf
 ("dúe˘‹y ha†håì indexándÜookög f‹ %s\n",
˙p
->
˙_«mïå
);

391 
håì_lookup_ªt

	`ext2fs_håì_lookup
(
dp
, 
˙p
->
˙_«mïå
, c≈->
˙_«mñí
,

392 &
bp
, &
íåyoff£töblock
, &
i_off£t
, &
¥evoff
,

393 &
ídu£ful
, &
ss
);

395 
håì_lookup_ªt
) {

397 
ï
 = (
ext2fs_dúe˘
*)((*)
bp
->
b_d©a
 +

398 (
i_off£t
 & 
bmask
));

399 
foundöo
 = 
ï
->
e2d_öo
;

400 
	`¥ötf
 ("inside case 0 of switch \n");

401 
found
;

402 
ENOENT
:

403 
i_off£t
 = 
	`roundup2
(
dp
->
i_size
, 
DIRBLKSIZ
);

404 
nŸfound
;

426 
bmask
 = 
vdp
->
v_mou¡
->
m¡_°©
.
f_iosize
 - 1;

427 i‡(
«mei›
 !
LOOKUP
 || 
ªsu…s
->
uÃ_dúoff
 == 0 ||

428 
ªsu…s
->
uÃ_dúoff
 >
	`ext2fs_size
(
dp
)) {

429 
íåyoff£töblock
 = 0;

430 
ªsu…s
->
uÃ_off£t
 = 0;

431 
numdú∑s£s
 = 1;

433 
ªsu…s
->
uÃ_off£t
 =Ñesu…s->
uÃ_dúoff
;

434 i‡((
íåyoff£töblock
 = 
ªsu…s
->
uÃ_off£t
 & 
bmask
) &&

435 (
îr‹
 = 
	`ext2fs_blk©off
(
vdp
, (
off_t
)
ªsu…s
->
uÃ_off£t
, 
NULL
, &
bp
)))

436  (
îr‹
);

437 
numdú∑s£s
 = 2;

438 
	`«meˇche_cou¡_2∑s£s
();

440 
¥evoff
 = 
ªsu…s
->
uÃ_off£t
;

441 
íd£¨ch
 = 
	`roundup
(
	`ext2fs_size
(
dp
), 
dúblksiz
);

442 
ídu£ful
 = 0;

444 
£¨chlo›
:

445 
ªsu…s
->
uÃ_off£t
 < 
íd£¨ch
) {

446 i‡(
	`cur˝u
()->
ci_sched°©e
.
•c_Êags
 & 
SPCF_SHOULDYIELD
)

447 
	`¥ìm±
();

451 i‡((
ªsu…s
->
uÃ_off£t
 & 
bmask
) == 0) {

452 i‡(
bp
 !
NULL
)

453 
	`bªl£
(
bp
, 0);

454 
îr‹
 = 
	`ext2fs_blk©off
(
vdp
, (
off_t
)
ªsu…s
->
uÃ_off£t
, 
NULL
,

455 &
bp
);

456 i‡(
îr‹
 != 0)

457  (
îr‹
);

458 
íåyoff£töblock
 = 0;

464 i‡(
¶Ÿ°©us
 =
NONE
 &&

465 (
íåyoff£töblock
 & (
dúblksiz
 - 1)) == 0) {

466 
¶Ÿoff£t
 = -1;

467 
¶Ÿ‰ì•a˚
 = 0;

476 
	`KASSERT
(
bp
 !
NULL
);

477 
ï
 = (
ext2fs_dúe˘
 *)

478 ((*)
bp
->
b_d©a
 + 
íåyoff£töblock
);

497 i‡(
¶Ÿ°©us
 !
FOUND
) {

498 
size
 = 
	`fs2h16
(
ï
->
e2d_ª˛í
);

500 i‡(
ï
->
e2d_öo
 != 0)

501 
size
 -
	`EXT2FS_DIRSIZ
(
ï
->
e2d_«mÀn
);

502 i‡(
size
 > 0) {

503 i‡(
size
 >
¶Ÿ√eded
) {

504 
¶Ÿ°©us
 = 
FOUND
;

505 
¶Ÿoff£t
 = 
ªsu…s
->
uÃ_off£t
;

506 
¶Ÿsize
 = 
	`fs2h16
(
ï
->
e2d_ª˛í
);

507 } i‡(
¶Ÿ°©us
 =
NONE
) {

508 
¶Ÿ‰ì•a˚
 +
size
;

509 i‡(
¶Ÿoff£t
 == -1)

510 
¶Ÿoff£t
 = 
ªsu…s
->
uÃ_off£t
;

511 i‡(
¶Ÿ‰ì•a˚
 >
¶Ÿ√eded
) {

512 
¶Ÿ°©us
 = 
COMPACT
;

513 
¶Ÿsize
 = 
ªsu…s
->
uÃ_off£t
 +

514 
	`fs2h16
(
ï
->
e2d_ª˛í
) -

515 
¶Ÿoff£t
;

524 i‡(
ï
->
e2d_öo
) {

525 
«mÀn
 = 
ï
->
e2d_«mÀn
;

526 i‡(
«mÀn
 =
˙p
->
˙_«mñí
 &&

527 !
	`memcmp
(
˙p
->
˙_«mïå
, 
ï
->
e2d_«me
,

528 ()
«mÀn
)) {

534 
foundöo
 = 
	`fs2h32
(
ï
->
e2d_öo
);

535 
ªsu…s
->
uÃ_ª˛í
 = 
	`fs2h16
(
ï
->
e2d_ª˛í
);

536 
found
;

539 
¥evoff
 = 
ªsu…s
->
uÃ_off£t
;

540 
ªsu…s
->
uÃ_off£t
 +
	`fs2h16
(
ï
->
e2d_ª˛í
);

541 
íåyoff£töblock
 +
	`fs2h16
(
ï
->
e2d_ª˛í
);

542 i‡(
ï
->
e2d_öo
)

543 
ídu£ful
 = 
ªsu…s
->
uÃ_off£t
;

545 
nŸfound
:

550 i‡(
numdú∑s£s
 == 2) {

551 
numdú∑s£s
--;

552 
ªsu…s
->
uÃ_off£t
 = 0;

553 
íd£¨ch
 = 
ªsu…s
->
uÃ_dúoff
;

554 
£¨chlo›
;

556 i‡(
bp
 !
NULL
)

557 
	`bªl£
(
bp
, 0);

564 i‡((
«mei›
 =
CREATE
 ||Çamei› =
RENAME
) &&

565 (
Êags
 & 
ISLASTCN
Ë&& 
dp
->
i_e2fs_∆ök
 != 0) {

570 
îr‹
 = 
	`VOP_ACCESS
(
vdp
, 
VWRITE
, 
¸ed
);

571 i‡(
îr‹
)

572  
îr‹
;

582 i‡(
¶Ÿ°©us
 =
NONE
) {

583 
ªsu…s
->
uÃ_off£t
 = 
	`roundup
(
	`ext2fs_size
(
dp
), 
dúblksiz
);

584 
ªsu…s
->
uÃ_cou¡
 = 0;

585 
ídu£ful
 = 
ªsu…s
->
uÃ_off£t
;

587 
ªsu…s
->
uÃ_off£t
 = 
¶Ÿoff£t
;

588 
ªsu…s
->
uÃ_cou¡
 = 
¶Ÿsize
;

589 i‡(
ídu£ful
 < 
¶Ÿoff£t
 + 
¶Ÿsize
)

590 
ídu£ful
 = 
¶Ÿoff£t
 + 
¶Ÿsize
;

592 
ªsu…s
->
uÃ_ídoff
 = 
	`roundup
(
ídu£ful
, 
dúblksiz
);

594 
dp
->
i_Êag
 |
IN_CHANGE
 | 
IN_UPDATE
;

607  (
EJUSTRETURN
);

612 i‡(
«mei›
 !
CREATE
) {

613 
	`ˇche_íãr
(
vdp
, *
vµ
, 
˙p
->
˙_«mïå
, c≈->
˙_«mñí
,

614 
˙p
->
˙_Êags
);

616  
ENOENT
;

618 
found
:

619 i‡(
numdú∑s£s
 == 2)

620 
	`«meˇche_cou¡_∑ss2
();

625 i‡(
ªsu…s
->
uÃ_off£t
 + 
	`EXT2FS_DIRSIZ
(
ï
->
e2d_«mÀn
Ë> 
	`ext2fs_size
(
dp
)) {

626 
	`ufs_dúbad
(
dp
, 
ªsu…s
->
uÃ_off£t
, "i_sizeÅoo small");

627 
îr‹
 = 
	`ext2fs_£tsize
(
dp
,

628 
ªsu…s
->
uÃ_off£t
 + 
	`EXT2FS_DIRSIZ
(
ï
->
e2d_«mÀn
));

629 i‡(
îr‹
) {

630 
	`bªl£
(
bp
, 0);

631  
îr‹
;

633 
dp
->
i_Êag
 |
IN_CHANGE
 | 
IN_UPDATE
;

634 
	`uvm_v≈_£tsize
(
vdp
, 
	`ext2fs_size
(
dp
));

636 
	`bªl£
(
bp
, 0);

643 i‡((
Êags
 & 
ISLASTCN
Ë&& 
«mei›
 =
LOOKUP
)

644 
ªsu…s
->
uÃ_dúoff
 =Ñesu…s->
uÃ_off£t
 &~ (
dúblksiz
 - 1);

651 i‡(
«mei›
 =
DELETE
 && (
Êags
 & 
ISLASTCN
)) {

658 i‡((
ªsu…s
->
uÃ_off£t
 & (
dúblksiz
 - 1)) == 0)

659 
ªsu…s
->
uÃ_cou¡
 = 0;

661 
ªsu…s
->
uÃ_cou¡
 =Ñesu…s->
uÃ_off£t
 - 
¥evoff
;

662 i‡(
dp
->
i_numbî
 =
foundöo
) {

663 
	`vªf
(
vdp
);

664 
tdp
 = 
vdp
;

666 
îr‹
 = 
	`vˇche_gë
(
vdp
->
v_mou¡
,

667 &
foundöo
, (foundöo), &
tdp
);

668 i‡(
îr‹
)

669  (
îr‹
);

674 i‡((
îr‹
 = 
	`VOP_ACCESS
(
vdp
, 
VWRITE
, 
¸ed
)) != 0) {

675 
	`vªÀ
(
tdp
);

676  
îr‹
;

684 i‡(
dp
->
i_e2fs_mode
 & 
ISVTX
) {

685 
îr‹
 = 
	`kauth_auth‹ize_vnode
(
¸ed
, 
KAUTH_VNODE_DELETE
,

686 
tdp
, 
vdp
, 
	`gífs_ˇn_°icky
(
¸ed
, 
dp
->
i_uid
,

687 
	`VTOI
(
tdp
)->
i_uid
));

688 i‡(
îr‹
) {

689 
	`vªÀ
(
tdp
);

690  (
EPERM
);

693 *
vµ
 = 
tdp
;

703 i‡(
«mei›
 =
RENAME
 && (
Êags
 & 
ISLASTCN
)) {

704 
îr‹
 = 
	`VOP_ACCESS
(
vdp
, 
VWRITE
, 
¸ed
);

705 i‡(
îr‹
)

706  
îr‹
;

711 i‡(
dp
->
i_numbî
 =
foundöo
)

712  
EISDIR
;

713 
îr‹
 = 
	`vˇche_gë
(
vdp
->
v_mou¡
,

714 &
foundöo
, (foundöo), &
tdp
);

715 i‡(
îr‹
)

716  
îr‹
;

717 *
vµ
 = 
tdp
;

721 i‡(
dp
->
i_numbî
 =
foundöo
) {

722 
	`vªf
(
vdp
);

723 *
vµ
 = 
vdp
;

725 
îr‹
 = 
	`vˇche_gë
(
vdp
->
v_mou¡
,

726 &
foundöo
, (foundöo), &
tdp
);

727 i‡(
îr‹
)

728  
îr‹
;

729 *
vµ
 = 
tdp
;

735 
	`ˇche_íãr
(
vdp
, *
vµ
, 
˙p
->
˙_«mïå
, c≈->
˙_«mñí
, c≈->
˙_Êags
);

737 
	}
}

739 
	$ext2fs_accumuœã•a˚
 (
ext2fs_£¨ch¶Ÿ
 *
s•
, 
ext2fs_dúe˘
 *
ï
, 
doff_t
 *
ofÂ
)

742 
size
 = 
ï
->
e2d_ª˛í
;

744 i‡(
ï
->
e2d_öo
 != 0)

745 
size
 -
	`EXT2_DIR_REC_LEN
(
ï
->
e2d_«mÀn
);

746 i‡(
size
 > 0) {

747 i‡(
size
 >
s•
->
¶Ÿ√eded
) {

748 
s•
->
¶Ÿ°©us
 = 
FOUND
;

749 
s•
->
¶Ÿoff£t
 = *
ofÂ
;

750 
s•
->
¶Ÿsize
 = 
ï
->
e2d_ª˛í
;

751 } i‡(
s•
->
¶Ÿ°©us
 =
NONE
) {

752 
s•
->
¶Ÿ‰ì•a˚
 +
size
;

753 i‡(
s•
->
¶Ÿoff£t
 == -1)

754 
s•
->
¶Ÿoff£t
 = *
ofÂ
;

755 i‡(
s•
->
¶Ÿ‰ì•a˚
 >s•->
¶Ÿ√eded
) {

756 
s•
->
¶Ÿ°©us
 = 
COMPACT
;

757 
s•
->
¶Ÿsize
 = *
ofÂ
 +

758 
ï
->
e2d_ª˛í
 -

759 
s•
->
¶Ÿoff£t
;

763 
	}
}

767 
	$ext2fs_£¨ch_dúblock
(
öode
 *
ù
, *
d©a
, *
foundp
,

768 c⁄° *
«me
, 
«mñí
, *
íåyoff£töblockp
,

769 
doff_t
 *
ofÂ
, doff_à*
¥evofÂ
, doff_à*
ídu£fuÕ
,

770 
ext2fs_£¨ch¶Ÿ
 *
s•
)

772 
vnode
 *
vdp
;

773 
ext2fs_dúe˘
 *
ï
, *
t›
;

774 
uöt32_t
 
bsize
 = 
ù
->
i_e2fs
->
e2fs_bsize
;

775 
off£t
 = *
íåyoff£töblockp
;

776 
«mÀn
;

778 
vdp
 = 
	`ITOV
(
ù
);

780 
ï
 = (
ext2fs_dúe˘
 *)((*)
d©a
 + 
off£t
);

781 
t›
 = (
ext2fs_dúe˘
 *)((*)
d©a
 +

782 
bsize
 - 
	`EXT2_DIR_REC_LEN
(0));

784 
ï
 < 
t›
) {

791 i‡(
ï
->
e2d_ª˛í
 == 0 ||

792 (
dúchk
 && 
	`ext2fs_dúbadíåy
(
vdp
, 
ï
, 
off£t
))) {

793 
i
;

794 
	`ufs_dúbad
(
ù
, *
ofÂ
, "mangledÉntry");

795 
i
 = 
bsize
 - (
off£t
 & (bsize - 1));

796 *
ofÂ
 +
i
;

797 
off£t
 +
i
;

807 i‡(
s•
->
¶Ÿ°©us
 !
FOUND
) {

808 
	`ext2fs_accumuœã•a˚
(
s•
, 
ï
, 
ofÂ
 );

814 i‡(
ï
->
e2d_öo
) {

815 
«mÀn
 = 
ï
->
e2d_«mÀn
;

816 i‡(
«mÀn
 =
«mñí
 &&

817 !
	`bcmp
(
«me
, 
ï
->
e2d_«me
, ()
«mÀn
)) {

823 *
foundp
 = 1;

827 *
¥evofÂ
 = *
ofÂ
;

828 *
ofÂ
 +
ï
->
e2d_ª˛í
;

829 
off£t
 +
ï
->
e2d_ª˛í
;

830 *
íåyoff£töblockp
 = 
off£t
;

831 i‡(
ï
->
e2d_öo
)

832 *
ídu£fuÕ
 = *
ofÂ
;

836 
ï
 = (
ext2fs_dúe˘
 *)((*)
d©a
 + 
off£t
);

840 
	}
}

858 
	$ext2fs_dúbadíåy
(
vnode
 *
dp
, 
ext2fs_dúe˘
 *
de
,

859 
íåyoff£töblock
)

864 
ufsmou¡
 *
ump
 = 
	`VFSTOUFS
(
dp
->
v_mou¡
);

865 
dúblksiz
 = 
ump
->
um_dúblksiz
;

867 c⁄° *
îr‹_msg
 = 
NULL
;

868 
ª˛í
 = 
	`fs2h16
(
de
->
e2d_ª˛í
);

869 
«mÀn
 = 
de
->
e2d_«mÀn
;

871 
	`¥ötf
("ö fun: %s,löío: %d\n", 
__func__
, 
__LINE__
);

872 
	`¥ötf
("«me_size:%d,Ñódög :%*s\n",()
de
->
e2d_«mÀn
,()de->e2d_«mÀn,de->
e2d_«me
);

875 i‡(
ª˛í
 < 
	`EXT2FS_DIRSIZ
(1)) {

876 
	`¥ötf
("ö fun: %s,löío: %d\n", 
__func__
, 
__LINE__
);

877 
	`k∑u£
 ("extdbg2", 
åue
,300,
NULL
);

878 
îr‹_msg
 = "rec_len is smallerÅhan minimal";

885 i‡(
«mÀn
 > 
EXT2FS_MAXNAMLEN
){

886 
	`¥ötf
("ö fun: %s,löío: %d\n", 
__func__
, 
__LINE__
);

887 
	`k∑u£
 ("extdbg2", 
åue
,300,
NULL
);

888 
îr‹_msg
 = "namlen > EXT2FS_MAXNAMLEN";

890 i‡(
ª˛í
 < 
	`EXT2FS_DIRSIZ
(
«mÀn
)){

891 
	`¥ötf
("ö fun: %s,löío: %d\n", 
__func__
, 
__LINE__
);

892 
	`k∑u£
 ("extdbg2", 
åue
,300,
NULL
);

893 
îr‹_msg
 = "reclen isÅoo small forÇame_len";

895 i‡(
íåyoff£töblock
 + 
ª˛í
 > 
dúblksiz
){

896 
	`¥ötf
("ö fun: %s,löío: %d\n", 
__func__
, 
__LINE__
);

897 
	`k∑u£
 ("extdbg2", 
åue
,300,
NULL
);

898 
îr‹_msg
 = "directoryÉntryácross blocks";

900 i‡(
	`fs2h32
(
de
->
e2d_öo
) >

901 
	`VTOI
(
dp
)->
i_e2fs
->
e2fs
.
e2fs_icou¡
){

902 
	`¥ötf
("ö fun: %s,löío: %d\n", 
__func__
, 
__LINE__
);

903 
	`k∑u£
 ("extdbg2", 
åue
,300,
NULL
);

904 
îr‹_msg
 = "inode out of bounds";

907 i‡(
îr‹_msg
 !
NULL
) {

908 
	`¥ötf
( "bad directoryÉntry: %s\n"

910 
îr‹_msg
, 
íåyoff£töblock
,

911 (Ë
	`fs2h32
(
de
->
e2d_öo
),

912 
ª˛í
, 
«mÀn
);

913 
	`¥ötf
("ö fun: %s,löío: %d\n", 
__func__
, 
__LINE__
);

914 
	`¥ötf
 ("kernel isáboutÅoÖanic");

915 
	`k∑u£
 ("extdbg2", 
åue
,1000,
NULL
);

918  
îr‹_msg
 =
NULL
 ? 0 : 1;

919 
	}
}

930 
	$ext2fs_dúíãr
(
öode
 *
ù
, 
vnode
 *
dvp
,

931 c⁄° 
ufs_lookup_ªsu…s
 *
uÃ
,

932 
comp⁄íäame
 *
˙p
)

934 
	`¥ötf
("ö fun: %s,löío: %d\n", 
__func__
, 
__LINE__
);

937 
öode
 *
dp
;

939 
ext2fs_dúe˘
 
√wdú
;

940 
iovec
 
aiov
;

941 
uio
 
auio
;

943 
îr‹
, 
√wíåysize
;

945 
ufsmou¡
 *
ump
 = 
	`VFSTOUFS
(
dvp
->
v_mou¡
);

946 
dúblksiz
 = 
ump
->
um_dúblksiz
;

948 
dp
 = 
	`VTOI
(
dvp
);

951 
√wdú
.
e2d_öo
 = 
	`h2fs32
(
ù
->
i_numbî
);

952 
√wdú
.
e2d_«mÀn
 = 
˙p
->
˙_«mñí
;

953 i‡(
ù
->
i_e2fs
->
e2fs
.
e2fs_ªv
 > 
E2FS_REV0
 &&

954 (
ù
->
i_e2fs
->
e2fs
.
e2fs_„©uªs_öcom∑t
 & 
EXT2F_INCOMPAT_FTYPE
)) {

955 
√wdú
.
e2d_ty≥
 = 
	`öŸ2ext2dt
(
	`IFTODT
(
ù
->
i_e2fs_mode
));

957 
√wdú
.
e2d_ty≥
 = 0;

959 
	`mem˝y
(
√wdú
.
e2d_«me
, 
˙p
->
˙_«mïå
, ()˙p->
˙_«mñí
 + 1);

960 
√wíåysize
 = 
	`EXT2FS_DIRSIZ
(
˙p
->
˙_«mñí
);

961 
	`¥ötf
("ö fun: %s,löío: %d\n", 
__func__
, 
__LINE__
);

964 i‡(
	`ext2fs_håì_has_idx
(
dp
)) {

965 
	`¥ötf
("inside if (ext2fs_htree_has_idx(dp)){ \n");

966 
îr‹
 = 
	`ext2fs_håì_add_íåy
(
dvp
, &
√wdú
, 
˙p
);

967 i‡(
îr‹
) {

969 
dp
->
i_e2fs_Êags
&~
EXT2_INDEX
;

970 
dp
->
i_Êag
 |
IN_CHANGE
 | 
IN_UPDATE
;

972  (
îr‹
);

975 
	`¥ötf
("ö fun: %s,löío: %d di_Êag†vÆue: %x \n", 
__func__
, 
__LINE__
, 
dp
->
i_dö
.
e2fs_dö
->
e2di_Êags
);

976 i‡(
	`EXT2_HAS_COMPAT_FEATURE
(
ù
->
i_e2fs
, 
EXT2F_COMPAT_DIRHASHINDEX
) &&

977 !
	`ext2fs_håì_has_idx
(
dp
)) {

979 
	`¥ötf
("ö fun: %s,löío: %d\n", 
__func__
, 
__LINE__
);

981 
	`¥ötf
("dp->i_size:%d, DIRBLKSIZ: %d, uÃ->uÃ_off£t: %d \n",
dp
->
i_dö
.
e2fs_dö
->
e2di_size
, 
DIRBLKSIZ
,
uÃ
->
uÃ_off£t
);

983 i‡(–
dp
->
i_dö
.
e2fs_dö
->
e2di_size
 / 
DIRBLKSIZ
) == 1){

986 * 
Makög
 
ödexed
 
dúe˘‹y
 
whí
 
⁄e
 
block
 
is
 
nŸ


987 * 
íough
 
to
 
ßve
 
Æl
 
íåõs
.

990 
dp
->
i_dö
.
e2fs_dö
->
e2di_Êags
 |
EXT2_INDEX
;

991 
dp
->
i_Êag
 |
IN_CHANGE
 | 
IN_UPDATE
;

992 
	`¥ötf
("callingÉxt2fs_htree_create_index();\n");

994  
	`ext2fs_håì_¸óã_ödex
(
dvp
, 
˙p
, &
√wdú
);

1002 i‡(
uÃ
->
uÃ_cou¡
 == 0) {

1009 i‡(
uÃ
->
uÃ_off£t
 & (
dúblksiz
 - 1))

1010 
	`∑nic
("ext2fs_direnter:Çewblk");

1011 
auio
.
uio_off£t
 = 
uÃ
->
uÃ_off£t
;

1012 
√wdú
.
e2d_ª˛í
 = 
	`h2fs16
(
dúblksiz
);

1013 
auio
.
uio_ªsid
 = 
√wíåysize
;

1014 
aiov
.
iov_Àn
 = 
√wíåysize
;

1015 
aiov
.
iov_ba£
 = (*)&
√wdú
;

1016 
auio
.
uio_iov
 = &
aiov
;

1017 
auio
.
uio_iov˙t
 = 1;

1018 
auio
.
uio_rw
 = 
UIO_WRITE
;

1019 
	`UIO_SETUP_SYSSPACE
(&
auio
);

1020 
îr‹
 = 
	`ext2fs_bufwr
(
dvp
, &
auio
, 
IO_SYNC
, 
˙p
->
˙_¸ed
);

1021 i‡(
dúblksiz
 > 
dvp
->
v_mou¡
->
m¡_°©
.
f_bsize
)

1023 
	`∑nic
("ext2fs_direnter: frag size");

1024 i‡(!
îr‹
) {

1025 
îr‹
 = 
	`ext2fs_£tsize
(
dp
,

1026 
	`roundup
(
	`ext2fs_size
(
dp
), 
dúblksiz
));

1027 i‡(
îr‹
)

1028  (
îr‹
);

1029 
dp
->
i_Êag
 |
IN_CHANGE
;

1030 
	`uvm_v≈_£tsize
(
dvp
, 
	`ext2fs_size
(
dp
));

1032  (
îr‹
);

1035 
îr‹
 = 
	`ext2fs_add_íåy
(
dvp
, &
√wdú
,
uÃ
);

1037 i‡(!
îr‹
 && 
uÃ
->
uÃ_ídoff
 && uÃ->uÃ_ídof‡< 
	`ext2fs_size
(
dp
))

1038 
îr‹
 = 
	`ext2fs_åunˇã
(
dvp
, (
off_t
)
uÃ
->
uÃ_ídoff
, 
IO_SYNC
,

1039 
˙p
->
˙_¸ed
);

1040  (
îr‹
);

1041 
	}
}

1051 
	$ext2fs_add_íåy
 (
vnode
* 
dvp
, 
ext2fs_dúe˘
 *
íåy
, c⁄° 
ufs_lookup_ªsu…s
 *
uÃ
)

1053 
ext2fs_dúe˘
 *
ï
, *
√p
;

1054 
öode
 *
dp
;

1055 
buf
 *
bp
;

1056 
u_öt
 
dsize
;

1057 
îr‹
, 
loc
, 
√wíåysize
, 
•a˚‰ì
;

1058 *
dúbuf
;

1060 
dp
 = 
	`VTOI
(
dvp
);

1077 i‡((
îr‹
 = 
	`ext2fs_blk©off
(
dvp
, (
off_t
)
uÃ
->
uÃ_off£t
, &
dúbuf
, &
bp
)) != 0)

1078  (
îr‹
);

1086 
ï
 = (
ext2fs_dúe˘
 *)
dúbuf
;

1087 
√wíåysize
 = 
dsize
 = 
	`EXT2FS_DIRSIZ
(
ï
->
e2d_«mÀn
);

1088 
•a˚‰ì
 = 
	`fs2h16
(
ï
->
e2d_ª˛í
Ë- 
dsize
;

1089 
loc
 = 
	`fs2h16
(
ï
->
e2d_ª˛í
);Üo¯< 
uÃ
->
uÃ_cou¡
; ) {

1090 
√p
 = (
ext2fs_dúe˘
 *)(
dúbuf
 + 
loc
);

1091 i‡(
ï
->
e2d_öo
) {

1093 
ï
->
e2d_ª˛í
 = 
	`h2fs16
(
dsize
);

1094 
ï
 = (
ext2fs_dúe˘
 *)((*Î∞+ 
dsize
);

1097 
•a˚‰ì
 +
dsize
;

1099 
dsize
 = 
	`EXT2FS_DIRSIZ
(
√p
->
e2d_«mÀn
);

1100 
•a˚‰ì
 +
	`fs2h16
(
√p
->
e2d_ª˛í
Ë- 
dsize
;

1101 
loc
 +
	`fs2h16
(
√p
->
e2d_ª˛í
);

1102 
	`mem˝y
((*)
ï
, (*)
√p
, 
dsize
);

1108 i‡(
ï
->
e2d_öo
 == 0) {

1109 #ifde‡
DIAGNOSTIC


1110 i‡(
•a˚‰ì
 + 
dsize
 < 
√wíåysize
)

1111 
	`∑nic
("ext2fs_direnter: compact1");

1113 
íåy
->
e2d_ª˛í
 = 
	`h2fs16
(
•a˚‰ì
 + 
dsize
);

1115 #ifde‡
DIAGNOSTIC


1116 i‡(
•a˚‰ì
 < 
√wíåysize
) {

1117 
	`¥ötf
("ext2fs_direnter: compact2 %u %u",

1118 (
u_öt
)
•a˚‰ì
, (u_öt)
√wíåysize
);

1119 
	`∑nic
("ext2fs_direnter: compact2");

1122 
íåy
->
e2d_ª˛í
 = 
	`h2fs16
(
•a˚‰ì
);

1123 
ï
->
e2d_ª˛í
 = 
	`h2fs16
(
dsize
);

1124 
ï
 = (
ext2fs_dúe˘
 *)((*Î∞+ 
dsize
);

1126 
	`mem˝y
((*)
ï
, (*)
íåy
, (
u_öt
)
√wíåysize
);

1127 
îr‹
 = 
	`VOP_BWRITE
(
bp
->
b_vp
, bp);

1128 
dp
->
i_Êag
 |
IN_CHANGE
 | 
IN_UPDATE
;

1130  
îr‹
;

1132 
	}
}

1153 
	$ext2fs_dúªmove
(
vnode
 *
dvp
, c⁄° 
ufs_lookup_ªsu…s
 *
uÃ
,

1154 
comp⁄íäame
 *
˙p
)

1156 
öode
 *
dp
;

1157 
ext2fs_dúe˘
 *
ï
;

1158 
buf
 *
bp
;

1159 
îr‹
;

1161 
dp
 = 
	`VTOI
(
dvp
);

1163 i‡(
uÃ
->
uÃ_cou¡
 == 0) {

1167 
îr‹
 = 
	`ext2fs_blk©off
(
dvp
, (
off_t
)
uÃ
->
uÃ_off£t
,

1168 (*)&
ï
, &
bp
);

1169 i‡(
îr‹
 != 0)

1170  (
îr‹
);

1171 
ï
->
e2d_öo
 = 0;

1172 
îr‹
 = 
	`VOP_BWRITE
(
bp
->
b_vp
, bp);

1173 
dp
->
i_Êag
 |
IN_CHANGE
 | 
IN_UPDATE
;

1174  (
îr‹
);

1179 
îr‹
 = 
	`ext2fs_blk©off
(
dvp
, (
off_t
)(
uÃ
->
uÃ_off£t
 - uÃ->
uÃ_cou¡
),

1180 (*)&
ï
, &
bp
);

1181 i‡(
îr‹
 != 0)

1182  (
îr‹
);

1183 
ï
->
e2d_ª˛í
 = 
	`h2fs16
(
	`fs2h16
”p->e2d_ª˛íË+ 
uÃ
->
uÃ_ª˛í
);

1184 
îr‹
 = 
	`VOP_BWRITE
(
bp
->
b_vp
, bp);

1185 
dp
->
i_Êag
 |
IN_CHANGE
 | 
IN_UPDATE
;

1186  (
îr‹
);

1187 
	}
}

1195 
	$ext2fs_dúªwrôe
(
öode
 *
dp
, c⁄° 
ufs_lookup_ªsu…s
 *
uÃ
,

1196 
öode
 *
ù
, 
comp⁄íäame
 *
˙p
)

1198 
buf
 *
bp
;

1199 
ext2fs_dúe˘
 *
ï
;

1200 
vnode
 *
vdp
 = 
	`ITOV
(
dp
);

1201 
îr‹
;

1203 
îr‹
 = 
	`ext2fs_blk©off
(
vdp
, (
off_t
)
uÃ
->
uÃ_off£t
, (*)&
ï
, &
bp
);

1204 i‡(
îr‹
 != 0)

1205  (
îr‹
);

1206 
ï
->
e2d_öo
 = 
	`h2fs32
(
ù
->
i_numbî
);

1207 i‡(
ù
->
i_e2fs
->
e2fs
.
e2fs_ªv
 > 
E2FS_REV0
 &&

1208 (
ù
->
i_e2fs
->
e2fs
.
e2fs_„©uªs_öcom∑t
 & 
EXT2F_INCOMPAT_FTYPE
)) {

1209 
ï
->
e2d_ty≥
 = 
	`öŸ2ext2dt
(
	`IFTODT
(
ù
->
i_e2fs_mode
));

1211 
ï
->
e2d_ty≥
 = 0;

1213 
îr‹
 = 
	`VOP_BWRITE
(
bp
->
b_vp
, bp);

1214 
dp
->
i_Êag
 |
IN_CHANGE
 | 
IN_UPDATE
;

1215  (
îr‹
);

1216 
	}
}

1228 
	$ext2fs_dúem±y
(
öode
 *
ù
, 
öo_t
 
∑ª¡öo
, 
kauth_¸ed_t
 
¸ed
)

1230 
off_t
 
off
;

1231 
ext2fs_dúãm∂©e
 
dbuf
;

1232 
ext2fs_dúe˘
 *
dp
 = (ext2fs_dúe˘ *)&
dbuf
;

1233 
îr‹
, 
«mÀn
;

1234 
size_t
 
cou¡
;

1236 
	#MINDIRSIZ
 ( (
ext2fs_dúãm∂©e
Ë/ 2)

	)

1238 
off
 = 0; of‡< 
	`ext2fs_size
(
ù
); of‡+
	`fs2h16
(
dp
->
e2d_ª˛í
)) {

1239 
îr‹
 = 
	`ufs_bufio
(
UIO_READ
, 
	`ITOV
(
ù
), (*)
dp
, 
MINDIRSIZ
,

1240 
off
, 
IO_NODELOCKED
, 
¸ed
, &
cou¡
, 
NULL
);

1245 i‡(
îr‹
 || 
cou¡
 != 0)

1248 i‡(
dp
->
e2d_ª˛í
 == 0)

1251 i‡(
dp
->
e2d_öo
 == 0)

1254 
«mÀn
 = 
dp
->
e2d_«mÀn
;

1255 i‡(
«mÀn
 > 2)

1257 i‡(
dp
->
e2d_«me
[0] != '.')

1264 i‡(
«mÀn
 == 1)

1266 i‡(
dp
->
e2d_«me
[1] ='.' && 
	`fs2h32
(dp->
e2d_öo
Ë=
∑ª¡öo
)

1271 
	}
}

	@ext2fs_readwrite.c

62 
	~<sys/cdefs.h
>

63 
__KERNEL_RCSID
(0, "$NetBSD:Éxt2fs_readwrite.c,v 1.74 2015/03/28 19:24:04 maxv Exp $");

65 
	~<sys/∑øm.h
>

66 
	~<sys/sy°m.h
>

67 
	~<sys/ªsour˚v¨.h
>

68 
	~<sys/kî√l.h
>

69 
	~<sys/fûe.h
>

70 
	~<sys/°©.h
>

71 
	~<sys/buf.h
>

72 
	~<sys/¥oc.h
>

73 
	~<sys/mou¡.h
>

74 
	~<sys/vnode.h
>

75 
	~<sys/sig«lv¨.h
>

76 
	~<sys/kauth.h
>

78 
	~<ufs/ufs/öode.h
>

79 
	~<ufs/ufs/ufsmou¡.h
>

80 
	~<ufs/ufs/ufs_exã∫.h
>

81 
	~<ufs/ext2fs/ext2fs.h
>

82 
	~<ufs/ext2fs/ext2fs_exã∫.h
>

84 
ext2fs_po°_ªad_upd©e
(
vnode
 *, , );

85 
ext2fs_po°_wrôe_upd©e
(
vnode
 *, 
uio
 *, ,

86 
kauth_¸ed_t
, 
off_t
, , , );

93 
	$ext2fs_ªad
(*
v
)

95 
	`¥ötf
("ex2fs_read\n");

96 
v›_ªad_¨gs


101  *
≠
 = 
v
;

102 
vnode
 *
vp
;

103 
öode
 *
ù
;

104 
uio
 *uio;

105 
ufsmou¡
 *
ump
;

106 
vsize_t
 
byãÀn
;

107 
advi˚
;

108 
îr‹
;

110 
vp
 = 
≠
->
a_vp
;

111 
ù
 = 
	`VTOI
(
vp
);

112 
ump
 = 
ù
->
i_ump
;

113 
uio
 = 
≠
->
a_uio
;

114 
îr‹
 = 0;

116 
	`KASSERT
(
uio
->
uio_rw
 =
UIO_READ
);

117 
	`KASSERT
(
vp
->
v_ty≥
 =
VREG
 || vp->v_ty≥ =
VDIR
);

120 i‡(
vp
->
v_ty≥
 =
VDIR
)

121  
	`ext2fs_bu‰d
(
vp
, 
uio
, 
≠
->
a_ioÊag
,áp->
a_¸ed
);

123 i‡((
uöt64_t
)
uio
->
uio_off£t
 > 
ump
->
um_maxfûesize
)

124  (
EFBIG
);

125 i‡(
uio
->
uio_ªsid
 == 0)

127 i‡(
uio
->
uio_off£t
 >
	`ext2fs_size
(
ù
))

128 
out
;

130 
	`KASSERT
(
vp
->
v_ty≥
 =
VREG
);

131 
advi˚
 = 
	`IO_ADV_DECODE
(
≠
->
a_ioÊag
);

132 
uio
->
uio_ªsid
 > 0) {

133 
byãÀn
 = 
	`MIN
(
	`ext2fs_size
(
ù
Ë- 
uio
->
uio_off£t
,

134 
uio
->
uio_ªsid
);

135 i‡(
byãÀn
 == 0)

138 
îr‹
 = 
	`ubc_uiomove
(&
vp
->
v_uobj
, 
uio
, 
byãÀn
, 
advi˚
,

139 
UBC_READ
 | 
UBC_PARTIALOK
 | 
	`UBC_UNMAP_FLAG
(
vp
));

140 i‡(
îr‹
)

144 
out
:

145 
îr‹
 = 
	`ext2fs_po°_ªad_upd©e
(
vp
, 
≠
->
a_ioÊag
,Érror);

146  (
îr‹
);

147 
	}
}

153 
	$ext2fs_bu‰d
(
vnode
 *
vp
, 
uio
 *uio, 
ioÊag
, 
kauth_¸ed_t
 
¸ed
)

155 
öode
 *
ù
;

156 
ufsmou¡
 *
ump
;

157 
m_ext2fs
 *
fs
;

158 
buf
 *
bp
;

159 
off_t
 
byãsöfûe
;

160 
daddr_t
 
lbn
, 
√xébn
;

161 
size
, 
x„rsize
, 
blkoff£t
;

162 
îr‹
;

164 
	`KASSERT
(
uio
->
uio_rw
 =
UIO_READ
);

165 
	`KASSERT
(
	`VOP_ISLOCKED
(
vp
));

166 
	`KASSERT
(
vp
->
v_ty≥
 =
VDIR
 || vp->v_ty≥ =
VLNK
);

168 
ù
 = 
	`VTOI
(
vp
);

169 
ump
 = 
ù
->
i_ump
;

170 
fs
 = 
ù
->
i_e2fs
;

171 
îr‹
 = 0;

173 
	`KASSERT
(
vp
->
v_ty≥
 !
VLNK
 ||

174 
	`ext2fs_size
(
ù
Ë>
ump
->
um_maxsymlökÀn
);

175 
	`KASSERT
(
vp
->
v_ty≥
 !
VLNK
 || 
ump
->
um_maxsymlökÀn
 != 0 ||

176 
	`ext2fs_nblock
(
ù
) != 0);

178 i‡(
uio
->
uio_off£t
 > 
ump
->
um_maxfûesize
)

179  
EFBIG
;

180 i‡(
uio
->
uio_ªsid
 == 0)

182 i‡(
uio
->
uio_off£t
 >
	`ext2fs_size
(
ù
))

183 
out
;

185 
îr‹
 = 0, 
bp
 = 
NULL
; 
uio
->
uio_ªsid
 > 0; bp = NULL) {

186 
byãsöfûe
 = 
	`ext2fs_size
(
ù
Ë- 
uio
->
uio_off£t
;

187 i‡(
byãsöfûe
 <= 0)

189 
lbn
 = 
	`ext2_lblkno
(
fs
, 
uio
->
uio_off£t
);

190 
√xébn
 = 
lbn
 + 1;

191 
size
 = 
fs
->
e2fs_bsize
;

192 
blkoff£t
 = 
	`ext2_blkoff
(
fs
, 
uio
->
uio_off£t
);

193 
x„rsize
 = 
fs
->
e2fs_bsize
 - 
blkoff£t
;

194 i‡(
uio
->
uio_ªsid
 < 
x„rsize
)

195 
x„rsize
 = 
uio
->
uio_ªsid
;

196 i‡(
byãsöfûe
 < 
x„rsize
)

197 
x„rsize
 = 
byãsöfûe
;

199 i‡(
	`ext2_lblktosize
(
fs
, 
√xébn
Ë>
	`ext2fs_size
(
ù
))

200 
îr‹
 = 
	`bªad
(
vp
, 
lbn
, 
size
, 0, &
bp
);

203 
√xtsize
 = 
fs
->
e2fs_bsize
;

204 
îr‹
 = 
	`bªadn
(
vp
, 
lbn
,

205 
size
, &
√xébn
, &
√xtsize
, 1, 0, &
bp
);

207 i‡(
îr‹
)

217 
size
 -
bp
->
b_ªsid
;

218 i‡(
size
 < 
x„rsize
) {

219 i‡(
size
 == 0)

221 
x„rsize
 = 
size
;

223 
îr‹
 = 
	`uiomove
((*)
bp
->
b_d©a
 + 
blkoff£t
, 
x„rsize
, 
uio
);

224 i‡(
îr‹
)

226 
	`bªl£
(
bp
, 0);

228 i‡(
bp
 !
NULL
)

229 
	`bªl£
(
bp
, 0);

231 
out
:

232 
îr‹
 = 
	`ext2fs_po°_ªad_upd©e
(
vp
, 
ioÊag
,Érror);

233  (
îr‹
);

234 
	}
}

237 
	$ext2fs_po°_ªad_upd©e
(
vnode
 *
vp
, 
ioÊag
, 
€º‹
)

239 
öode
 *
ù
 = 
	`VTOI
(
vp
);

240 
îr‹
 = 
€º‹
;

242 i‡(!(
vp
->
v_mou¡
->
m¡_Êag
 & 
MNT_NOATIME
)) {

243 
ù
->
i_Êag
 |
IN_ACCESS
;

244 i‡((
ioÊag
 & 
IO_SYNC
) == IO_SYNC)

245 
îr‹
 = 
	`ext2fs_upd©e
(
vp
, 
NULL
, NULL, 
UPDATE_WAIT
);

249 i‡(
€º‹
)

250 
îr‹
 = 
€º‹
;

251  
îr‹
;

252 
	}
}

258 
	$ext2fs_wrôe
(*
v
)

260 
v›_wrôe_¨gs


265  *
≠
 = 
v
;

266 
vnode
 *
vp
;

267 
uio
 *uio;

268 
öode
 *
ù
;

269 
m_ext2fs
 *
fs
;

270 
ufsmou¡
 *
ump
;

271 
off_t
 
osize
;

272 
blkoff£t
, 
îr‹
, 
ioÊag
, 
ªsid
;

273 
vsize_t
 
byãÀn
;

274 
off_t
 
ﬁdoff
 = 0;

275 
boﬁ
 
async
;

276 
exãnded
 = 0;

277 
advi˚
;

279 
ioÊag
 = 
≠
->
a_ioÊag
;

280 
advi˚
 = 
	`IO_ADV_DECODE
(
ioÊag
);

281 
uio
 = 
≠
->
a_uio
;

282 
vp
 = 
≠
->
a_vp
;

283 
ù
 = 
	`VTOI
(
vp
);

284 
ump
 = 
ù
->
i_ump
;

285 
îr‹
 = 0;

287 
	`KASSERT
(
uio
->
uio_rw
 =
UIO_WRITE
);

288 
	`KASSERT
(
vp
->
v_ty≥
 =
VREG
);

290 i‡(
ioÊag
 & 
IO_APPEND
)

291 
uio
->
uio_off£t
 = 
	`ext2fs_size
(
ù
);

292 i‡((
ù
->
i_e2fs_Êags
 & 
EXT2_APPEND
) &&

293 
uio
->
uio_off£t
 !
	`ext2fs_size
(
ù
))

294  (
EPERM
);

296 
fs
 = 
ù
->
i_e2fs
;

297 i‡(
uio
->
uio_off£t
 < 0 ||

298 (
uöt64_t
)
uio
->
uio_off£t
 + uio->
uio_ªsid
 > 
ump
->
um_maxfûesize
)

299  (
EFBIG
);

300 i‡(
uio
->
uio_ªsid
 == 0)

303 
async
 = 
vp
->
v_mou¡
->
m¡_Êag
 & 
MNT_ASYNC
;

304 
ªsid
 = 
uio
->
uio_ªsid
;

305 
osize
 = 
	`ext2fs_size
(
ù
);

307 
	`KASSERT
(
vp
->
v_ty≥
 =
VREG
);

308 
uio
->
uio_ªsid
 > 0) {

309 
ﬁdoff
 = 
uio
->
uio_off£t
;

310 
blkoff£t
 = 
	`ext2_blkoff
(
fs
, 
uio
->
uio_off£t
);

311 
byãÀn
 = 
	`MIN
(
fs
->
e2fs_bsize
 - 
blkoff£t
, 
uio
->
uio_ªsid
);

313 i‡(
vp
->
v_size
 < 
ﬁdoff
 + 
byãÀn
) {

314 
	`uvm_v≈_£twrôesize
(
vp
, 
ﬁdoff
 + 
byãÀn
);

316 
îr‹
 = 
	`ufs_bÆloc_ønge
(
vp
, 
uio
->
uio_off£t
, 
byãÀn
,

317 
≠
->
a_¸ed
, 0);

318 i‡(
îr‹
)

320 
îr‹
 = 
	`ubc_uiomove
(&
vp
->
v_uobj
, 
uio
, 
byãÀn
, 
advi˚
,

321 
UBC_WRITE
 | 
	`UBC_UNMAP_FLAG
(
vp
));

322 i‡(
îr‹
)

330 i‡(
vp
->
v_size
 < 
uio
->
uio_off£t
) {

331 
	`uvm_v≈_£tsize
(
vp
, 
uio
->
uio_off£t
);

332 
exãnded
 = 1;

340 i‡(!
async
 && 
ﬁdoff
 >> 16 !
uio
->
uio_off£t
 >> 16) {

341 
	`muãx_íãr
(
vp
->
v_öãæock
);

342 
îr‹
 = 
	`VOP_PUTPAGES
(
vp
, (
ﬁdoff
 >> 16) << 16,

343 (
uio
->
uio_off£t
 >> 16) << 16,

344 
PGO_CLEANIT
 | 
PGO_LAZY
);

347 i‡(
îr‹
 =0 && 
ioÊag
 & 
IO_SYNC
) {

348 
	`muãx_íãr
(
vp
->
v_öãæock
);

349 
îr‹
 = 
	`VOP_PUTPAGES
(
vp
, 
	`åunc_∑ge
(
ﬁdoff
),

350 
	`round_∑ge
(
	`ext2_blkroundup
(
fs
, 
uio
->
uio_off£t
)),

351 
PGO_CLEANIT
 | 
PGO_SYNCIO
);

354 
îr‹
 = 
	`ext2fs_po°_wrôe_upd©e
(
vp
, 
uio
, 
ioÊag
, 
≠
->
a_¸ed
, 
osize
,

355 
ªsid
, 
exãnded
, 
îr‹
);

356  (
îr‹
);

357 
	}
}

363 
	$ext2fs_bufwr
(
vnode
 *
vp
, 
uio
 *uio, 
ioÊag
, 
kauth_¸ed_t
 
¸ed
)

365 
öode
 *
ù
;

366 
ufsmou¡
 *
ump
;

367 
m_ext2fs
 *
fs
;

368 
buf
 *
bp
;

369 
Êags
;

370 
off_t
 
osize
;

371 
daddr_t
 
lbn
;

372 
ªsid
, 
blkoff£t
, 
x„rsize
;

373 
exãnded
 = 0;

374 
îr‹
;

376 
	`KASSERT
(
	`VOP_ISLOCKED
(
vp
Ë=
LK_EXCLUSIVE
);

377 
	`KASSERT
(
vp
->
v_ty≥
 =
VDIR
 || vp->v_ty≥ =
VLNK
);

378 
	`KASSERT
(
vp
->
v_ty≥
 !
VDIR
 || 
	`ISSET
(
ioÊag
, 
IO_SYNC
));

379 
	`KASSERT
(
uio
->
uio_rw
 =
UIO_WRITE
);

381 
ù
 = 
	`VTOI
(
vp
);

382 
ump
 = 
ù
->
i_ump
;

383 
fs
 = 
ù
->
i_e2fs
;

384 
îr‹
 = 0;

386 i‡(
uio
->
uio_off£t
 < 0 ||

387 
uio
->
uio_ªsid
 > 
ump
->
um_maxfûesize
 ||

388 
uio
->
uio_off£t
 > (
ump
->
um_maxfûesize
 - uio->
uio_ªsid
))

389  
EFBIG
;

390 i‡(
uio
->
uio_ªsid
 == 0)

393 
Êags
 = 
ioÊag
 & 
IO_SYNC
 ? 
B_SYNC
 : 0;

394 
ªsid
 = 
uio
->
uio_ªsid
;

395 
osize
 = 
	`ext2fs_size
(
ù
);

397 
îr‹
 = 0; 
uio
->
uio_ªsid
 > 0;) {

398 
lbn
 = 
	`ext2_lblkno
(
fs
, 
uio
->
uio_off£t
);

399 
blkoff£t
 = 
	`ext2_blkoff
(
fs
, 
uio
->
uio_off£t
);

400 
x„rsize
 = 
	`MIN
(
fs
->
e2fs_bsize
 - 
blkoff£t
, 
uio
->
uio_ªsid
);

401 i‡(
x„rsize
 < 
fs
->
e2fs_bsize
)

402 
Êags
 |
B_CLRBUF
;

404 
Êags
 &~
B_CLRBUF
;

405 
îr‹
 = 
	`ext2fs_bÆloc
(
ù
, 
lbn
, 
blkoff£t
 + 
x„rsize
, 
¸ed
, &
bp
,

406 
Êags
);

407 i‡(
îr‹
)

409 i‡(
	`ext2fs_size
(
ù
Ë< 
uio
->
uio_off£t
 + 
x„rsize
) {

410 
îr‹
 = 
	`ext2fs_£tsize
(
ù
, 
uio
->
uio_off£t
 + 
x„rsize
);

411 i‡(
îr‹
)

414 
îr‹
 = 
	`uiomove
((*)
bp
->
b_d©a
 + 
blkoff£t
, 
x„rsize
, 
uio
);

421 i‡(
vp
->
v_size
 < 
uio
->
uio_off£t
) {

422 
	`uvm_v≈_£tsize
(
vp
, 
uio
->
uio_off£t
);

423 
exãnded
 = 1;

426 i‡(
ioÊag
 & 
IO_SYNC
)

427 ()
	`bwrôe
(
bp
);

428 i‡(
x„rsize
 + 
blkoff£t
 =
fs
->
e2fs_bsize
)

429 
	`bawrôe
(
bp
);

431 
	`bdwrôe
(
bp
);

432 i‡(
îr‹
 || 
x„rsize
 == 0)

436 
îr‹
 = 
	`ext2fs_po°_wrôe_upd©e
(
vp
, 
uio
, 
ioÊag
, 
¸ed
, 
osize
, 
ªsid
,

437 
exãnded
, 
îr‹
);

438  (
îr‹
);

439 
	}
}

442 
	$ext2fs_po°_wrôe_upd©e
(
vnode
 *
vp
, 
uio
 *uio, 
ioÊag
,

443 
kauth_¸ed_t
 
¸ed
, 
off_t
 
osize
, 
ªsid
, 
exãnded
, 
€º‹
)

445 
öode
 *
ù
 = 
	`VTOI
(
vp
);

446 
îr‹
 = 
€º‹
;

449 
ù
->
i_Êag
 |
IN_CHANGE
 | 
IN_UPDATE
;

450 i‡(
vp
->
v_mou¡
->
m¡_Êag
 & 
MNT_RELATIME
)

451 
ù
->
i_Êag
 |
IN_ACCESS
;

458 i‡(
ªsid
 > 
uio
->
uio_ªsid
 && 
¸ed
) {

459 i‡(
ù
->
i_e2fs_mode
 & 
ISUID
) {

460 i‡(
	`kauth_auth‹ize_vnode
(
¸ed
,

461 
KAUTH_VNODE_RETAIN_SUID
, 
vp
, 
NULL
, 
EPERM
) != 0)

462 
ù
->
i_e2fs_mode
 &
ISUID
;

465 i‡(
ù
->
i_e2fs_mode
 & 
ISGID
) {

466 i‡(
	`kauth_auth‹ize_vnode
(
¸ed
,

467 
KAUTH_VNODE_RETAIN_SGID
, 
vp
, 
NULL
, 
EPERM
) != 0)

468 
ù
->
i_e2fs_mode
 &~
ISGID
;

473 i‡(
ªsid
 > 
uio
->
uio_ªsid
)

474 
	`VN_KNOTE
(
vp
, 
NOTE_WRITE
 | (
exãnded
 ? 
NOTE_EXTEND
 : 0));

480 i‡(
îr‹
) {

481 (Ë
	`ext2fs_åunˇã
(
vp
, 
osize
, 
ioÊag
 & 
IO_SYNC
, 
¸ed
);

482 
uio
->
uio_off£t
 -
ªsid
 - uio->
uio_ªsid
;

483 
uio
->
uio_ªsid
 = 
ªsid
;

484 } i‡(
ªsid
 > 
uio
->
uio_ªsid
 && (
ioÊag
 & 
IO_SYNC
) == IO_SYNC)

485 
îr‹
 = 
	`ext2fs_upd©e
(
vp
, 
NULL
, NULL, 
UPDATE_WAIT
);

488 
	`KASSERT
(
vp
->
v_size
 =
	`ext2fs_size
(
ù
));

491 i‡(
€º‹
)

492 
îr‹
 = 
€º‹
;

493  
îr‹
;

494 
	}
}

	@ext2fs_rename.c

36 
	~<sys/cdefs.h
>

37 
__KERNEL_RCSID
(0, "$NetBSD:Éxt2fs_rename.c,v 1.8 2015/03/27 17:27:56Ñiastradh Exp $");

39 
	~<sys/∑øm.h
>

40 
	~<sys/buf.h
>

41 
	~<sys/î∫o.h
>

42 
	~<sys/kauth.h
>

43 
	~<sys/mou¡.h
>

44 
	~<sys/«mei.h
>

45 
	~<sys/vnode.h
>

46 
	~<sys/vnode_if.h
>

48 
	~<miscfs/gífs/gífs.h
>

50 
	~<ufs/ext2fs/ext2fs.h
>

51 
	~<ufs/ext2fs/ext2fs_dú.h
>

52 
	~<ufs/ext2fs/ext2fs_exã∫.h
>

53 
	~<ufs/ufs/öode.h
>

54 
	~<ufs/ufs/ufs_exã∫.h
>

55 
	~<ufs/ufs/ufsmou¡.h
>

60 
ext2fs_ß√_ª«me
(
vnode
 *, 
comp⁄íäame
 *,

61 
vnode
 *, 
comp⁄íäame
 *,

62 
kauth_¸ed_t
, 
boﬁ
);

63 
boﬁ
 
ext2fs_ª«me_uÃ_ovîœp_p
(c⁄° 
ufs_lookup_ªsu…s
 *,

64 c⁄° 
ufs_lookup_ªsu…s
 *);

65 
ext2fs_ª«me_ªˇlcuœã_fuÃ
(
vnode
 *,

66 
ufs_lookup_ªsu…s
 *, const ufs_lookup_results *,

67 c⁄° 
comp⁄íäame
 *);

68 
boﬁ
 
ext2fs_rmdúed_p
(
vnode
 *);

69 
ext2fs_ªad_dŸdŸ
(
vnode
 *, 
kauth_¸ed_t
, 
öo_t
 *);

70 
ext2fs_ª«me_ª∂a˚_dŸdŸ
(
vnode
 *,

71 
vnode
 *, vnodê*, 
kauth_¸ed_t
);

72 
ext2fs_gro_lock_dúe˘‹y
(
mou¡
 *, 
vnode
 *);

74 c⁄° 
gífs_ª«me_›s
 
	gext2fs_gífs_ª«me_›s
;

91 
	$ext2fs_ß√_ª«me
(

92 
vnode
 *
fdvp
, 
comp⁄íäame
 *
f˙p
,

93 
vnode
 *
tdvp
, 
comp⁄íäame
 *
t˙p
,

94 
kauth_¸ed_t
 
¸ed
, 
boﬁ
 
posixly_c‹ª˘
)

96 
	`¥ötf
("I¿fûe: %s, fun: %s,löío: %d\n",
__FILE__
, 
__func__
, 
__LINE__
);

97 
ufs_lookup_ªsu…s
 
fuÃ
, 
tuÃ
;

99  
	`gífs_ß√_ª«me
(&
ext2fs_gífs_ª«me_›s
,

100 
fdvp
, 
f˙p
, &
fuÃ
, 
tdvp
, 
t˙p
, &
tuÃ
,

101 
¸ed
, 
posixly_c‹ª˘
);

102 
	}
}

109 
	$ext2fs_ª«me
(*
v
)

111 
	`¥ötf
("I¿fûe: %s, fun: %s,löío: %d\n",
__FILE__
, 
__func__
, 
__LINE__
);

112  
	`gífs_öß√_ª«me
(
v
, &
ext2fs_ß√_ª«me
);

113 
	}
}

121 
boﬁ


122 
	$ext2fs_gro_dúe˘‹y_em±y_p
(
mou¡
 *
mp
, 
kauth_¸ed_t
 
¸ed
,

123 
vnode
 *
vp
, vnodê*
dvp
)

125 
	`¥ötf
("I¿fûe: %s, fun: %s,löío: %d\n",
__FILE__
, 
__func__
, 
__LINE__
);

126 ()
mp
;

127 
	`KASSERT
(
mp
 !
NULL
);

128 
	`KASSERT
(
vp
 !
NULL
);

129 
	`KASSERT
(
dvp
 !
NULL
);

130 
	`KASSERT
(
vp
 !
dvp
);

131 
	`KASSERT
(
vp
->
v_mou¡
 =
mp
);

132 
	`KASSERT
(
dvp
->
v_mou¡
 =
mp
);

133 
	`KASSERT
(
	`VOP_ISLOCKED
(
vp
Ë=
LK_EXCLUSIVE
);

134 
	`KASSERT
(
	`VOP_ISLOCKED
(
dvp
Ë=
LK_EXCLUSIVE
);

136  
	`ext2fs_dúem±y
(
	`VTOI
(
vp
), VTOI(
dvp
)->
i_numbî
, 
¸ed
);

137 
	}
}

144 
	$ext2fs_gro_ª«me_check_possibÀ
(
mou¡
 *
mp
,

145 
vnode
 *
fdvp
, vnodê*
fvp
,

146 
vnode
 *
tdvp
, vnodê*
tvp
)

148 
	`¥ötf
("I¿fûe: %s, fun: %s,löío: %d\n",
__FILE__
, 
__func__
, 
__LINE__
);

149 ()
mp
;

150 
	`KASSERT
(
mp
 !
NULL
);

151 
	`KASSERT
(
fdvp
 !
NULL
);

152 
	`KASSERT
(
fvp
 !
NULL
);

153 
	`KASSERT
(
tdvp
 !
NULL
);

154 
	`KASSERT
(
fdvp
 !
fvp
);

155 
	`KASSERT
(
fdvp
 !
tvp
);

156 
	`KASSERT
(
tdvp
 !
fvp
);

157 
	`KASSERT
(
tdvp
 !
tvp
);

158 
	`KASSERT
(
fvp
 !
tvp
);

159 
	`KASSERT
(
fdvp
->
v_ty≥
 =
VDIR
);

160 
	`KASSERT
(
tdvp
->
v_ty≥
 =
VDIR
);

161 
	`KASSERT
(
fdvp
->
v_mou¡
 =
mp
);

162 
	`KASSERT
(
fvp
->
v_mou¡
 =
mp
);

163 
	`KASSERT
(
tdvp
->
v_mou¡
 =
mp
);

164 
	`KASSERT
((
tvp
 =
NULL
Ë|| (tvp->
v_mou¡
 =
mp
));

165 
	`KASSERT
(
	`VOP_ISLOCKED
(
fdvp
Ë=
LK_EXCLUSIVE
);

166 
	`KASSERT
(
	`VOP_ISLOCKED
(
fvp
Ë=
LK_EXCLUSIVE
);

167 
	`KASSERT
(
	`VOP_ISLOCKED
(
tdvp
Ë=
LK_EXCLUSIVE
);

168 
	`KASSERT
((
tvp
 =
NULL
Ë|| (
	`VOP_ISLOCKED
—vpË=
LK_EXCLUSIVE
));

170  
	`gífs_uf¶ike_ª«me_check_possibÀ
(

171 
	`VTOI
(
fdvp
)->
i_e2fs_Êags
, VTOI(
fvp
)->i_e2fs_flags,

172 
	`VTOI
(
tdvp
)->
i_e2fs_Êags
, (
tvp
? VTOI(tvp)->i_e2fs_flags : 0),

173 (
tvp
 !
NULL
),

174 
EXT2_IMMUTABLE
, 
EXT2_APPEND
);

175 
	}
}

182 
	$ext2fs_gro_ª«me_check_≥rmôãd
(
mou¡
 *
mp
, 
kauth_¸ed_t
 
¸ed
,

183 
vnode
 *
fdvp
, vnodê*
fvp
,

184 
vnode
 *
tdvp
, vnodê*
tvp
)

186 
	`¥ötf
("I¿fûe: %s, fun: %s,löío: %d\n",
__FILE__
, 
__func__
, 
__LINE__
);

187 ()
mp
;

188 
	`KASSERT
(
mp
 !
NULL
);

189 
	`KASSERT
(
fdvp
 !
NULL
);

190 
	`KASSERT
(
fvp
 !
NULL
);

191 
	`KASSERT
(
tdvp
 !
NULL
);

192 
	`KASSERT
(
fdvp
 !
fvp
);

193 
	`KASSERT
(
fdvp
 !
tvp
);

194 
	`KASSERT
(
tdvp
 !
fvp
);

195 
	`KASSERT
(
tdvp
 !
tvp
);

196 
	`KASSERT
(
fvp
 !
tvp
);

197 
	`KASSERT
(
fdvp
->
v_ty≥
 =
VDIR
);

198 
	`KASSERT
(
tdvp
->
v_ty≥
 =
VDIR
);

199 
	`KASSERT
(
fdvp
->
v_mou¡
 =
mp
);

200 
	`KASSERT
(
fvp
->
v_mou¡
 =
mp
);

201 
	`KASSERT
(
tdvp
->
v_mou¡
 =
mp
);

202 
	`KASSERT
((
tvp
 =
NULL
Ë|| (tvp->
v_mou¡
 =
mp
));

203 
	`KASSERT
(
	`VOP_ISLOCKED
(
fdvp
Ë=
LK_EXCLUSIVE
);

204 
	`KASSERT
(
	`VOP_ISLOCKED
(
fvp
Ë=
LK_EXCLUSIVE
);

205 
	`KASSERT
(
	`VOP_ISLOCKED
(
tdvp
Ë=
LK_EXCLUSIVE
);

206 
	`KASSERT
((
tvp
 =
NULL
Ë|| (
	`VOP_ISLOCKED
—vpË=
LK_EXCLUSIVE
));

208  
	`gífs_uf¶ike_ª«me_check_≥rmôãd
(
¸ed
,

209 
fdvp
, 
	`VTOI
(fdvp)->
i_e2fs_mode
, VTOI(fdvp)->
i_uid
,

210 
fvp
, 
	`VTOI
(fvp)->
i_uid
,

211 
tdvp
, 
	`VTOI
—dvp)->
i_e2fs_mode
, VTOI—dvp)->
i_uid
,

212 
tvp
, (tvp? 
	`VTOI
—vp)->
i_uid
 : 0));

213 
	}
}

220 
	$ext2fs_gro_ªmove_check_possibÀ
(
mou¡
 *
mp
,

221 
vnode
 *
dvp
, vnodê*
vp
)

223 
	`¥ötf
("I¿fûe: %s, fun: %s,löío: %d\n",
__FILE__
, 
__func__
, 
__LINE__
);

224 ()
mp
;

225 
	`KASSERT
(
mp
 !
NULL
);

226 
	`KASSERT
(
dvp
 !
NULL
);

227 
	`KASSERT
(
vp
 !
NULL
);

228 
	`KASSERT
(
dvp
 !
vp
);

229 
	`KASSERT
(
dvp
->
v_ty≥
 =
VDIR
);

230 
	`KASSERT
(
vp
->
v_ty≥
 !
VDIR
);

231 
	`KASSERT
(
dvp
->
v_mou¡
 =
mp
);

232 
	`KASSERT
(
vp
->
v_mou¡
 =
mp
);

233 
	`KASSERT
(
	`VOP_ISLOCKED
(
dvp
Ë=
LK_EXCLUSIVE
);

234 
	`KASSERT
(
	`VOP_ISLOCKED
(
vp
Ë=
LK_EXCLUSIVE
);

236  
	`gífs_uf¶ike_ªmove_check_possibÀ
(

237 
	`VTOI
(
dvp
)->
i_e2fs_Êags
, VTOI(
vp
)->i_e2fs_flags,

238 
EXT2_IMMUTABLE
, 
EXT2_APPEND
);

239 
	}
}

246 
	$ext2fs_gro_ªmove_check_≥rmôãd
(
mou¡
 *
mp
, 
kauth_¸ed_t
 
¸ed
,

247 
vnode
 *
dvp
, vnodê*
vp
)

249 
	`¥ötf
("I¿fûe: %s, fun: %s,löío: %d\n",
__FILE__
, 
__func__
, 
__LINE__
);

250 ()
mp
;

251 
	`KASSERT
(
mp
 !
NULL
);

252 
	`KASSERT
(
dvp
 !
NULL
);

253 
	`KASSERT
(
vp
 !
NULL
);

254 
	`KASSERT
(
dvp
 !
vp
);

255 
	`KASSERT
(
dvp
->
v_ty≥
 =
VDIR
);

256 
	`KASSERT
(
vp
->
v_ty≥
 !
VDIR
);

257 
	`KASSERT
(
dvp
->
v_mou¡
 =
mp
);

258 
	`KASSERT
(
vp
->
v_mou¡
 =
mp
);

259 
	`KASSERT
(
	`VOP_ISLOCKED
(
dvp
Ë=
LK_EXCLUSIVE
);

260 
	`KASSERT
(
	`VOP_ISLOCKED
(
vp
Ë=
LK_EXCLUSIVE
);

262  
	`gífs_uf¶ike_ªmove_check_≥rmôãd
(
¸ed
,

263 
dvp
, 
	`VTOI
(dvp)->
i_e2fs_mode
, VTOI(dvp)->
i_uid
,

264 
vp
, 
	`VTOI
(vp)->
i_uid
);

265 
	}
}

271 
	$ext2fs_gro_ª«me
(
mou¡
 *
mp
, 
kauth_¸ed_t
 
¸ed
,

272 
vnode
 *
fdvp
, 
comp⁄íäame
 *
f˙p
,

273 *
fde
, 
vnode
 *
fvp
,

274 
vnode
 *
tdvp
, 
comp⁄íäame
 *
t˙p
,

275 *
tde
, 
vnode
 *
tvp
)

277 
	`¥ötf
("I¿fûe: %s, fun: %s,löío: %d\n",
__FILE__
, 
__func__
, 
__LINE__
);

278 
ufs_lookup_ªsu…s
 *
fuÃ
 = 
fde
;

279 
ufs_lookup_ªsu…s
 *
tuÃ
 = 
tde
;

280 
boﬁ
 
dúe˘‹y_p
, 
ª∑ª¡_p
;

281 
îr‹
;

283 ()
mp
;

284 
	`KASSERT
(
mp
 !
NULL
);

285 
	`KASSERT
(
fdvp
 !
NULL
);

286 
	`KASSERT
(
f˙p
 !
NULL
);

287 
	`KASSERT
(
fuÃ
 !
NULL
);

288 
	`KASSERT
(
fvp
 !
NULL
);

289 
	`KASSERT
(
tdvp
 !
NULL
);

290 
	`KASSERT
(
t˙p
 !
NULL
);

291 
	`KASSERT
(
tuÃ
 !
NULL
);

292 
	`KASSERT
(
fuÃ
 !
tuÃ
);

293 
	`KASSERT
(
fdvp
 !
fvp
);

294 
	`KASSERT
(
fdvp
 !
tvp
);

295 
	`KASSERT
(
tdvp
 !
fvp
);

296 
	`KASSERT
(
tdvp
 !
tvp
);

297 
	`KASSERT
(
fvp
 !
tvp
);

298 
	`KASSERT
(
fdvp
->
v_mou¡
 =
mp
);

299 
	`KASSERT
(
fvp
->
v_mou¡
 =
mp
);

300 
	`KASSERT
(
tdvp
->
v_mou¡
 =
mp
);

301 
	`KASSERT
((
tvp
 =
NULL
Ë|| (tvp->
v_mou¡
 =
mp
));

302 
	`KASSERT
(
	`VOP_ISLOCKED
(
fdvp
Ë=
LK_EXCLUSIVE
);

303 
	`KASSERT
(
	`VOP_ISLOCKED
(
fvp
Ë=
LK_EXCLUSIVE
);

304 
	`KASSERT
(
	`VOP_ISLOCKED
(
tdvp
Ë=
LK_EXCLUSIVE
);

305 
	`KASSERT
((
tvp
 =
NULL
Ë|| (
	`VOP_ISLOCKED
—vpË=
LK_EXCLUSIVE
));

311 i‡((
∆ök_t
)
	`VTOI
(
fvp
)->
i_e2fs_∆ök
 >
LINK_MAX
)

312  
EMLINK
;

314 
dúe˘‹y_p
 = (
fvp
->
v_ty≥
 =
VDIR
);

315 
	`KASSERT
(
dúe˘‹y_p
 =((
	`VTOI
(
fvp
)->
i_e2fs_mode
 & 
IFMT
Ë=
IFDIR
));

316 
	`KASSERT
((
tvp
 =
NULL
Ë|| (
dúe˘‹y_p
 =—vp->
v_ty≥
 =
VDIR
)));

317 
	`KASSERT
((
tvp
 =
NULL
Ë|| (
dúe˘‹y_p
 ==

318 ((
	`VTOI
(
tvp
)->
i_e2fs_mode
 & 
IFMT
Ë=
IFDIR
)));

320 
ª∑ª¡_p
 = (
fdvp
 !
tdvp
);

321 
	`KASSERT
(
ª∑ª¡_p
 =(
	`VTOI
(
fdvp
)->
i_numbî
 !VTOI(
tdvp
)->i_number));

334 
	`KASSERT
((
∆ök_t
)
	`VTOI
(
fvp
)->
i_e2fs_∆ök
 < 
LINK_MAX
);

335 
	`VTOI
(
fvp
)->
i_e2fs_∆ök
++;

336 
	`VTOI
(
fvp
)->
i_Êag
 |
IN_CHANGE
;

337 
îr‹
 = 
	`ext2fs_upd©e
(
fvp
, 
NULL
, NULL, 
UPDATE_WAIT
);

338 i‡(
îr‹
)

339 
whymu°ôhuπsomuch
;

349 i‡(
tvp
 =
NULL
) {

355 i‡(
dúe˘‹y_p
 && 
ª∑ª¡_p
) {

356 i‡((
∆ök_t
)
	`VTOI
(
tdvp
)->
i_e2fs_∆ök
 >
LINK_MAX
) {

357 
îr‹
 = 
EMLINK
;

358 
whymu°ôhuπsomuch
;

360 
	`KASSERT
((
∆ök_t
)
	`VTOI
(
tdvp
)->
i_e2fs_∆ök
 < 
LINK_MAX
);

361 
	`VTOI
(
tdvp
)->
i_e2fs_∆ök
++;

362 
	`VTOI
(
tdvp
)->
i_Êag
 |
IN_CHANGE
;

363 
îr‹
 = 
	`ext2fs_upd©e
(
tdvp
, 
NULL
, NULL, 
UPDATE_WAIT
);

364 i‡(
îr‹
) {

369 
	`KASSERT
(0 < 
	`VTOI
(
tdvp
)->
i_e2fs_∆ök
);

370 
	`VTOI
(
tdvp
)->
i_e2fs_∆ök
--;

371 
	`VTOI
(
tdvp
)->
i_Êag
 |
IN_CHANGE
;

372 
whymu°ôhuπsomuch
;

376 
îr‹
 = 
	`ext2fs_dúíãr
(
	`VTOI
(
fvp
), 
tdvp
, 
tuÃ
, 
t˙p
);

377 i‡(
îr‹
) {

378 i‡(
dúe˘‹y_p
 && 
ª∑ª¡_p
) {

385 
	`KASSERT
(0 < 
	`VTOI
(
tdvp
)->
i_e2fs_∆ök
);

386 
	`VTOI
(
tdvp
)->
i_e2fs_∆ök
--;

387 
	`VTOI
(
tdvp
)->
i_Êag
 |
IN_CHANGE
;

388 ()
	`ext2fs_upd©e
(
tdvp
, 
NULL
, NULL,

389 
UPDATE_WAIT
);

391 
whymu°ôhuπsomuch
;

394 i‡(
dúe˘‹y_p
)

396 
	`ˇche_purge
(
tdvp
);

402 
îr‹
 = 
	`ext2fs_dúªwrôe
(
	`VTOI
(
tdvp
), 
tuÃ
, VTOI(
fvp
), 
t˙p
);

403 i‡(
îr‹
)

404 
whymu°ôhuπsomuch
;

413 i‡(
dúe˘‹y_p
 && !
ª∑ª¡_p
) {

414 
	`KASSERT
(
fdvp
 =
tdvp
);

416 
	`KASSERT
(0 < 
	`VTOI
(
tdvp
)->
i_e2fs_∆ök
);

417 
	`VTOI
(
tdvp
)->
i_e2fs_∆ök
--;

418 
	`VTOI
(
tdvp
)->
i_Êag
 |
IN_CHANGE
;

432 
	`KASSERT
(0 < 
	`VTOI
(
tvp
)->
i_e2fs_∆ök
);

433 
	`VTOI
(
tvp
)->
i_e2fs_∆ök
--;

434 i‡(
dúe˘‹y_p
) {

439 i‡(
	`VTOI
(
tvp
)->
i_e2fs_∆ök
 != 1)

440 
	`ufs_dúbad
(
	`VTOI
(
tvp
), (
doff_t
)0,

442 
	`VTOI
(
tvp
)->
i_e2fs_∆ök
 = 0;

443 
îr‹
 = 
	`ext2fs_åunˇã
(
tvp
, (
off_t
)0, 
IO_SYNC
, 
¸ed
);

445 i‡(
îr‹
)

446 
whymu°ôhuπsomuch
;

453 
	`VTOI
(
tvp
)->
i_Êag
 |
IN_CHANGE
;

461 i‡(
dúe˘‹y_p
 && 
ª∑ª¡_p
) {

462 
îr‹
 = 
	`ext2fs_ª«me_ª∂a˚_dŸdŸ
(
fvp
, 
fdvp
, 
tdvp
, 
¸ed
);

463 i‡(
îr‹
)

464 
whymu°ôhuπsomuch
;

467 
	`ˇche_purge
(
fdvp
);

480 i‡(!
ª∑ª¡_p
 && (
tvp
 =
NULL
) &&

481 
	`ext2fs_ª«me_uÃ_ovîœp_p
(
fuÃ
, 
tuÃ
)) {

482 
îr‹
 = 
	`ext2fs_ª«me_ªˇlcuœã_fuÃ
(
fdvp
, 
fuÃ
, 
tuÃ
, 
f˙p
);

484 i‡(
îr‹
)

485 
whymu°ôhuπsomuch
;

489 
îr‹
 = 
	`ext2fs_dúªmove
(
fdvp
, 
fuÃ
, 
f˙p
);

490 i‡(
îr‹
)

491 
whymu°ôhuπsomuch
;

498 
	`gífs_ª«me_knŸe
(
fdvp
, 
fvp
, 
tdvp
, 
tvp
,

499 ((
tvp
 !
NULL
Ë&& (
	`VTOI
—vp)->
i_e2fs_∆ök
 == 0)));

501 
	`gífs_ª«me_ˇche_purge
(
fdvp
, 
fvp
, 
tdvp
, 
tvp
);

504 
whymu°ôhuπsomuch
:

505 
	`KASSERT
(0 < 
	`VTOI
(
fvp
)->
i_e2fs_∆ök
);

506 
	`VTOI
(
fvp
)->
i_e2fs_∆ök
--;

507 
	`VTOI
(
fvp
)->
i_Êag
 |
IN_CHANGE
;

508  
îr‹
;

509 
	}
}

515 
boﬁ


516 
	$ext2fs_ª«me_uÃ_ovîœp_p
(c⁄° 
ufs_lookup_ªsu…s
 *
fuÃ
,

517 c⁄° 
ufs_lookup_ªsu…s
 *
tuÃ
)

519 
	`¥ötf
("I¿fûe: %s, fun: %s,löío: %d\n",
__FILE__
, 
__func__
, 
__LINE__
);

520 
doff_t
 
‰om_¥ev_°¨t
, 
‰om_¥ev_íd
, 
to_°¨t
, 
to_íd
;

522 
	`KASSERT
(
fuÃ
 !
NULL
);

523 
	`KASSERT
(
tuÃ
 !
NULL
);

524 
	`KASSERT
(
fuÃ
 !
tuÃ
);

530 
‰om_¥ev_íd
 = 
fuÃ
->
uÃ_off£t
;

531 
	`KASSERT
(
fuÃ
->
uÃ_cou¡
 <
‰om_¥ev_íd
);

532 
‰om_¥ev_°¨t
 = (
‰om_¥ev_íd
 - 
fuÃ
->
uÃ_cou¡
);

538 
to_°¨t
 = 
tuÃ
->
uÃ_off£t
;

539 
	`KASSERT
(
tuÃ
->
uÃ_cou¡
 < (
EXT2FS_MAXDIRSIZE
 - 
to_°¨t
));

540 
to_íd
 = (
to_°¨t
 + 
tuÃ
->
uÃ_cou¡
);

543 (((
to_°¨t
 <
‰om_¥ev_°¨t
Ë&& (‰om_¥ev_°¨à< 
to_íd
)) ||

544 ((
to_°¨t
 <
‰om_¥ev_íd
Ë&& (‰om_¥ev_íd < 
to_íd
)));

545 
	}
}

554 
	$ext2fs_ª«me_ªˇlcuœã_fuÃ
(
vnode
 *
dvp
,

555 
ufs_lookup_ªsu…s
 *
fuÃ
, c⁄° ufs_lookup_ªsu…†*
tuÃ
,

556 c⁄° 
comp⁄íäame
 *
f˙p
)

558 
	`¥ötf
("I¿fûe: %s, fun: %s,löío: %d\n",
__FILE__
, 
__func__
, 
__LINE__
);

559 
mou¡
 *
mp
;

560 
ufsmou¡
 *
ump
;

562 
dúblksiz
;

563 
doff_t
 
£¨ch_°¨t
, 
£¨ch_íd
;

564 
doff_t
 
off£t
;

565 
buf
 *
bp
;

566 *
dúbuf
;

567 
ext2fs_dúe˘
 *
ï
;

570 
uöt32_t
 
ª˛í
;

571 
uöt32_t
 
¥ev_ª˛í
;

572 
îr‹
;

574 
	`KASSERT
(
dvp
 !
NULL
);

575 
	`KASSERT
(
dvp
->
v_mou¡
 !
NULL
);

576 
	`KASSERT
(
	`VTOI
(
dvp
Ë!
NULL
);

577 
	`KASSERT
(
fuÃ
 !
NULL
);

578 
	`KASSERT
(
tuÃ
 !
NULL
);

579 
	`KASSERT
(
fuÃ
 !
tuÃ
);

580 
	`KASSERT
(
	`ext2fs_ª«me_uÃ_ovîœp_p
(
fuÃ
, 
tuÃ
));

582 
mp
 = 
dvp
->
v_mou¡
;

583 
ump
 = 
	`VFSTOUFS
(
mp
);

584 
	`KASSERT
(
ump
 !
NULL
);

585 
	`KASSERT
(
ump
 =
	`VTOI
(
dvp
)->
i_ump
);

587 
dúblksiz
 = 
ump
->
um_dúblksiz
;

588 
	`KASSERT
(0 < 
dúblksiz
);

589 
	`KASSERT
((
dúblksiz
 & (dirblksiz - 1)) == 0);

592 
	`KASSERT
(
dúblksiz
 <
mp
->
m¡_°©
.
f_iosize
);

595 
£¨ch_°¨t
 = 
tuÃ
->
uÃ_off£t
;

596 
	`KASSERT
(
fuÃ
->
uÃ_ª˛í
 < (
EXT2FS_MAXDIRSIZE
 - fuÃ->
uÃ_off£t
));

597 
£¨ch_íd
 = (
fuÃ
->
uÃ_off£t
 + fuÃ->
uÃ_ª˛í
);

600 
	`KASSERT
(
£¨ch_°¨t
 <
£¨ch_íd
);

601 
	`KASSERT
((
£¨ch_íd
 - (
£¨ch_°¨t
 &~ (
dúblksiz
 - 1))) <= dirblksiz);

603 
dúbuf
 = 
NULL
;

604 
bp
 = 
NULL
;

605 
îr‹
 = 
	`ext2fs_blk©off
(
dvp
, (
off_t
)
£¨ch_°¨t
, &
dúbuf
, &
bp
);

606 i‡(
îr‹
)

607  
îr‹
;

608 
	`KASSERT
(
dúbuf
 !
NULL
);

609 
	`KASSERT
(
bp
 !
NULL
);

616 
	`KASSERT
((
£¨ch_íd
 - 
£¨ch_°¨t
) <=

617 (
bp
->
b_bcou¡
 - (
£¨ch_°¨t
 & (
mp
->
m¡_°©
.
f_iosize
 - 1))));

619 
¥ev_ª˛í
 = 
fuÃ
->
uÃ_cou¡
;

620 
off£t
 = 
£¨ch_°¨t
;

628 
	`KASSERT
(
£¨ch_°¨t
 <
off£t
);

629 
	`KASSERT
(
off£t
 < 
£¨ch_íd
);

634 
ï
 = (
ext2fs_dúe˘
 *)

635 (
dúbuf
 + (
off£t
 - 
£¨ch_°¨t
));

636 
ª˛í
 = 
	`fs2h16
(
ï
->
e2d_ª˛í
);

638 i‡(
ï
->
e2d_öo
 == 0)

639 
√xt
;

641 i‡(
	`fs2h32
(
ï
->
e2d_öo
Ë=
UFS_WINO
)

642 
√xt
;

644 i‡(
f˙p
->
˙_«mñí
 !
ï
->
e2d_«mÀn
)

645 
√xt
;

647 i‡(
	`memcmp
(
ï
->
e2d_«me
, 
f˙p
->
˙_«mïå
, f˙p->
˙_«mñí
))

648 
√xt
;

653 
√xt
:

654 i‡(! ((
ª˛í
 < 
£¨ch_íd
) &&

655 (
off£t
 < (
£¨ch_íd
 - 
ª˛í
)))) {

656 
	`bªl£
(
bp
, 0);

657  
EIO
;

661 
	`KASSERT
(
ª˛í
 < 
£¨ch_íd
);

662 
	`KASSERT
(
off£t
 < (
£¨ch_íd
 - 
ª˛í
));

668 
	`KASSERT
((
off£t
 &~ (
dúblksiz
 - 1)) ==

669 ((
off£t
 + 
ª˛í
Ë&~ (
dúblksiz
 - 1)));

671 
¥ev_ª˛í
 = 
ª˛í
;

672 
off£t
 +
ª˛í
;

678 
fuÃ
->
uÃ_off£t
 = 
off£t
;

679 
fuÃ
->
uÃ_ª˛í
 = 
ª˛í
;

685 
fuÃ
->
uÃ_cou¡
 = ((
off£t
 & (
dúblksiz
 - 1))? 
¥ev_ª˛í
 : 0);

687 
	`bªl£
(
bp
, 0);

689 
	}
}

696 
	$ext2fs_gro_ªmove
(
mou¡
 *
mp
, 
kauth_¸ed_t
 
¸ed
,

697 
vnode
 *
dvp
, 
comp⁄íäame
 *
˙p
, *
de
, vnodê*
vp
)

699 
	`¥ötf
("I¿fûe: %s, fun: %s,löío: %d\n",
__FILE__
, 
__func__
, 
__LINE__
);

700 
ufs_lookup_ªsu…s
 *
uÃ
 = 
de
;

701 
îr‹
;

703 ()
mp
;

704 
	`KASSERT
(
mp
 !
NULL
);

705 
	`KASSERT
(
dvp
 !
NULL
);

706 
	`KASSERT
(
˙p
 !
NULL
);

707 
	`KASSERT
(
uÃ
 !
NULL
);

708 
	`KASSERT
(
vp
 !
NULL
);

709 
	`KASSERT
(
dvp
 !
vp
);

710 
	`KASSERT
(
dvp
->
v_mou¡
 =
mp
);

711 
	`KASSERT
(
vp
->
v_mou¡
 =
mp
);

712 
	`KASSERT
(
dvp
->
v_ty≥
 =
VDIR
);

713 
	`KASSERT
(
vp
->
v_ty≥
 !
VDIR
);

714 
	`KASSERT
(
	`VOP_ISLOCKED
(
dvp
Ë=
LK_EXCLUSIVE
);

715 
	`KASSERT
(
	`VOP_ISLOCKED
(
vp
Ë=
LK_EXCLUSIVE
);

717 
îr‹
 = 
	`ext2fs_dúªmove
(
dvp
, 
uÃ
, 
˙p
);

718 i‡(
îr‹
)

719  
îr‹
;

721 
	`KASSERT
(0 < 
	`VTOI
(
vp
)->
i_e2fs_∆ök
);

722 
	`VTOI
(
vp
)->
i_e2fs_∆ök
--;

723 
	`VTOI
(
vp
)->
i_Êag
 |
IN_CHANGE
;

725 
	`VN_KNOTE
(
dvp
, 
NOTE_WRITE
);

726 
	`VN_KNOTE
(
vp
, (
	`VTOI
(vp)->
i_e2fs_∆ök
? 
NOTE_LINK
 : 
NOTE_DELETE
));

729 
	}
}

735 
	$ext2fs_gro_lookup
(
mou¡
 *
mp
, 
vnode
 *
dvp
,

736 
comp⁄íäame
 *
˙p
, *
de_ªt
, 
vnode
 **
vp_ªt
)

738 
	`¥ötf
("I¿fûe: %s, fun: %s,löío: %d\n",
__FILE__
, 
__func__
, 
__LINE__
);

739 
ufs_lookup_ªsu…s
 *
uÃ_ªt
 = 
de_ªt
;

740 
vnode
 *
vp
;

741 
îr‹
;

743 ()
mp
;

744 
	`KASSERT
(
mp
 !
NULL
);

745 
	`KASSERT
(
dvp
 !
NULL
);

746 
	`KASSERT
(
˙p
 !
NULL
);

747 
	`KASSERT
(
uÃ_ªt
 !
NULL
);

748 
	`KASSERT
(
vp_ªt
 !
NULL
);

749 
	`KASSERT
(
	`VOP_ISLOCKED
(
dvp
Ë=
LK_EXCLUSIVE
);

752 
˙p
->
˙_Êags
 &=~ 
MODMASK
;

753 
˙p
->
˙_Êags
 |(
LOCKPARENT
 | 
LOCKLEAF
);

755 
îr‹
 = 
	`ªlookup
(
dvp
, &
vp
, 
˙p
, 0 );

756 i‡((
îr‹
 =0Ë&& (
vp
 =
NULL
)) {

757 
îr‹
 = 
ENOENT
;

758 
out
;

759 } i‡(
îr‹
) {

760  
îr‹
;

767 
	`KASSERT
(
vp
 !
NULL
);

768 
	`VOP_UNLOCK
(
vp
);

770 
out
: *
uÃ_ªt
 = 
	`VTOI
(
dvp
)->
i_¸≠
;

771 *
vp_ªt
 = 
vp
;

772  
îr‹
;

773 
	}
}

780 
boﬁ


781 
	$ext2fs_rmdúed_p
(
vnode
 *
vp
)

783 
	`¥ötf
("I¿fûe: %s, fun: %s,löío: %d\n",
__FILE__
, 
__func__
, 
__LINE__
);

784 
	`KASSERT
(
vp
 !
NULL
);

785 
	`KASSERT
(
	`VOP_ISLOCKED
(
vp
Ë=
LK_EXCLUSIVE
);

786 
	`KASSERT
(
vp
->
v_ty≥
 =
VDIR
);

789  (
	`ext2fs_size
(
	`VTOI
(
vp
)) == 0);

790 
	}
}

797 
	$ext2fs_gro_gíólogy
(
mou¡
 *
mp
, 
kauth_¸ed_t
 
¸ed
,

798 
vnode
 *
fdvp
, vnodê*
tdvp
,

799 
vnode
 **
öãrmedüã_node_ªt
)

801 
	`¥ötf
("I¿fûe: %s, fun: %s,löío: %d\n",
__FILE__
, 
__func__
, 
__LINE__
);

802 
vnode
 *
vp
, *
dvp
;

803 
öo_t
 
dŸdŸ_öo
 = -1;

804 
îr‹
;

806 
	`KASSERT
(
mp
 !
NULL
);

807 
	`KASSERT
(
fdvp
 !
NULL
);

808 
	`KASSERT
(
tdvp
 !
NULL
);

809 
	`KASSERT
(
fdvp
 !
tdvp
);

810 
	`KASSERT
(
öãrmedüã_node_ªt
 !
NULL
);

811 
	`KASSERT
(
fdvp
->
v_mou¡
 =
mp
);

812 
	`KASSERT
(
tdvp
->
v_mou¡
 =
mp
);

813 
	`KASSERT
(
fdvp
->
v_ty≥
 =
VDIR
);

814 
	`KASSERT
(
tdvp
->
v_ty≥
 =
VDIR
);

820 
îr‹
 = 
	`ext2fs_gro_lock_dúe˘‹y
(
mp
, 
tdvp
);

821 i‡(
îr‹
)

822  
îr‹
;

824 
vp
 = 
tdvp
;

825 
	`vªf
(
vp
);

828 
	`KASSERT
(
vp
 !
NULL
);

829 
	`KASSERT
(
	`VOP_ISLOCKED
(
vp
Ë=
LK_EXCLUSIVE
);

830 
	`KASSERT
(
vp
->
v_mou¡
 =
mp
);

831 
	`KASSERT
(
vp
->
v_ty≥
 =
VDIR
);

832 
	`KASSERT
(!
	`ext2fs_rmdúed_p
(
vp
));

835 i‡(
	`VTOI
(
vp
)->
i_numbî
 =
UFS_ROOTINO
) {

836 
	`vput
(
vp
);

837 *
öãrmedüã_node_ªt
 = 
NULL
;

841 
îr‹
 = 
	`ext2fs_ªad_dŸdŸ
(
vp
, 
¸ed
, &
dŸdŸ_öo
);

842 i‡(
îr‹
) {

843 
	`vput
(
vp
);

844  
îr‹
;

848 i‡(
	`VTOI
(
fdvp
)->
i_numbî
 =
dŸdŸ_öo
) {

850 
	`VOP_UNLOCK
(
vp
);

851 *
öãrmedüã_node_ªt
 = 
vp
;

856 
îr‹
 = 
	`vˇche_gë
(
mp
, &
dŸdŸ_öo
, (dŸdŸ_öo), &
dvp
);

857 
	`vput
(
vp
);

858 i‡(
îr‹
)

859  
îr‹
;

860 
îr‹
 = 
	`vn_lock
(
dvp
, 
LK_EXCLUSIVE
);

861 i‡(
îr‹
) {

862 
	`vªÀ
(
dvp
);

863  
îr‹
;

866 
	`KASSERT
(
dvp
 !
NULL
);

867 
	`KASSERT
(
	`VOP_ISLOCKED
(
dvp
Ë=
LK_EXCLUSIVE
);

868 
vp
 = 
dvp
;

870 i‡(
vp
->
v_ty≥
 !
VDIR
) {

877 
	`vput
(
vp
);

878  
ENOTDIR
;

881 i‡(
	`ext2fs_rmdúed_p
(
vp
)) {

882 
	`vput
(
vp
);

883  
ENOENT
;

886 
	}
}

893 
	$ext2fs_ªad_dŸdŸ
(
vnode
 *
vp
, 
kauth_¸ed_t
 
¸ed
, 
öo_t
 *
öo_ªt
)

895 
	`¥ötf
("I¿fûe: %s, fun: %s,löío: %d\n",
__FILE__
, 
__func__
, 
__LINE__
);

896 
ext2fs_dúãm∂©e
 
dúbuf
;

897 
îr‹
;

899 
	`KASSERT
(
vp
 !
NULL
);

900 
	`KASSERT
(
öo_ªt
 !
NULL
);

901 
	`KASSERT
(
vp
->
v_ty≥
 =
VDIR
);

903 
îr‹
 = 
	`ufs_bufio
(
UIO_READ
, 
vp
, &
dúbuf
,  dúbuf, (
off_t
)0,

904 
IO_NODELOCKED
, 
¸ed
, 
NULL
, NULL);

905 i‡(
îr‹
)

906  
îr‹
;

908 i‡(
dúbuf
.
dŸdŸ_«mÀn
 != 2 ||

909 
dúbuf
.
dŸdŸ_«me
[0] != '.' ||

910 
dúbuf
.
dŸdŸ_«me
[1] != '.')

912  
ENOTDIR
;

914 *
öo_ªt
 = 
	`fs2h32
(
dúbuf
.
dŸdŸ_öo
);

916 
	}
}

923 
	$ext2fs_ª«me_ª∂a˚_dŸdŸ
(
vnode
 *
vp
,

924 
vnode
 *
fdvp
, vnodê*
tdvp
,

925 
kauth_¸ed_t
 
¸ed
)

927 
	`¥ötf
("I¿fûe: %s, fun: %s,löío: %d\n",
__FILE__
, 
__func__
, 
__LINE__
);

928 
ext2fs_dúãm∂©e
 
dúbuf
;

929 
îr‹
;

932 
	`KASSERT
(0 < 
	`VTOI
(
fdvp
)->
i_e2fs_∆ök
);

933 
	`VTOI
(
fdvp
)->
i_e2fs_∆ök
--;

934 
	`VTOI
(
fdvp
)->
i_Êag
 |
IN_CHANGE
;

936 
îr‹
 = 
	`ufs_bufio
(
UIO_READ
, 
vp
, &
dúbuf
,  dúbuf, (
off_t
)0,

937 
IO_NODELOCKED
, 
¸ed
, 
NULL
, NULL);

938 i‡(
îr‹
)

939  
îr‹
;

941 i‡(
dúbuf
.
dŸdŸ_«mÀn
 != 2 ||

942 
dúbuf
.
dŸdŸ_«me
[0] != '.' ||

943 
dúbuf
.
dŸdŸ_«me
[1] != '.') {

944 
	`ufs_dúbad
(
	`VTOI
(
vp
), (
doff_t
)12, "bad `..'Éntry");

948 i‡(
	`fs2h32
(
dúbuf
.
dŸdŸ_öo
Ë!
	`VTOI
(
fdvp
)->
i_numbî
) {

949 
	`ufs_dúbad
(
	`VTOI
(
vp
), (
doff_t
)12,

954 
dúbuf
.
dŸdŸ_öo
 = 
	`h2fs32
(
	`VTOI
(
tdvp
)->
i_numbî
);

956 ()
	`ufs_bufio
(
UIO_WRITE
, 
vp
, &
dúbuf
,  dúbuf, (
off_t
)0,

957 (
IO_NODELOCKED
 | 
IO_SYNC
), 
¸ed
, 
NULL
, NULL);

960 
	}
}

967 
	$ext2fs_gro_lock_dúe˘‹y
(
mou¡
 *
mp
, 
vnode
 *
vp
)

970 ()
mp
;

971 
	`KASSERT
(
mp
 !
NULL
);

972 
	`KASSERT
(
vp
 !
NULL
);

973 
	`KASSERT
(
vp
->
v_mou¡
 =
mp
);

975 
	`vn_lock
(
vp
, 
LK_EXCLUSIVE
 | 
LK_RETRY
);

977 i‡(
	`ext2fs_rmdúed_p
(
vp
)) {

978 
	`VOP_UNLOCK
(
vp
);

979  
ENOENT
;

983 
	}
}

985 c⁄° 
gífs_ª«me_›s
 
	gext2fs_gífs_ª«me_›s
 = {

986 .
gro_dúe˘‹y_em±y_p
 = 
ext2fs_gro_dúe˘‹y_em±y_p
,

987 .
	ggro_ª«me_check_possibÀ
 = 
ext2fs_gro_ª«me_check_possibÀ
,

988 .
	ggro_ª«me_check_≥rmôãd
 = 
ext2fs_gro_ª«me_check_≥rmôãd
,

989 .
	ggro_ªmove_check_possibÀ
 = 
ext2fs_gro_ªmove_check_possibÀ
,

990 .
	ggro_ªmove_check_≥rmôãd
 = 
ext2fs_gro_ªmove_check_≥rmôãd
,

991 .
	ggro_ª«me
 = 
ext2fs_gro_ª«me
,

992 .
	ggro_ªmove
 = 
ext2fs_gro_ªmove
,

993 .
	ggro_lookup
 = 
ext2fs_gro_lookup
,

994 .
	ggro_gíólogy
 = 
ext2fs_gro_gíólogy
,

995 .
	ggro_lock_dúe˘‹y
 = 
ext2fs_gro_lock_dúe˘‹y
,

	@ext2fs_subr.c

62 
	~<sys/cdefs.h
>

63 
__KERNEL_RCSID
(0, "$NetBSD:Éxt2fs_subr.c,v 1.31 2015/03/28 19:24:04 maxv Exp $");

65 
	~<sys/∑øm.h
>

66 
	~<sys/sy°m.h
>

67 
	~<sys/vnode.h
>

68 
	~<sys/buf.h
>

69 
	~<sys/öây≥s.h
>

70 
	~<sys/kauth.h
>

72 
	~<ufs/ufs/öode.h
>

73 
	~<ufs/ext2fs/ext2fs.h
>

74 
	~<ufs/ext2fs/ext2fs_exã∫.h
>

82 
	$ext2fs_blk©off
(
vnode
 *
vp
, 
off_t
 
off£t
, **
ªs
, 
buf
 **
bµ
)

84 
öode
 *
ù
;

85 
m_ext2fs
 *
fs
;

86 
buf
 *
bp
;

87 
daddr_t
 
lbn
;

88 
îr‹
;

90 
ù
 = 
	`VTOI
(
vp
);

91 
fs
 = 
ù
->
i_e2fs
;

92 
lbn
 = 
	`ext2_lblkno
(
fs
, 
off£t
);

94 *
bµ
 = 
NULL
;

95 i‡((
îr‹
 = 
	`bªad
(
vp
, 
lbn
, 
fs
->
e2fs_bsize
, 0, &
bp
)) != 0) {

96  (
îr‹
);

98 i‡(
ªs
)

99 *
ªs
 = (*)
bp
->
b_d©a
 + 
	`ext2_blkoff
(
fs
, 
off£t
);

100 *
bµ
 = 
bp
;

102 
	}
}

105 
	$ext2fs_ôimes
(
öode
 *
ù
, c⁄° 
time•ec
 *
acc
,

106 c⁄° 
time•ec
 *
mod
, c⁄° time•e¯*
¸e
)

108 
time•ec
 
now
;

110 i‡(!(
ù
->
i_Êag
 & (
IN_ACCESS
 | 
IN_CHANGE
 | 
IN_UPDATE
 | 
IN_MODIFY
))) {

114 
	`vfs_time°amp
(&
now
);

115 i‡(
ù
->
i_Êag
 & 
IN_ACCESS
) {

116 i‡(
acc
 =
NULL
)

117 
acc
 = &
now
;

118 
ù
->
i_e2fs_©ime
 = 
acc
->
tv_£c
;

120 i‡(
ù
->
i_Êag
 & (
IN_UPDATE
 | 
IN_MODIFY
)) {

121 i‡(
mod
 =
NULL
)

122 
mod
 = &
now
;

123 
ù
->
i_e2fs_mtime
 = 
mod
->
tv_£c
;

124 
ù
->
i_modªv
++;

126 i‡(
ù
->
i_Êag
 & (
IN_CHANGE
 | 
IN_MODIFY
)) {

127 i‡(
¸e
 =
NULL
)

128 
¸e
 = &
now
;

129 
ù
->
i_e2fs_˘ime
 = 
¸e
->
tv_£c
;

131 i‡(
ù
->
i_Êag
 & (
IN_ACCESS
 | 
IN_MODIFY
))

132 
ù
->
i_Êag
 |
IN_ACCESSED
;

133 i‡(
ù
->
i_Êag
 & (
IN_UPDATE
 | 
IN_CHANGE
))

134 
ù
->
i_Êag
 |
IN_MODIFIED
;

135 
ù
->
i_Êag
 &~(
IN_ACCESS
 | 
IN_CHANGE
 | 
IN_UPDATE
 | 
IN_MODIFY
);

136 
	}
}

	@ext2fs_vfsops.c

62 
	~<sys/cdefs.h
>

63 
__KERNEL_RCSID
(0, "$NetBSD:Éxt2fs_vfsops.c,v 1.193 2015/03/28 19:24:04 maxv Exp $");

65 #i‡
deföed
(
_KERNEL_OPT
)

66 
	~"›t_com∑t_√tbsd.h
"

69 
	~<sys/∑øm.h
>

70 
	~<sys/sy°m.h
>

71 
	~<sys/sys˘l.h
>

72 
	~<sys/«mei.h
>

73 
	~<sys/¥oc.h
>

74 
	~<sys/kî√l.h
>

75 
	~<sys/vnode.h
>

76 
	~<sys/sockë.h
>

77 
	~<sys/mou¡.h
>

78 
	~<sys/buf.h
>

79 
	~<sys/devi˚.h
>

80 
	~<sys/mbuf.h
>

81 
	~<sys/fûe.h
>

82 
	~<sys/diskœbñ.h
>

83 
	~<sys/io˘l.h
>

84 
	~<sys/î∫o.h
>

85 
	~<sys/poﬁ.h
>

86 
	~<sys/lock.h
>

87 
	~<sys/c⁄f.h
>

88 
	~<sys/kauth.h
>

89 
	~<sys/moduÀ.h
>

91 
	~<miscfs/gífs/gífs.h
>

92 
	~<miscfs/•ecfs/•ecdev.h
>

94 
	~<ufs/ufs/quŸa.h
>

95 
	~<ufs/ufs/ufsmou¡.h
>

96 
	~<ufs/ufs/öode.h
>

97 
	~<ufs/ufs/dú.h
>

98 
	~<ufs/ufs/ufs_exã∫.h
>

100 
	~<ufs/ext2fs/ext2fs.h
>

101 
	~<ufs/ext2fs/ext2fs_dú.h
>

102 
	~<ufs/ext2fs/ext2fs_exã∫.h
>

104 
MODULE
(
MODULE_CLASS_VFS
, 
ext2fs
, "ffs");

106 
ext2fs_sbupd©e
(
ufsmou¡
 *, );

107 
ext2fs_sbfûl
(
m_ext2fs
 *, );

109 
sys˘Œog
 *
	gext2fs_sys˘l_log
;

111 c⁄° 
vnode›v_desc
 
ext2fs_vnode›_›v_desc
;

112 c⁄° 
vnode›v_desc
 
ext2fs_•ec›_›v_desc
;

113 c⁄° 
vnode›v_desc
 
ext2fs_fifo›_›v_desc
;

115 c⁄° 
vnode›v_desc
 * c⁄° 
	gext2fs_vnode›v_descs
[] = {

116 &
ext2fs_vnode›_›v_desc
,

117 &
ext2fs_•ec›_›v_desc
,

118 &
ext2fs_fifo›_›v_desc
,

119 
NULL
,

122 
vfs›s
 
	gext2fs_vfs›s
 = {

123 .
vfs_«me
 = 
MOUNT_EXT2FS
,

124 .
	gvfs_mö_mou¡_d©a
 =  (
ufs_¨gs
),

125 .
	gvfs_mou¡
 = 
ext2fs_mou¡
,

126 .
	gvfs_°¨t
 = 
ufs_°¨t
,

127 .
	gvfs_unmou¡
 = 
ext2fs_unmou¡
,

128 .
	gvfs_roŸ
 = 
ufs_roŸ
,

129 .
	gvfs_quŸa˘l
 = 
ufs_quŸa˘l
,

130 .
	gvfs_°©vfs
 = 
ext2fs_°©vfs
,

131 .
	gvfs_sync
 = 
ext2fs_sync
,

132 .
	gvfs_vgë
 = 
ufs_vgë
,

133 .
	gvfs_lﬂdvnode
 = 
ext2fs_lﬂdvnode
,

134 .
	gvfs_fhtovp
 = 
ext2fs_fhtovp
,

135 .
	gvfs_v±ofh
 = 
ext2fs_v±ofh
,

136 .
	gvfs_öô
 = 
ext2fs_öô
,

137 .
	gvfs_ªöô
 = 
ext2fs_ªöô
,

138 .
	gvfs_d⁄e
 = 
ext2fs_d⁄e
,

139 .
	gvfs_mou¡roŸ
 = 
ext2fs_mou¡roŸ
,

140 .
	gvfs_¢≠shŸ
 = (*)
e›nŸsuµ
,

141 .
	gvfs_exèâr˘l
 = 
vfs_°dexèâr˘l
,

142 .
	gvfs_su•íd˘l
 = (*)
e›nŸsuµ
,

143 .
	gvfs_ª«mñock_íãr
 = 
gífs_ª«mñock_íãr
,

144 .
	gvfs_ª«mñock_exô
 = 
gífs_ª«mñock_exô
,

145 .
	gvfs_fsync
 = (*)
e›nŸsuµ
,

146 .
	gvfs_›v_descs
 = 
ext2fs_vnode›v_descs


149 c⁄° 
gífs_›s
 
	gext2fs_gífs›s
 = {

150 .
g›_size
 = 
gífs_size
,

151 .
	gg›_Æloc
 = 
ext2fs_g›_Æloc
,

152 .
	gg›_wrôe
 = 
gífs_g›_wrôe
,

153 .
	gg›_m¨kupd©e
 = 
ufs_g›_m¨kupd©e
,

156 c⁄° 
ufs_›s
 
	gext2fs_ufs›s
 = {

157 .
uo_ôimes
 = 
ext2fs_ôimes
,

158 .
	guo_upd©e
 = 
ext2fs_upd©e
,

159 .
	guo_bu‰d
 = 
ext2fs_bu‰d
,

160 .
	guo_bufwr
 = 
ext2fs_bufwr
,

165 
	$ext2fs_£t_öode_guid
(
öode
 *
ù
)

167 
ù
->
i_gid
 = ip->
i_e2fs_gid
;

168 
ù
->
i_uid
 = ip->
i_e2fs_uid
;

169 i‡(
ù
->
i_e2fs
->
e2fs
.
e2fs_ªv
 > 
E2FS_REV0
) {

170 
ù
->
i_gid
 |ù->
i_e2fs_gid_high
 << 16;

171 
ù
->
i_uid
 |ù->
i_e2fs_uid_high
 << 16;

173 
	}
}

176 
	$ext2fs_modcmd
(
modcmd_t
 
cmd
, *
¨g
)

178 
îr‹
;

180 
cmd
) {

181 
MODULE_CMD_INIT
:

182 
îr‹
 = 
	`vfs_©èch
(&
ext2fs_vfs›s
);

183 i‡(
îr‹
 != 0)

185 
	`sys˘l_¸óãv
(&
ext2fs_sys˘l_log
, 0, 
NULL
, NULL,

186 
CTLFLAG_PERMANENT
,

187 
CTLTYPE_NODE
, "ext2fs",

188 
	`SYSCTL_DESCR
("Linux EXT2FS file system"),

189 
NULL
, 0, NULL, 0,

190 
CTL_VFS
, 17, 
CTL_EOL
);

197 
MODULE_CMD_FINI
:

198 
îr‹
 = 
	`vfs_dëach
(&
ext2fs_vfs›s
);

199 i‡(
îr‹
 != 0)

201 
	`sys˘l_ã¨down
(&
ext2fs_sys˘l_log
);

204 
îr‹
 = 
ENOTTY
;

208  (
îr‹
);

209 
	}
}

214 
poﬁ
 
	gext2fs_öode_poﬁ
;

215 
poﬁ
 
	gext2fs_döode_poﬁ
;

217 
u_l⁄g
 
ext2gínumbî
;

220 
	$ext2fs_öô
()

222 
	`poﬁ_öô
(&
ext2fs_öode_poﬁ
, (
öode
), 0, 0, 0,

223 "ext2fsö›l", &
poﬁ_Æloˇt‹_noöå
, 
IPL_NONE
);

224 
	`poﬁ_öô
(&
ext2fs_döode_poﬁ
, (
ext2fs_döode
), 0, 0, 0,

225 "ext2dö›l", &
poﬁ_Æloˇt‹_noöå
, 
IPL_NONE
);

226 
	`ufs_öô
();

227 
	}
}

230 
	$ext2fs_ªöô
()

232 
	`ufs_ªöô
();

233 
	}
}

236 
	$ext2fs_d⁄e
()

239 
	`ufs_d⁄e
();

240 
	`poﬁ_de°roy
(&
ext2fs_öode_poﬁ
);

241 
	`poﬁ_de°roy
(&
ext2fs_döode_poﬁ
);

242 
	}
}

251 
	$ext2fs_mou¡roŸ
()

253 
vnode
 *
roŸvp
;

254 
m_ext2fs
 *
fs
;

255 
mou¡
 *
mp
;

256 
ufsmou¡
 *
ump
;

257 
îr‹
;

259 i‡(
	`devi˚_˛ass
(
roŸ_devi˚
Ë!
DV_DISK
)

260  (
ENODEV
);

262 i‡((
îr‹
 = 
	`vfs_roŸmou¡Æloc
(
MOUNT_EXT2FS
, "roŸ_devi˚", &
mp
))) {

263 
	`vªÀ
(
roŸvp
);

264  (
îr‹
);

267 i‡((
îr‹
 = 
	`ext2fs_mou¡fs
(
roŸvp
, 
mp
)) != 0) {

268 
	`vfs_unbusy
(
mp
, 
Ál£
, 
NULL
);

269 
	`vfs_de°roy
(
mp
);

270  (
îr‹
);

272 
	`mou¡li°_≠≥nd
(
mp
);

273 
ump
 = 
	`VFSTOUFS
(
mp
);

274 
fs
 = 
ump
->
um_e2fs
;

275 
	`mem£t
(
fs
->
e2fs_fsm¡
, 0, (fs->e2fs_fsmnt));

276 (Ë
	`c›y°r
(
mp
->
m¡_°©
.
f_m¡⁄«me
, 
fs
->
e2fs_fsm¡
,

277 (
fs
->
e2fs_fsm¡
) - 1, 0);

278 i‡(
fs
->
e2fs
.
e2fs_ªv
 > 
E2FS_REV0
) {

279 
	`mem£t
(
fs
->
e2fs
.
e2fs_fsm¡
, 0, (fs->e2fs.e2fs_fsmnt));

280 (Ë
	`c›y°r
(
mp
->
m¡_°©
.
f_m¡⁄«me
, 
fs
->
e2fs
.
e2fs_fsm¡
,

281 (
fs
->
e2fs
.
e2fs_fsm¡
) - 1, 0);

283 ()
	`ext2fs_°©vfs
(
mp
, &mp->
m¡_°©
);

284 
	`vfs_unbusy
(
mp
, 
Ál£
, 
NULL
);

285 
	`£åoŸf°ime
((
time_t
)
fs
->
e2fs
.
e2fs_wtime
);

287 
	}
}

295 
	$ext2fs_mou¡
(
mou¡
 *
mp
, c⁄° *
∑th
, *
d©a
, 
size_t
 *
d©a_Àn
)

297 
lwp
 *
l
 = 
cuæwp
;

298 
vnode
 *
devvp
;

299 
ufs_¨gs
 *
¨gs
 = 
d©a
;

300 
ufsmou¡
 *
ump
 = 
NULL
;

301 
m_ext2fs
 *
fs
;

302 
size_t
 
size
;

303 
îr‹
 = 0, 
Êags
, 
upd©e
;

304 
mode_t
 
ac˚ssmode
;

307 i‡(
¨gs
 =
NULL
)

308  
EINVAL
;

309 i‡(*
d©a_Àn
 <  *
¨gs
)

310  
EINVAL
;

312 i‡(
mp
->
m¡_Êag
 & 
MNT_GETARGS
) {

313 
ump
 = 
	`VFSTOUFS
(
mp
);

314 i‡(
ump
 =
NULL
)

315  
EIO
;

316 
	`mem£t
(
¨gs
, 0,  *args);

317 
¨gs
->
f•ec
 = 
NULL
;

318 *
d©a_Àn
 =  *
¨gs
;

322 
upd©e
 = 
mp
->
m¡_Êag
 & 
MNT_UPDATE
;

325 i‡(
¨gs
->
f•ec
 !
NULL
) {

329 
îr‹
 = 
	`«mei_sim∂e_u£r
(
¨gs
->
f•ec
,

330 
NSM_FOLLOW_NOEMULROOT
, &
devvp
);

331 i‡(
îr‹
 != 0)

332  (
îr‹
);

334 i‡(!
upd©e
) {

338 i‡(
devvp
->
v_ty≥
 !
VBLK
)

339 
îr‹
 = 
ENOTBLK
;

340 i‡(
	`bdevsw_lookup
(
devvp
->
v_rdev
Ë=
NULL
)

341 
îr‹
 = 
ENXIO
;

347 
ump
 = 
	`VFSTOUFS
(
mp
);

348 i‡(
devvp
 !
ump
->
um_devvp
) {

349 i‡(
devvp
->
v_rdev
 !
ump
->
um_devvp
->v_rdev)

350 
îr‹
 = 
EINVAL
;

352 
	`vªÀ
(
devvp
);

353 
devvp
 = 
ump
->
um_devvp
;

354 
	`vªf
(
devvp
);

359 i‡(!
upd©e
) {

361  (
EINVAL
);

363 
ump
 = 
	`VFSTOUFS
(
mp
);

364 
devvp
 = 
ump
->
um_devvp
;

365 
	`vªf
(
devvp
);

377 i‡(
îr‹
 == 0) {

378 
ac˚ssmode
 = 
VREAD
;

379 i‡(
upd©e
 ?

380 (
mp
->
m¡_iÊag
 & 
IMNT_WANTRDWR
) != 0 :

381 (
mp
->
m¡_Êag
 & 
MNT_RDONLY
) == 0)

382 
ac˚ssmode
 |
VWRITE
;

383 
	`vn_lock
(
devvp
, 
LK_EXCLUSIVE
 | 
LK_RETRY
);

384 
îr‹
 = 
	`kauth_auth‹ize_sy°em
(
l
->
l_¸ed
, 
KAUTH_SYSTEM_MOUNT
,

385 
KAUTH_REQ_SYSTEM_MOUNT_DEVICE
, 
mp
, 
devvp
,

386 
	`KAUTH_ARG
(
ac˚ssmode
));

387 
	`VOP_UNLOCK
(
devvp
);

390 i‡(
îr‹
) {

391 
	`vªÀ
(
devvp
);

392  (
îr‹
);

397 i‡(!
upd©e
) {

398 
xÊags
;

400 i‡(
mp
->
m¡_Êag
 & 
MNT_RDONLY
)

401 
xÊags
 = 
FREAD
;

403 
xÊags
 = 
FREAD
|
FWRITE
;

407 
	`vn_lock
(
devvp
, 
LK_EXCLUSIVE
 | 
LK_RETRY
);

408 
îr‹
 = 
	`VOP_OPEN
(
devvp
, 
xÊags
, 
FSCRED
);

409 
	`VOP_UNLOCK
(
devvp
);

410 i‡(
îr‹
)

411 
Áû
;

414 
îr‹
 = 
	`ext2fs_mou¡fs
(
devvp
, 
mp
);

417 i‡(
îr‹
) {

418 
	`vn_lock
(
devvp
, 
LK_EXCLUSIVE
 | 
LK_RETRY
);

419 ()
	`VOP_CLOSE
(
devvp
, 
xÊags
, 
NOCRED
);

420 
	`VOP_UNLOCK
(
devvp
);

421 
Áû
;

425 
ump
 = 
	`VFSTOUFS
(
mp
);

426 
fs
 = 
ump
->
um_e2fs
;

427 
	`¥ötf
("löío: %dánd vÆuêo‡fmod %x \n", 
__LINE__
, 
fs
->
e2fs_fmod
 );

441 
	`vªÀ
(
devvp
);

443 
ump
 = 
	`VFSTOUFS
(
mp
);

444 
fs
 = 
ump
->
um_e2fs
;

445 
	`¥ötf
("löío: %dánd vÆuêo‡fmod %x \n", 
__LINE__
, 
fs
->
e2fs_fmod
 );

446 i‡(
fs
->
e2fs_r⁄ly
 =0 && (
mp
->
m¡_Êag
 & 
MNT_RDONLY
)) {

450 
Êags
 = 
WRITECLOSE
;

451 i‡(
mp
->
m¡_Êag
 & 
MNT_FORCE
)

452 
Êags
 |
FORCECLOSE
;

453 
îr‹
 = 
	`ext2fs_Êushfûes
(
mp
, 
Êags
);

454 i‡(
îr‹
 == 0 &&

455 
	`ext2fs_cgupd©e
(
ump
, 
MNT_WAIT
) == 0 &&

456 (
fs
->
e2fs
.
e2fs_°©e
 & 
E2FS_ERRORS
) == 0) {

457 
fs
->
e2fs
.
e2fs_°©e
 = 
E2FS_ISCLEAN
;

458 (Ë
	`ext2fs_sbupd©e
(
ump
, 
MNT_WAIT
);

460 i‡(
îr‹
)

461  (
îr‹
);

462 
fs
->
e2fs_r⁄ly
 = 1;

465 i‡(
mp
->
m¡_Êag
 & 
MNT_RELOAD
) {

466 
îr‹
 = 
	`ext2fs_ªlﬂd
(
mp
, 
l
->
l_¸ed
,Ü);

467 i‡(
îr‹
)

468  (
îr‹
);

471 
	`¥ötf
("löío: %dánd vÆuêo‡fmod %x \n", 
__LINE__
, 
fs
->
e2fs_fmod
 );

474 i‡(
fs
->
e2fs_r⁄ly
 && (
mp
->
m¡_iÊag
 & 
IMNT_WANTRDWR
)) {

478 
fs
->
e2fs_r⁄ly
 = 0;

479 i‡(
fs
->
e2fs
.
e2fs_°©e
 =
E2FS_ISCLEAN
)

480 
fs
->
e2fs
.
e2fs_°©e
 = 0;

482 
fs
->
e2fs
.
e2fs_°©e
 = 
E2FS_ERRORS
;

483 
fs
->
e2fs_fmod
 = 1;

485 i‡(
¨gs
->
f•ec
 =
NULL
)

488 
	`¥ötf
("löío: %dánd vÆuêo‡fmod %d \n", 
__LINE__
, 
fs
->
e2fs_fmod
 );

490 
îr‹
 = 
	`£t_°©vfs_öfo
(
∑th
, 
UIO_USERSPACE
, 
¨gs
->
f•ec
,

491 
UIO_USERSPACE
, 
mp
->
m¡_›
->
vfs_«me
, mp, 
l
);

492 (Ë
	`c›y°r
(
mp
->
m¡_°©
.
f_m¡⁄«me
, 
fs
->
e2fs_fsm¡
,

493 (
fs
->
e2fs_fsm¡
Ë- 1, &
size
);

494 
	`mem£t
(
fs
->
e2fs_fsm¡
 + 
size
, 0, (fs->e2fs_fsmnt) - size);

495 i‡(
fs
->
e2fs
.
e2fs_ªv
 > 
E2FS_REV0
) {

496 (Ë
	`c›y°r
(
mp
->
m¡_°©
.
f_m¡⁄«me
, 
fs
->
e2fs
.
e2fs_fsm¡
,

497 (
fs
->
e2fs
.
e2fs_fsm¡
Ë- 1, &
size
);

498 
	`mem£t
(
fs
->
e2fs
.
e2fs_fsm¡
, 0,

499 (
fs
->
e2fs
.
e2fs_fsm¡
Ë- 
size
);

501 
	`¥ötf
("löío: %dánd vÆuêo‡fmod %d \n", 
__LINE__
, 
fs
->
e2fs_fmod
 );

503 i‡(
fs
->
e2fs_fmod
 != 0) {

504 
fs
->
e2fs_fmod
 = 0;

505 i‡(
fs
->
e2fs
.
e2fs_°©e
 == 0)

506 
fs
->
e2fs
.
e2fs_wtime
 = 
time_£c⁄d
;

508 
	`¥ötf
("%s: file systemÑeallyÇot clean;Ölease fsck(8)\n",

509 
mp
->
m¡_°©
.
f_m¡‰om«me
);

510 (Ë
	`ext2fs_cgupd©e
(
ump
, 
MNT_WAIT
);

512  (
îr‹
);

514 
Áû
:

515 
	`vªÀ
(
devvp
);

516  (
îr‹
);

517 
	}
}

533 
	$ext2fs_ªlﬂd
(
mou¡
 *
mp
, 
kauth_¸ed_t
 
¸ed
, 
lwp
 *
l
)

535 
vnode
 *
vp
, *
devvp
;

536 
öode
 *
ù
;

537 
buf
 *
bp
;

538 
m_ext2fs
 *
fs
;

539 
ext2fs
 *
√wfs
;

540 
i
, 
îr‹
;

541 *
˝
;

542 
ufsmou¡
 *
ump
;

543 
vnode_ôî©‹
 *
m¨kî
;

545 i‡((
mp
->
m¡_Êag
 & 
MNT_RDONLY
) == 0)

546  (
EINVAL
);

548 
ump
 = 
	`VFSTOUFS
(
mp
);

552 
devvp
 = 
ump
->
um_devvp
;

553 
	`vn_lock
(
devvp
, 
LK_EXCLUSIVE
 | 
LK_RETRY
);

554 
îr‹
 = 
	`vövÆbuf
(
devvp
, 0, 
¸ed
, 
l
, 0, 0);

555 
	`VOP_UNLOCK
(
devvp
);

556 i‡(
îr‹
)

557 
	`∑nic
("ext2fs_reload: dirty1");

559 
fs
 = 
ump
->
um_e2fs
;

564 
îr‹
 = 
	`bªad
(
devvp
, 
SBLOCK
, 
SBSIZE
, 0, &
bp
);

565 i‡(
îr‹
)

566  
îr‹
;

567 
√wfs
 = (
ext2fs
 *)
bp
->
b_d©a
;

568 
	`e2fs_sblﬂd
(
√wfs
, &
fs
->
e2fs
);

570 
	`bªl£
(
bp
, 0);

572 
îr‹
 = 
	`ext2fs_sbfûl
(
fs
, (
mp
->
m¡_Êag
 & 
MNT_RDONLY
) != 0);

573 i‡(
îr‹
)

574  
îr‹
;

579 
i
 = 0; i < 
fs
->
e2fs_ngdb
; i++) {

580 
îr‹
 = 
	`bªad
(
devvp
 ,

581 
	`EXT2_FSBTODB
(
fs
, fs->
e2fs
.
e2fs_fú°_dblock
 +

582 1 + 
i
),

583 
fs
->
e2fs_bsize
, 0, &
bp
);

584 i‡(
îr‹
) {

585  (
îr‹
);

587 
	`e2fs_cglﬂd
((
ext2_gd
 *)
bp
->
b_d©a
,

588 &
fs
->
e2fs_gd
[
i
 * fs->
e2fs_bsize
 / (
ext2_gd
)],

589 
fs
->
e2fs_bsize
);

590 
	`bªl£
(
bp
, 0);

593 
	`vfs_vnode_ôî©‹_öô
(
mp
, &
m¨kî
);

594 (
vp
 = 
	`vfs_vnode_ôî©‹_√xt
(
m¨kî
, 
NULL
, NULL))) {

598 i‡(
	`vªcy˛e
(
vp
))

603 i‡(
	`vn_lock
(
vp
, 
LK_EXCLUSIVE
)) {

604 
	`vªÀ
(
vp
);

607 i‡(
	`vövÆbuf
(
vp
, 0, 
¸ed
, 
l
, 0, 0))

608 
	`∑nic
("ext2fs_reload: dirty2");

612 
ù
 = 
	`VTOI
(
vp
);

613 
îr‹
 = 
	`bªad
(
devvp
, 
	`EXT2_FSBTODB
(
fs
, 
	`öo_to_fsba
(fs, 
ù
->
i_numbî
)),

614 ()
fs
->
e2fs_bsize
, 0, &
bp
);

615 i‡(
îr‹
) {

616 
	`vput
(
vp
);

619 
˝
 = (*)
bp
->
b_d©a
 +

620 (
	`öo_to_fsbo
(
fs
, 
ù
->
i_numbî
Ë* 
	`EXT2_DINODE_SIZE
(fs));

621 
	`e2fs_ûﬂd
((
ext2fs_döode
 *)
˝
, 
ù
->
i_dö
.
e2fs_dö
);

622 
	`ext2fs_£t_öode_guid
(
ù
);

623 
	`bªl£
(
bp
, 0);

624 
	`vput
(
vp
);

626 
	`vfs_vnode_ôî©‹_de°roy
(
m¨kî
);

627  (
îr‹
);

628 
	}
}

634 
	$ext2fs_mou¡fs
(
vnode
 *
devvp
, 
mou¡
 *
mp
)

637 
lwp
 *
l
 = 
cuæwp
;

638 
ufsmou¡
 *
ump
;

639 
buf
 *
bp
;

640 
ext2fs
 *
fs
;

641 
m_ext2fs
 *
m_fs
;

642 
dev_t
 
dev
;

643 
îr‹
, 
i
, 
r⁄ly
;

644 
kauth_¸ed_t
 
¸ed
;

646 
dev
 = 
devvp
->
v_rdev
;

647 
¸ed
 = 
l
->
l_¸ed
;

650 
	`vn_lock
(
devvp
, 
LK_EXCLUSIVE
 | 
LK_RETRY
);

651 
îr‹
 = 
	`vövÆbuf
(
devvp
, 
V_SAVE
, 
¸ed
, 
l
, 0, 0);

652 
	`VOP_UNLOCK
(
devvp
);

653 i‡(
îr‹
)

654  (
îr‹
);

656 
r⁄ly
 = (
mp
->
m¡_Êag
 & 
MNT_RDONLY
) != 0;

658 
bp
 = 
NULL
;

659 
ump
 = 
NULL
;

662 
îr‹
 = 
	`bªad
(
devvp
, 
SBLOCK
, 
SBSIZE
, 0, &
bp
);

663 i‡(
îr‹
)

664 
out
;

665 
fs
 = (
ext2fs
 *)
bp
->
b_d©a
;

666 
m_fs
 = 
	`kmem_zÆloc
((
m_ext2fs
), 
KM_SLEEP
);

667 
	`e2fs_sblﬂd
(
fs
, &
m_fs
->
e2fs
);

669 
	`bªl£
(
bp
, 0);

670 
bp
 = 
NULL
;

673 
îr‹
 = 
	`ext2fs_sbfûl
(
m_fs
, 
r⁄ly
);

674 i‡(
îr‹
) {

675 
	`kmem_‰ì
(
m_fs
, (
m_ext2fs
));

676 
out
;

678 
m_fs
->
e2fs_r⁄ly
 = 
r⁄ly
;

680 
ump
 = 
	`kmem_zÆloc
((*ump), 
KM_SLEEP
);

681 
ump
->
um_f°y≥
 = 
UFS1
;

682 
ump
->
um_›s
 = &
ext2fs_ufs›s
;

683 
ump
->
um_e2fs
 = 
m_fs
;

685 i‡(
r⁄ly
 == 0) {

686 i‡(
m_fs
->
e2fs
.
e2fs_°©e
 =
E2FS_ISCLEAN
)

687 
m_fs
->
e2fs
.
e2fs_°©e
 = 0;

689 
m_fs
->
e2fs
.
e2fs_°©e
 = 
E2FS_ERRORS
;

690 
m_fs
->
e2fs_fmod
 = 1;

694 
m_fs
->
e2fs_gd
 = 
	`kmem_Æloc
(m_fs->
e2fs_ngdb
 * m_fs->
e2fs_bsize
, 
KM_SLEEP
);

695 
i
 = 0; i < 
m_fs
->
e2fs_ngdb
; i++) {

696 
îr‹
 = 
	`bªad
(
devvp
,

697 
	`EXT2_FSBTODB
(
m_fs
, m_fs->
e2fs
.
e2fs_fú°_dblock
 +

698 1 + 
i
),

699 
m_fs
->
e2fs_bsize
, 0, &
bp
);

700 i‡(
îr‹
) {

701 
	`kmem_‰ì
(
m_fs
->
e2fs_gd
,

702 
m_fs
->
e2fs_ngdb
 * m_fs->
e2fs_bsize
);

703 
out
;

705 
	`e2fs_cglﬂd
((
ext2_gd
 *)
bp
->
b_d©a
,

706 &
m_fs
->
e2fs_gd
[

707 
i
 * 
m_fs
->
e2fs_bsize
 / (
ext2_gd
)],

708 
m_fs
->
e2fs_bsize
);

709 
	`bªl£
(
bp
, 0);

710 
bp
 = 
NULL
;

713 
mp
->
m¡_d©a
 = 
ump
;

714 
mp
->
m¡_°©
.
f_fsidx
.
__fsid_vÆ
[0] = ()
dev
;

715 
mp
->
m¡_°©
.
f_fsidx
.
__fsid_vÆ
[1] = 
	`makef°y≥
(
MOUNT_EXT2FS
);

716 
mp
->
m¡_°©
.
f_fsid
 = mp->m¡_°©.
f_fsidx
.
__fsid_vÆ
[0];

717 
mp
->
m¡_°©
.
f_«memax
 = 
EXT2FS_MAXNAMLEN
;

718 
mp
->
m¡_Êag
 |
MNT_LOCAL
;

719 
mp
->
m¡_dev_bshi·
 = 
DEV_BSHIFT
;

720 
mp
->
m¡_fs_bshi·
 = 
m_fs
->
e2fs_bshi·
;

721 
mp
->
m¡_iÊag
 |
IMNT_DTYPE
;

722 
ump
->
um_Êags
 = 0;

723 
ump
->
um_mou¡p
 = 
mp
;

724 
ump
->
um_dev
 = 
dev
;

725 
ump
->
um_devvp
 = 
devvp
;

726 
ump
->
um_nödú
 = 
	`EXT2_NINDIR
(
m_fs
);

727 
ump
->
um_lognödú
 = 
	`ffs
(
	`EXT2_NINDIR
(
m_fs
)) - 1;

728 
ump
->
um_b±πodb
 = 
m_fs
->
e2fs_fsbtodb
;

729 
ump
->
um_£qöc
 = 1;

730 
ump
->
um_maxsymlökÀn
 = 
EXT2_MAXSYMLINKLEN
;

731 
ump
->
um_dúblksiz
 = 
m_fs
->
e2fs_bsize
;

732 
ump
->
um_maxfûesize
 = ((
uöt64_t
)0x80000000 * 
m_fs
->
e2fs_bsize
 - 1);

733 
	`•ec_node_£tmou¡edfs
(
devvp
, 
mp
);

736 
out
:

737 i‡(
bp
 !
NULL
)

738 
	`bªl£
(
bp
, 0);

739 i‡(
ump
) {

740 
	`kmem_‰ì
(
ump
->
um_e2fs
, (
m_ext2fs
));

741 
	`kmem_‰ì
(
ump
, (*ump));

742 
mp
->
m¡_d©a
 = 
NULL
;

744  (
îr‹
);

745 
	}
}

751 
	$ext2fs_unmou¡
(
mou¡
 *
mp
, 
m¡Êags
)

754 
ufsmou¡
 *
ump
;

755 
m_ext2fs
 *
fs
;

756 
îr‹
, 
Êags
;

758 
Êags
 = 0;

759 i‡(
m¡Êags
 & 
MNT_FORCE
)

760 
Êags
 |
FORCECLOSE
;

761 i‡((
îr‹
 = 
	`ext2fs_Êushfûes
(
mp
, 
Êags
)) != 0)

762  (
îr‹
);

763 
ump
 = 
	`VFSTOUFS
(
mp
);

764 
fs
 = 
ump
->
um_e2fs
;

765 i‡(
fs
->
e2fs_r⁄ly
 == 0 &&

766 
	`ext2fs_cgupd©e
(
ump
, 
MNT_WAIT
) == 0 &&

767 (
fs
->
e2fs
.
e2fs_°©e
 & 
E2FS_ERRORS
) == 0) {

768 
fs
->
e2fs
.
e2fs_°©e
 = 
E2FS_ISCLEAN
;

769 (Ë
	`ext2fs_sbupd©e
(
ump
, 
MNT_WAIT
);

771 i‡(
ump
->
um_devvp
->
v_ty≥
 !
VBAD
)

772 
	`•ec_node_£tmou¡edfs
(
ump
->
um_devvp
, 
NULL
);

773 
	`vn_lock
(
ump
->
um_devvp
, 
LK_EXCLUSIVE
 | 
LK_RETRY
);

774 
îr‹
 = 
	`VOP_CLOSE
(
ump
->
um_devvp
, 
fs
->
e2fs_r⁄ly
 ? 
FREAD
 : FREAD|
FWRITE
,

775 
NOCRED
);

776 
	`vput
(
ump
->
um_devvp
);

777 
	`kmem_‰ì
(
fs
->
e2fs_gd
, fs->
e2fs_ngdb
 * fs->
e2fs_bsize
);

778 
	`kmem_‰ì
(
fs
, (*fs));

779 
	`kmem_‰ì
(
ump
, (*ump));

780 
mp
->
m¡_d©a
 = 
NULL
;

781 
mp
->
m¡_Êag
 &~
MNT_LOCAL
;

782  (
îr‹
);

783 
	}
}

789 
	$ext2fs_Êushfûes
(
mou¡
 *
mp
, 
Êags
)

791 
dof‹˚
;

792 
îr‹
;

794 i‡(!
dof‹˚
)

795 
Êags
 &~
FORCECLOSE
;

796 
îr‹
 = 
	`vÊush
(
mp
, 
NULLVP
, 
Êags
);

797  (
îr‹
);

798 
	}
}

804 
	$ext2fs_°©vfs
(
mou¡
 *
mp
, 
°©vfs
 *
sbp
)

806 
ufsmou¡
 *
ump
;

807 
m_ext2fs
 *
fs
;

808 
uöt32_t
 
ovîhód
, 
ovîhód_≥r_group
, 
ngdb
;

809 
i
, 
ngroups
;

811 
ump
 = 
	`VFSTOUFS
(
mp
);

812 
fs
 = 
ump
->
um_e2fs
;

813 i‡(
fs
->
e2fs
.
e2fs_magic
 !
E2FS_MAGIC
)

814 
	`∑nic
("ext2fs_statvfs");

819 
ovîhód_≥r_group
 =

822 
fs
->
e2fs_ôpg
;

823 
ovîhód
 = 
fs
->
e2fs
.
e2fs_fú°_dblock
 +

824 
fs
->
e2fs_ncg
 * 
ovîhód_≥r_group
;

825 i‡(
fs
->
e2fs
.
e2fs_ªv
 > 
E2FS_REV0
 &&

826 
fs
->
e2fs
.
e2fs_„©uªs_rocom∑t
 & 
EXT2F_ROCOMPAT_SPARSESUPER
) {

827 
i
 = 0, 
ngroups
 = 0; i < 
fs
->
e2fs_ncg
; i++) {

828 i‡(
	`cg_has_sb
(
i
))

829 
ngroups
++;

832 
ngroups
 = 
fs
->
e2fs_ncg
;

834 
ngdb
 = 
fs
->
e2fs_ngdb
;

835 i‡(
fs
->
e2fs
.
e2fs_ªv
 > 
E2FS_REV0
 &&

836 
fs
->
e2fs
.
e2fs_„©uªs_com∑t
 & 
EXT2F_COMPAT_RESIZE
)

837 
ngdb
 +
fs
->
e2fs
.
e2fs_ª£rved_ngdb
;

838 
ovîhód
 +
ngroups
 * (1 + 
ngdb
);

840 
sbp
->
f_bsize
 = 
fs
->
e2fs_bsize
;

841 
sbp
->
f_‰size
 = 
MINBSIZE
 << 
fs
->
e2fs
.
e2fs_fsize
;

842 
sbp
->
f_iosize
 = 
fs
->
e2fs_bsize
;

843 
sbp
->
f_blocks
 = 
fs
->
e2fs
.
e2fs_bcou¡
 - 
ovîhód
;

844 
sbp
->
f_b‰ì
 = 
fs
->
e2fs
.
e2fs_fbcou¡
;

845 
sbp
->
f_bªsvd
 = 
fs
->
e2fs
.
e2fs_rbcou¡
;

846 i‡(
sbp
->
f_b‰ì
 > sbp->
f_bªsvd
)

847 
sbp
->
f_bavaû
 = sbp->
f_b‰ì
 - sbp->
f_bªsvd
;

849 
sbp
->
f_bavaû
 = 0;

850 
sbp
->
f_fûes
 = 
fs
->
e2fs
.
e2fs_icou¡
;

851 
sbp
->
f_f‰ì
 = 
fs
->
e2fs
.
e2fs_ficou¡
;

852 
sbp
->
f_Ávaû
 = 
fs
->
e2fs
.
e2fs_ficou¡
;

853 
sbp
->
f_‰esvd
 = 0;

854 
	`c›y_°©vfs_öfo
(
sbp
, 
mp
);

856 
	}
}

858 
boﬁ


859 
	$ext2fs_sync_£À˘‹
(*
˛
, 
vnode
 *
vp
)

861 
öode
 *
ù
;

863 
ù
 = 
	`VTOI
(
vp
);

867 i‡(
ù
 =
NULL
 || 
vp
->
v_ty≥
 =
VNON
)

868  
Ál£
;

870 i‡(((
ù
->
i_Êag
 &

871 (
IN_CHANGE
 | 
IN_UPDATE
 | 
IN_MODIFIED
)) == 0 &&

872 
	`LIST_EMPTY
(&
vp
->
v_dútyblkhd
) &&

873 
	`UVM_OBJ_IS_CLEAN
(&
vp
->
v_uobj
)))

874  
Ál£
;

875  
åue
;

876 
	}
}

886 
	$ext2fs_sync
(
mou¡
 *
mp
, 
waôf‹
, 
kauth_¸ed_t
 
¸ed
)

888 
vnode
 *
vp
;

889 
ufsmou¡
 *
ump
 = 
	`VFSTOUFS
(
mp
);

890 
m_ext2fs
 *
fs
;

891 
vnode_ôî©‹
 *
m¨kî
;

892 
îr‹
, 
ÆÀº‹
 = 0;

894 
fs
 = 
ump
->
um_e2fs
;

895 i‡(
fs
->
e2fs_fmod
 !0 && fs->
e2fs_r⁄ly
 != 0) {

896 
	`¥ötf
("f†%s\n", 
fs
->
e2fs_fsm¡
);

897 
	`∑nic
("update:Ñofs mod");

903 
	`vfs_vnode_ôî©‹_öô
(
mp
, &
m¨kî
);

904 (
vp
 = 
	`vfs_vnode_ôî©‹_√xt
(
m¨kî
, 
ext2fs_sync_£À˘‹
,

905 
NULL
)))

907 
îr‹
 = 
	`vn_lock
(
vp
, 
LK_EXCLUSIVE
);

908 i‡(
îr‹
) {

909 
	`vªÀ
(
vp
);

912 i‡(
vp
->
v_ty≥
 =
VREG
 && 
waôf‹
 =
MNT_LAZY
)

913 
îr‹
 = 
	`ext2fs_upd©e
(
vp
, 
NULL
, NULL, 0);

915 
îr‹
 = 
	`VOP_FSYNC
(
vp
, 
¸ed
,

916 
waôf‹
 =
MNT_WAIT
 ? 
FSYNC_WAIT
 : 0, 0, 0);

917 i‡(
îr‹
)

918 
ÆÀº‹
 = 
îr‹
;

919 
	`vput
(
vp
);

921 
	`vfs_vnode_ôî©‹_de°roy
(
m¨kî
);

925 i‡(
waôf‹
 !
MNT_LAZY
) {

926 
	`vn_lock
(
ump
->
um_devvp
, 
LK_EXCLUSIVE
 | 
LK_RETRY
);

927 i‡((
îr‹
 = 
	`VOP_FSYNC
(
ump
->
um_devvp
, 
¸ed
,

928 
waôf‹
 =
MNT_WAIT
 ? 
FSYNC_WAIT
 : 0, 0, 0)) != 0)

929 
ÆÀº‹
 = 
îr‹
;

930 
	`VOP_UNLOCK
(
ump
->
um_devvp
);

935 i‡(
fs
->
e2fs_fmod
 != 0) {

936 
fs
->
e2fs_fmod
 = 0;

937 
fs
->
e2fs
.
e2fs_wtime
 = 
time_£c⁄d
;

938 i‡((
îr‹
 = 
	`ext2fs_cgupd©e
(
ump
, 
waôf‹
)))

939 
ÆÀº‹
 = 
îr‹
;

941  (
ÆÀº‹
);

942 
	}
}

949 
	$ext2fs_lﬂdvnode
(
mou¡
 *
mp
, 
vnode
 *
vp
,

950 c⁄° *
key
, 
size_t
 
key_Àn
, c⁄° **
√w_key
)

952 
öo_t
 
öo
;

953 
m_ext2fs
 *
fs
;

954 
öode
 *
ù
;

955 
ufsmou¡
 *
ump
;

956 
buf
 *
bp
;

957 
dev_t
 
dev
;

958 
îr‹
;

959 *
˝
;

961 
	`KASSERT
(
key_Àn
 =(
öo
));

962 
	`mem˝y
(&
öo
, 
key
, 
key_Àn
);

963 
ump
 = 
	`VFSTOUFS
(
mp
);

964 
dev
 = 
ump
->
um_dev
;

965 
fs
 = 
ump
->
um_e2fs
;

968 
îr‹
 = 
	`bªad
(
ump
->
um_devvp
, 
	`EXT2_FSBTODB
(
fs
, 
	`öo_to_fsba
(fs, 
öo
)),

969 ()
fs
->
e2fs_bsize
, 0, &
bp
);

970 i‡(
îr‹
)

971  
îr‹
;

974 
ù
 = 
	`poﬁ_gë
(&
ext2fs_öode_poﬁ
, 
PR_WAITOK
);

975 
	`mem£t
(
ù
, 0, (
öode
));

976 
vp
->
v_èg
 = 
VT_EXT2FS
;

977 
vp
->
v_›
 = 
ext2fs_vnode›_p
;

978 
vp
->
v_vÊag
 |
VV_LOCKSWORK
;

979 
vp
->
v_d©a
 = 
ù
;

980 
ù
->
i_vnode
 = 
vp
;

981 
ù
->
i_ump
 = 
ump
;

982 
ù
->
i_e2fs
 = 
fs
;

983 
ù
->
i_dev
 = 
dev
;

984 
ù
->
i_numbî
 = 
öo
;

985 
ù
->
i_e2fs_œ°_lblk
 = 0;

986 
ù
->
i_e2fs_œ°_blk
 = 0;

989 
	`gífs_node_öô
(
vp
, &
ext2fs_gífs›s
);

991 
˝
 = (*)
bp
->
b_d©a
 + (
	`öo_to_fsbo
(
fs
, 
öo
Ë* 
	`EXT2_DINODE_SIZE
(fs));

992 
ù
->
i_dö
.
e2fs_dö
 = 
	`poﬁ_gë
(&
ext2fs_döode_poﬁ
, 
PR_WAITOK
);

993 
	`e2fs_ûﬂd
((
ext2fs_döode
 *)
˝
, 
ù
->
i_dö
.
e2fs_dö
);

994 
	`ext2fs_£t_öode_guid
(
ù
);

995 
	`bªl£
(
bp
, 0);

998 i‡(
ù
->
i_e2fs_dtime
 != 0) {

999 
ù
->
i_e2fs_mode
 = 0;

1000 ()
	`ext2fs_£tsize
(
ù
, 0);

1001 ()
	`ext2fs_£äblock
(
ù
, 0);

1002 
	`mem£t
(
ù
->
i_e2fs_blocks
, 0, (ip->i_e2fs_blocks));

1006 
	`ext2fs_vöô
(
mp
, 
ext2fs_•ec›_p
, 
ext2fs_fifo›_p
, &
vp
);

1009 
ù
->
i_devvp
 = 
ump
->
um_devvp
;

1010 
	`vªf
(
ù
->
i_devvp
);

1017 i‡(
ù
->
i_e2fs_gí
 == 0) {

1018 i‡(++
ext2gínumbî
 < (
u_l⁄g
)
time_£c⁄d
)

1019 
ext2gínumbî
 = 
time_£c⁄d
;

1020 
ù
->
i_e2fs_gí
 = 
ext2gínumbî
;

1021 i‡((
mp
->
m¡_Êag
 & 
MNT_RDONLY
) == 0)

1022 
ù
->
i_Êag
 |
IN_MODIFIED
;

1024 
	`uvm_v≈_£tsize
(
vp
, 
	`ext2fs_size
(
ù
));

1025 *
√w_key
 = &
ù
->
i_numbî
;

1027 
	}
}

1038 
	$ext2fs_fhtovp
(
mou¡
 *
mp
, 
fid
 *
fhp
, 
vnode
 **
vµ
)

1040 
	`¥ötf
("I¿fûe: %s, fun: %s,löío: %d\n",
__FILE__
, 
__func__
, 
__LINE__
);

1041 
öode
 *
ù
;

1042 
vnode
 *
nvp
;

1043 
îr‹
;

1044 
ufid
 
ufh
;

1045 
m_ext2fs
 *
fs
;

1047 i‡(
fhp
->
fid_Àn
 !(
ufid
))

1048  
EINVAL
;

1050 
	`mem˝y
(&
ufh
, 
fhp
, (
ufid
));

1051 
fs
 = 
	`VFSTOUFS
(
mp
)->
um_e2fs
;

1052 i‡((
ufh
.
ufid_öo
 < 
EXT2_FIRSTINO
 && ufh.ufid_öÿ!
EXT2_ROOTINO
) ||

1053 
ufh
.
ufid_öo
 >
fs
->
e2fs_ncg
 * fs->
e2fs
.
e2fs_ùg
)

1054  (
ESTALE
);

1056 i‡((
îr‹
 = 
	`VFS_VGET
(
mp
, 
ufh
.
ufid_öo
, &
nvp
)) != 0) {

1057 *
vµ
 = 
NULLVP
;

1058  (
îr‹
);

1060 
ù
 = 
	`VTOI
(
nvp
);

1061 i‡(
ù
->
i_e2fs_mode
 =0 || ip->
i_e2fs_dtime
 != 0 ||

1062 
ù
->
i_e2fs_gí
 !
ufh
.
ufid_gí
) {

1063 
	`vput
(
nvp
);

1064 *
vµ
 = 
NULLVP
;

1065  (
ESTALE
);

1067 *
vµ
 = 
nvp
;

1069 
	}
}

1076 
	$ext2fs_v±ofh
(
vnode
 *
vp
, 
fid
 *
fhp
, 
size_t
 *
fh_size
)

1078 
	`¥ötf
("I¿fûe: %s, fun: %s,löío: %d\n",
__FILE__
, 
__func__
, 
__LINE__
);

1079 
öode
 *
ù
;

1080 
ufid
 
ufh
;

1082 i‡(*
fh_size
 < (
ufid
)) {

1083 *
fh_size
 = (
ufid
);

1084  
E2BIG
;

1086 *
fh_size
 = (
ufid
);

1088 
ù
 = 
	`VTOI
(
vp
);

1089 
	`mem£t
(&
ufh
, 0, (ufh));

1090 
ufh
.
ufid_Àn
 = (
ufid
);

1091 
ufh
.
ufid_öo
 = 
ù
->
i_numbî
;

1092 
ufh
.
ufid_gí
 = 
ù
->
i_e2fs_gí
;

1093 
	`mem˝y
(
fhp
, &
ufh
, (ufh));

1095 
	}
}

1101 
	$ext2fs_sbupd©e
(
ufsmou¡
 *
mp
, 
waôf‹
)

1103 
m_ext2fs
 *
fs
 = 
mp
->
um_e2fs
;

1104 
buf
 *
bp
;

1105 
îr‹
 = 0;

1107 
bp
 = 
	`gëblk
(
mp
->
um_devvp
, 
SBLOCK
, 
SBSIZE
, 0, 0);

1108 
	`e2fs_sbßve
(&
fs
->
e2fs
, (
ext2fs
*)
bp
->
b_d©a
);

1109 i‡(
waôf‹
 =
MNT_WAIT
)

1110 
îr‹
 = 
	`bwrôe
(
bp
);

1112 
	`bawrôe
(
bp
);

1113  (
îr‹
);

1114 
	}
}

1117 
	$ext2fs_cgupd©e
(
ufsmou¡
 *
mp
, 
waôf‹
)

1119 
m_ext2fs
 *
fs
 = 
mp
->
um_e2fs
;

1120 
buf
 *
bp
;

1121 
i
, 
îr‹
 = 0, 
ÆÀº‹
 = 0;

1123 
ÆÀº‹
 = 
	`ext2fs_sbupd©e
(
mp
, 
waôf‹
);

1124 
i
 = 0; i < 
fs
->
e2fs_ngdb
; i++) {

1125 
bp
 = 
	`gëblk
(
mp
->
um_devvp
, 
	`EXT2_FSBTODB
(
fs
,

1126 
fs
->
e2fs
.
e2fs_fú°_dblock
 +

1127 1 + 
i
), 
fs
->
e2fs_bsize
, 0, 0);

1128 
	`e2fs_cgßve
(&
fs
->
e2fs_gd
[

1129 
i
 * 
fs
->
e2fs_bsize
 / (
ext2_gd
)],

1130 (
ext2_gd
 *)
bp
->
b_d©a
, 
fs
->
e2fs_bsize
);

1131 i‡(
waôf‹
 =
MNT_WAIT
)

1132 
îr‹
 = 
	`bwrôe
(
bp
);

1134 
	`bawrôe
(
bp
);

1137 i‡(!
ÆÀº‹
 && 
îr‹
)

1138 
ÆÀº‹
 = 
îr‹
;

1139  (
ÆÀº‹
);

1140 
	}
}

1147 
	$ext2fs_sbfûl
(
m_ext2fs
 *
m_fs
, 
r⁄ly
)

1149 
uöt32_t
 
u32
;

1150 
ext2fs
 *
fs
 = &
m_fs
->
e2fs
;

1155 i‡(
fs
->
e2fs_magic
 !
E2FS_MAGIC
)

1156  
EINVAL
;

1157 i‡(
fs
->
e2fs_ªv
 > 
E2FS_REV1
) {

1158 
	`¥ötf
("ext2fs: unsuµ‹ãdÑevisi⁄Çumbî: %x\n", 
fs
->
e2fs_ªv
);

1159  
EINVAL
;

1161 i‡(
fs
->
e2fs_log_bsize
 > 2) {

1163 
	`¥ötf
("ext2fs: bad block size: %d\n", 
fs
->
e2fs_log_bsize
);

1164  
EINVAL
;

1166 i‡(
fs
->
e2fs_bpg
 == 0) {

1167 
	`¥ötf
("ext2fs: zero blocksÖer group\n");

1168  
EINVAL
;

1170 i‡(
fs
->
e2fs_ùg
 == 0) {

1171 
	`¥ötf
("ext2fs: zero inodesÖer group\n");

1172  
EINVAL
;

1175 i‡(
fs
->
e2fs_fú°_dblock
 >fs->
e2fs_bcou¡
) {

1176 
	`¥ötf
("ext2fs: invalid first data block\n");

1177  
EINVAL
;

1179 i‡(
fs
->
e2fs_rbcou¡
 > fs->
e2fs_bcou¡
 ||

1180 
fs
->
e2fs_fbcou¡
 > fs->
e2fs_bcou¡
) {

1181 
	`¥ötf
("ext2fs: invalid block count\n");

1182  
EINVAL
;

1188 i‡(
fs
->
e2fs_ªv
 > 
E2FS_REV0
) {

1189 
buf
[256];

1190 i‡(
fs
->
e2fs_fú°_öo
 !
EXT2_FIRSTINO
) {

1191 
	`¥ötf
("ext2fs: unsupported first inodeÖosition\n");

1192  
EINVAL
;

1194 
	`¥ötf
("e2fs_„©uªs_öcom∑àvÆue: %x, EXT2F_INCOMPAT_SUPP vÆue: %x \n", 
fs
->
e2fs_„©uªs_öcom∑t
, 
EXT2F_INCOMPAT_SUPP
);

1195 
u32
 = 
fs
->
e2fs_„©uªs_öcom∑t
 & ~(
EXT2F_INCOMPAT_SUPP
);

1196 i‡(
u32
) {

1198 
	`¢¥ötb
(
buf
, (buf), 
EXT2F_INCOMPAT_BITS
, 
u32
);

1199 
	`¥ötf
("ext2fs: unsuµ‹ãd incom∑à„©uªs: %s\n", 
buf
);

1200  
EINVAL
;

1202 
u32
 = 
fs
->
e2fs_„©uªs_rocom∑t
 & ~
EXT2F_ROCOMPAT_SUPP
;

1203 
	`¥ötf
("e2fs_„©uªs_rocom∑àvÆue: %x, EXT2F_ROCOMPAT_SUPP vÆue: %x \n", 
fs
->
e2fs_„©uªs_rocom∑t
, 
EXT2F_ROCOMPAT_SUPP
);

1204 i‡(!
r⁄ly
 && 
u32
) {

1205 
	`¢¥ötb
(
buf
, (buf), 
EXT2F_ROCOMPAT_BITS
, 
u32
);

1206 
	`¥ötf
("ext2fs: unsupportedÑo-incompat features: %s\n",

1207 
buf
);

1210 i‡(
fs
->
e2fs_öode_size
 =0 || !
	`powîof2
(fs->e2fs_inode_size)) {

1211 
	`¥ötf
("ext2fs: bad inode size\n");

1212  
EINVAL
;

1219 
u32
 = 
fs
->
e2fs_bcou¡
 - fs->
e2fs_fú°_dblock
;

1220 
m_fs
->
e2fs_ncg
 = 
	`howm™y
(
u32
, 
fs
->
e2fs_bpg
);

1221 i‡(
m_fs
->
e2fs_ncg
 == 0) {

1222 
	`¥ötf
("ext2fs: invalidÇumber of cylinder groups\n");

1223  
EINVAL
;

1226 
m_fs
->
e2fs_fsbtodb
 = 
fs
->
e2fs_log_bsize
 + 
LOG_MINBSIZE
 - 
DEV_BSHIFT
;

1227 
m_fs
->
e2fs_bsize
 = 
MINBSIZE
 << 
fs
->
e2fs_log_bsize
;

1228 
m_fs
->
e2fs_bshi·
 = 
LOG_MINBSIZE
 + 
fs
->
e2fs_log_bsize
;

1229 
m_fs
->
e2fs_qbmask
 = m_fs->
e2fs_bsize
 - 1;

1230 
m_fs
->
e2fs_bmask
 = ~m_fs->
e2fs_qbmask
;

1232 i‡((
u32
 = 
m_fs
->
e2fs_bsize
 / (
ext2_gd
)) == 0) {

1234 
	`¥ötf
("ext2fs: invalid block size\n");

1235  
EINVAL
;

1237 
m_fs
->
e2fs_ngdb
 = 
	`howm™y
(m_fs->
e2fs_ncg
, 
u32
);

1238 i‡(
m_fs
->
e2fs_ngdb
 == 0) {

1239 
	`¥ötf
("ext2fs: invalidÇumber of group descriptor blocks\n");

1240  
EINVAL
;

1243 i‡(
m_fs
->
e2fs_bsize
 < 
	`EXT2_DINODE_SIZE
(m_fs)) {

1244 
	`¥ötf
("ext2fs: invalid inode size\n");

1245  
EINVAL
;

1247 
m_fs
->
e2fs_ùb
 = m_fs->
e2fs_bsize
 / 
	`EXT2_DINODE_SIZE
(m_fs);

1249 
m_fs
->
e2fs_ôpg
 = 
fs
->
e2fs_ùg
 / m_fs->
e2fs_ùb
;

1252 
	}
}

	@ext2fs_vnops.c

67 
	~<sys/cdefs.h
>

68 
__KERNEL_RCSID
(0, "$NetBSD:Éxt2fs_vnops.c,v 1.117 2015/04/20 23:03:09Ñiastradh Exp $");

70 
	~<sys/∑øm.h
>

71 
	~<sys/sy°m.h
>

72 
	~<sys/ªsour˚v¨.h
>

73 
	~<sys/kî√l.h
>

74 
	~<sys/fûe.h
>

75 
	~<sys/°©.h
>

76 
	~<sys/buf.h
>

77 
	~<sys/¥oc.h
>

78 
	~<sys/mou¡.h
>

79 
	~<sys/«mei.h
>

80 
	~<sys/vnode.h
>

81 
	~<sys/lockf.h
>

82 
	~<sys/poﬁ.h
>

83 
	~<sys/sig«lv¨.h
>

84 
	~<sys/kauth.h
>

86 
	~<miscfs/fifofs/fifo.h
>

87 
	~<miscfs/gífs/gífs.h
>

88 
	~<miscfs/•ecfs/•ecdev.h
>

90 
	~<ufs/ufs/öode.h
>

91 
	~<ufs/ufs/ufs_exã∫.h
>

92 
	~<ufs/ufs/ufsmou¡.h
>

94 
	~<ufs/ext2fs/ext2fs.h
>

95 
	~<ufs/ext2fs/ext2fs_exã∫.h
>

96 
	~<ufs/ext2fs/ext2fs_dú.h
>

98 
¥è˘ive
;

100 
ext2fs_chmod
(
vnode
 *, , 
kauth_¸ed_t
, 
lwp
 *);

101 
ext2fs_chown
(
vnode
 *, 
uid_t
, 
gid_t
, 
kauth_¸ed_t
,

102 
lwp
 *);

104 
	u_qcvt
 {

105 
öt64_t
 
	mqcvt
;

106 
öt32_t
 
	mvÆ
[2];

109 
	#SETHIGH
(
q
, 
h
) { \

110 
_qcvt
 
tmp
; \

111 
tmp
.
qcvt
 = (
q
); \

112 
tmp
.
vÆ
[
_QUAD_HIGHWORD
] = (
h
); \

113 (
q
Ë
tmp
.
qcvt
; \

114 }

	)

115 
	#SETLOW
(
q
, 
l
) { \

116 
_qcvt
 
tmp
; \

117 
tmp
.
qcvt
 = (
q
); \

118 
tmp
.
vÆ
[
_QUAD_LOWWORD
] = (
l
); \

119 (
q
Ë
tmp
.
qcvt
; \

120 }

	)

126 
	$ext2fs_¸óã
(*
v
)

128 
v›_¸óã_v3_¨gs


133  *
≠
 = 
v
;

134 
îr‹
;

136 
îr‹
 =

137 
	`ext2fs_makeöode
(
	`MAKEIMODE
(
≠
->
a_v≠
->
va_ty≥
,áp->a_v≠->
va_mode
),

138 
≠
->
a_dvp
,áp->
a_vµ
,áp->
a_˙p
);

140 i‡(
îr‹
)

141  (
îr‹
);

142 
	`VN_KNOTE
(
≠
->
a_dvp
, 
NOTE_WRITE
);

143 
	`VOP_UNLOCK
(*
≠
->
a_vµ
);

145 
	}
}

152 
	$ext2fs_mknod
(*
v
)

154 
v›_mknod_v3_¨gs


159  *
≠
 = 
v
;

160 
v©å
 *
v≠
 = 
≠
->
a_v≠
;

161 
vnode
 **
vµ
 = 
≠
->
a_vµ
;

162 
öode
 *
ù
;

163 
îr‹
;

164 
mou¡
 *
mp
;

165 
öo_t
 
öo
;

167 i‡((
îr‹
 = 
	`ext2fs_makeöode
(
	`MAKEIMODE
(
v≠
->
va_ty≥
, v≠->
va_mode
),

168 
≠
->
a_dvp
, 
vµ
,áp->
a_˙p
)) != 0)

169  (
îr‹
);

170 
	`VN_KNOTE
(
≠
->
a_dvp
, 
NOTE_WRITE
);

171 
ù
 = 
	`VTOI
(*
vµ
);

172 
mp
 = (*
vµ
)->
v_mou¡
;

173 
öo
 = 
ù
->
i_numbî
;

174 
ù
->
i_Êag
 |
IN_ACCESS
 | 
IN_CHANGE
 | 
IN_UPDATE
;

175 i‡(
v≠
->
va_rdev
 !
VNOVAL
) {

180 
ù
->
i_dö
.
e2fs_dö
->
e2di_rdev
 = 
	`h2fs32
(
v≠
->
va_rdev
);

187 (*
vµ
)->
v_ty≥
 = 
VNON
;

188 
	`VOP_UNLOCK
(*
vµ
);

189 
	`vg⁄e
(*
vµ
);

190 
îr‹
 = 
	`vˇche_gë
(
mp
, &
öo
, (öo), 
vµ
);

191 i‡(
îr‹
 != 0) {

192 *
vµ
 = 
NULL
;

193  (
îr‹
);

196 
	}
}

205 
	$ext2fs_›í
(*
v
)

207 
v›_›í_¨gs


211  *
≠
 = 
v
;

216 i‡((
	`VTOI
(
≠
->
a_vp
)->
i_e2fs_Êags
 & 
EXT2_APPEND
) &&

217 (
≠
->
a_mode
 & (
FWRITE
 | 
O_APPEND
)) == FWRITE)

218  (
EPERM
);

220 
	}
}

223 
	$ext2fs_check_possibÀ
(
vnode
 *
vp
, 
öode
 *
ù
, 
mode_t
 
mode
)

230 i‡(
mode
 & 
VWRITE
) {

231 
vp
->
v_ty≥
) {

232 
VDIR
:

233 
VLNK
:

234 
VREG
:

235 i‡(
vp
->
v_mou¡
->
m¡_Êag
 & 
MNT_RDONLY
)

236  (
EROFS
);

244 i‡((
mode
 & 
VWRITE
Ë&& (
ù
->
i_e2fs_Êags
 & 
EXT2_IMMUTABLE
))

245  (
EPERM
);

248 
	}
}

251 
	$ext2fs_check_≥rmôãd
(
vnode
 *
vp
, 
öode
 *
ù
, 
mode_t
 
mode
,

252 
kauth_¸ed_t
 
¸ed
)

254  
	`kauth_auth‹ize_vnode
(
¸ed
, 
	`KAUTH_ACCESS_ACTION
(
mode
, 
vp
->
v_ty≥
,

255 
ù
->
i_e2fs_mode
 & 
ALLPERMS
), 
vp
, 
NULL
, 
	`gífs_ˇn_ac˚ss
(vp->
v_ty≥
,

256 
ù
->
i_e2fs_mode
 & 
ALLPERMS
, ip->
i_uid
, ip->
i_gid
, 
mode
, 
¸ed
));

257 
	}
}

260 
	$ext2fs_ac˚ss
(*
v
)

262 
v›_ac˚ss_¨gs


266  *
≠
 = 
v
;

267 
vnode
 *
vp
 = 
≠
->
a_vp
;

268 
öode
 *
ù
 = 
	`VTOI
(
vp
);

269 
mode_t
 
mode
 = 
≠
->
a_mode
;

270 
îr‹
;

272 
îr‹
 = 
	`ext2fs_check_possibÀ
(
vp
, 
ù
, 
mode
);

273 i‡(
îr‹
)

274  
îr‹
;

276 
îr‹
 = 
	`ext2fs_check_≥rmôãd
(
vp
, 
ù
, 
mode
, 
≠
->
a_¸ed
);

277  
îr‹
;

278 
	}
}

282 
	$ext2fs_gë©å
(*
v
)

284 
v›_gë©å_¨gs


288  *
≠
 = 
v
;

289 
vnode
 *
vp
 = 
≠
->
a_vp
;

290 
öode
 *
ù
 = 
	`VTOI
(
vp
);

291 
v©å
 *
v≠
 = 
≠
->
a_v≠
;

293 
	`EXT2FS_ITIMES
(
ù
, 
NULL
, NULL, NULL);

297 
v≠
->
va_fsid
 = 
ù
->
i_dev
;

298 
v≠
->
va_fûeid
 = 
ù
->
i_numbî
;

299 
v≠
->
va_mode
 = 
ù
->
i_e2fs_mode
 & 
ALLPERMS
;

300 
v≠
->
va_∆ök
 = 
ù
->
i_e2fs_∆ök
;

301 
v≠
->
va_uid
 = 
ù
->
i_uid
;

302 
v≠
->
va_gid
 = 
ù
->
i_gid
;

303 
v≠
->
va_rdev
 = (
dev_t
)
	`fs2h32
(
ù
->
i_dö
.
e2fs_dö
->
e2di_rdev
);

304 
v≠
->
va_size
 = 
vp
->
v_size
;

305 
v≠
->
va_©ime
.
tv_£c
 = 
ù
->
i_e2fs_©ime
;

306 
v≠
->
va_©ime
.
tv_n£c
 = 0;

307 
v≠
->
va_mtime
.
tv_£c
 = 
ù
->
i_e2fs_mtime
;

308 
v≠
->
va_mtime
.
tv_n£c
 = 0;

309 
v≠
->
va_˘ime
.
tv_£c
 = 
ù
->
i_e2fs_˘ime
;

310 
v≠
->
va_˘ime
.
tv_n£c
 = 0;

311 #ifde‡
EXT2FS_SYSTEM_FLAGS


312 
v≠
->
va_Êags
 = (
ù
->
i_e2fs_Êags
 & 
EXT2_APPEND
Ë? 
SF_APPEND
 : 0;

313 
v≠
->
va_Êags
 |(
ù
->
i_e2fs_Êags
 & 
EXT2_IMMUTABLE
Ë? 
SF_IMMUTABLE
 : 0;

315 
v≠
->
va_Êags
 = (
ù
->
i_e2fs_Êags
 & 
EXT2_APPEND
Ë? 
UF_APPEND
 : 0;

316 
v≠
->
va_Êags
 |(
ù
->
i_e2fs_Êags
 & 
EXT2_IMMUTABLE
Ë? 
UF_IMMUTABLE
 : 0;

318 
v≠
->
va_gí
 = 
ù
->
i_e2fs_gí
;

320 i‡(
vp
->
v_ty≥
 =
VBLK
)

321 
v≠
->
va_blocksize
 = 
BLKDEV_IOSIZE
;

322 i‡(
vp
->
v_ty≥
 =
VCHR
)

323 
v≠
->
va_blocksize
 = 
MAXBSIZE
;

325 
v≠
->
va_blocksize
 = 
vp
->
v_mou¡
->
m¡_°©
.
f_iosize
;

326 
v≠
->
va_byãs
 = 
	`dbtob
(
	`ext2fs_nblock
(
ù
));

327 
v≠
->
va_ty≥
 = 
vp
->
v_ty≥
;

328 
v≠
->
va_fûîev
 = 
ù
->
i_modªv
;

330 
	}
}

336 
	$ext2fs_£èâr
(*
v
)

338 
v›_£èâr_¨gs


342  *
≠
 = 
v
;

343 
v©å
 *
v≠
 = 
≠
->
a_v≠
;

344 
vnode
 *
vp
 = 
≠
->
a_vp
;

345 
öode
 *
ù
 = 
	`VTOI
(
vp
);

346 
kauth_¸ed_t
 
¸ed
 = 
≠
->
a_¸ed
;

347 
lwp
 *
l
 = 
cuæwp
;

348 
îr‹
;

349 
kauth_a˘i⁄_t
 
a˘i⁄
 = 
KAUTH_VNODE_WRITE_FLAGS
;

350 
boﬁ
 
ch™gög_sysÊags
 = 
Ál£
;

355 i‡((
v≠
->
va_ty≥
 !
VNON
Ë|| (v≠->
va_∆ök
 !(
∆ök_t
)
VNOVAL
) ||

356 (
v≠
->
va_fsid
 !
VNOVAL
Ë|| (v≠->
va_fûeid
 != VNOVAL) ||

357 (
v≠
->
va_blocksize
 !
VNOVAL
Ë|| (v≠->
va_rdev
 != VNOVAL) ||

358 (()
v≠
->
va_byãs
 !
VNOVAL
Ë|| (v≠->
va_gí
 != VNOVAL)) {

359  (
EINVAL
);

361 i‡(
v≠
->
va_Êags
 !
VNOVAL
) {

362 i‡(
vp
->
v_mou¡
->
m¡_Êag
 & 
MNT_RDONLY
)

363  (
EROFS
);

371 #ifde‡
EXT2FS_SYSTEM_FLAGS


373 i‡((
v≠
->
va_Êags
 & 
SF_APPEND
) ||

374 (
v≠
->
va_Êags
 & 
SF_IMMUTABLE
)) {

375 
a˘i⁄
 |
KAUTH_VNODE_WRITE_SYSFLAGS
;

376 
ch™gög_sysÊags
 = 
åue
;

380 i‡(
ù
->
i_e2fs_Êags
 & (
EXT2_APPEND
 | 
EXT2_IMMUTABLE
)) {

381 
a˘i⁄
 |
KAUTH_VNODE_HAS_SYSFLAGS
;

385 
îr‹
 = 
	`kauth_auth‹ize_vnode
(
¸ed
, 
a˘i⁄
, 
vp
, 
NULL
,

386 
	`gífs_ˇn_chÊags
(
¸ed
, 
vp
->
v_ty≥
, 
ù
->
i_uid
,

387 
ch™gög_sysÊags
));

388 i‡(
îr‹
)

389  (
îr‹
);

391 #ifde‡
EXT2FS_SYSTEM_FLAGS


392 
ù
->
i_e2fs_Êags
 &~(
EXT2_APPEND
 | 
EXT2_IMMUTABLE
);

393 
ù
->
i_e2fs_Êags
 |=

394 (
v≠
->
va_Êags
 & 
SF_APPEND
Ë? 
EXT2_APPEND
 : 0 |

395 (
v≠
->
va_Êags
 & 
SF_IMMUTABLE
Ë? 
EXT2_IMMUTABLE
 : 0;

397 
ù
->
i_e2fs_Êags
 &~(
EXT2_APPEND
 | 
EXT2_IMMUTABLE
);

398 
ù
->
i_e2fs_Êags
 |=

399 (
v≠
->
va_Êags
 & 
UF_APPEND
Ë? 
EXT2_APPEND
 : 0 |

400 (
v≠
->
va_Êags
 & 
UF_IMMUTABLE
Ë? 
EXT2_IMMUTABLE
 : 0;

402 
ù
->
i_Êag
 |
IN_CHANGE
;

403 i‡(
v≠
->
va_Êags
 & (
IMMUTABLE
 | 
APPEND
))

406 i‡(
ù
->
i_e2fs_Êags
 & (
EXT2_APPEND
 | 
EXT2_IMMUTABLE
))

407  (
EPERM
);

411 i‡(
v≠
->
va_uid
 !(
uid_t
)
VNOVAL
 || v≠->
va_gid
 !(
gid_t
)VNOVAL) {

412 i‡(
vp
->
v_mou¡
->
m¡_Êag
 & 
MNT_RDONLY
)

413  (
EROFS
);

414 
îr‹
 = 
	`ext2fs_chown
(
vp
, 
v≠
->
va_uid
, v≠->
va_gid
, 
¸ed
, 
l
);

415 i‡(
îr‹
)

416  (
îr‹
);

418 i‡(
v≠
->
va_size
 !
VNOVAL
) {

424 
vp
->
v_ty≥
) {

425 
VDIR
:

426  (
EISDIR
);

427 
VLNK
:

428 
VREG
:

429 i‡(
vp
->
v_mou¡
->
m¡_Êag
 & 
MNT_RDONLY
)

430  (
EROFS
);

434 
îr‹
 = 
	`ext2fs_åunˇã
(
vp
, 
v≠
->
va_size
, 0, 
¸ed
);

435 i‡(
îr‹
)

436  (
îr‹
);

438 
ù
 = 
	`VTOI
(
vp
);

439 i‡(
v≠
->
va_©ime
.
tv_£c
 !
VNOVAL
 || v≠->
va_mtime
.tv_sec != VNOVAL) {

440 i‡(
vp
->
v_mou¡
->
m¡_Êag
 & 
MNT_RDONLY
)

441  (
EROFS
);

442 
îr‹
 = 
	`kauth_auth‹ize_vnode
(
¸ed
, 
KAUTH_VNODE_WRITE_TIMES
, 
vp
,

443 
NULL
, 
	`gífs_ˇn_chtimes
(
vp
, 
v≠
->
va_vaÊags
, 
ù
->
i_uid
,

444 
¸ed
));

445 i‡(
îr‹
)

446  (
îr‹
);

447 i‡(
v≠
->
va_©ime
.
tv_£c
 !
VNOVAL
)

448 i‡(!(
vp
->
v_mou¡
->
m¡_Êag
 & 
MNT_NOATIME
))

449 
ù
->
i_Êag
 |
IN_ACCESS
;

450 i‡(
v≠
->
va_mtime
.
tv_£c
 !
VNOVAL
) {

451 
ù
->
i_Êag
 |
IN_CHANGE
 | 
IN_UPDATE
;

452 i‡(
vp
->
v_mou¡
->
m¡_Êag
 & 
MNT_RELATIME
)

453 
ù
->
i_Êag
 |
IN_ACCESS
;

455 
îr‹
 = 
	`ext2fs_upd©e
(
vp
, &
v≠
->
va_©ime
, &v≠->
va_mtime
,

456 
UPDATE_WAIT
);

457 i‡(
îr‹
)

458  (
îr‹
);

460 
îr‹
 = 0;

461 i‡(
v≠
->
va_mode
 !(
mode_t
)
VNOVAL
) {

462 i‡(
vp
->
v_mou¡
->
m¡_Êag
 & 
MNT_RDONLY
)

463  (
EROFS
);

464 
îr‹
 = 
	`ext2fs_chmod
(
vp
, ()
v≠
->
va_mode
, 
¸ed
, 
l
);

466 
	`VN_KNOTE
(
vp
, 
NOTE_ATTRIB
);

467  (
îr‹
);

468 
	}
}

475 
	$ext2fs_chmod
(
vnode
 *
vp
, 
mode
, 
kauth_¸ed_t
 
¸ed
, 
lwp
 *
l
)

477 
öode
 *
ù
 = 
	`VTOI
(
vp
);

478 
îr‹
;

480 
îr‹
 = 
	`kauth_auth‹ize_vnode
(
¸ed
, 
KAUTH_VNODE_WRITE_SECURITY
, 
vp
,

481 
NULL
, 
	`gífs_ˇn_chmod
(
vp
->
v_ty≥
, 
¸ed
, 
ù
->
i_uid
, ip->
i_gid
,

482 
mode
));

483 i‡(
îr‹
)

484  (
îr‹
);

486 
ù
->
i_e2fs_mode
 &~
ALLPERMS
;

487 
ù
->
i_e2fs_mode
 |(
mode
 & 
ALLPERMS
);

488 
ù
->
i_Êag
 |
IN_CHANGE
;

490 
	}
}

497 
	$ext2fs_chown
(
vnode
 *
vp
, 
uid_t
 
uid
, 
gid_t
 
gid
, 
kauth_¸ed_t
 
¸ed
,

498 
lwp
 *
l
)

500 
öode
 *
ù
 = 
	`VTOI
(
vp
);

501 
uid_t
 
ouid
;

502 
gid_t
 
ogid
;

503 
îr‹
;

505 i‡(
uid
 =(
uid_t
)
VNOVAL
)

506 
uid
 = 
ù
->
i_uid
;

507 i‡(
gid
 =(
gid_t
)
VNOVAL
)

508 
gid
 = 
ù
->
i_gid
;

510 
îr‹
 = 
	`kauth_auth‹ize_vnode
(
¸ed
, 
KAUTH_VNODE_CHANGE_OWNERSHIP
, 
vp
,

511 
NULL
, 
	`gífs_ˇn_chown
(
¸ed
, 
ù
->
i_uid
, ip->
i_gid
, 
uid
, 
gid
));

512 i‡(
îr‹
)

513  (
îr‹
);

515 
ogid
 = 
ù
->
i_gid
;

516 
ouid
 = 
ù
->
i_uid
;

518 
ù
->
i_e2fs_gid
 = 
gid
 & 0xffff;

519 
ù
->
i_e2fs_uid
 = 
uid
 & 0xffff;

520 i‡(
ù
->
i_e2fs
->
e2fs
.
e2fs_ªv
 > 
E2FS_REV0
) {

521 
ù
->
i_e2fs_gid_high
 = (
gid
 >> 16) & 0xffff;

522 
ù
->
i_e2fs_uid_high
 = (
uid
 >> 16) & 0xffff;

524 
ù
->
i_e2fs_gid_high
 = 0;

525 
ù
->
i_e2fs_uid_high
 = 0;

527 i‡(
ouid
 !
uid
 || 
ogid
 !
gid
) {

528 
	`ext2fs_£t_öode_guid
(
ù
);

529 
ù
->
i_Êag
 |
IN_CHANGE
;

531 i‡(
ouid
 !
uid
 && (
ù
->
i_e2fs_mode
 & 
ISUID
) &&

532 
	`kauth_auth‹ize_vnode
(
¸ed
, 
KAUTH_VNODE_RETAIN_SUID
,

533 
vp
, 
NULL
, 
EPERM
) != 0)

534 
ù
->
i_e2fs_mode
 &~
ISUID
;

535 i‡(
ogid
 !
gid
 && (
ù
->
i_e2fs_mode
 & 
ISGID
) &&

536 
	`kauth_auth‹ize_vnode
(
¸ed
, 
KAUTH_VNODE_RETAIN_SGID
,

537 
vp
, 
NULL
, 
EPERM
) != 0)

538 
ù
->
i_e2fs_mode
 &~
ISGID
;

540 
	}
}

543 
	$ext2fs_ªmove
(*
v
)

545 
v›_ªmove_¨gs


549  *
≠
 = 
v
;

550 
öode
 *
ù
;

551 
vnode
 *
vp
 = 
≠
->
a_vp
;

552 
vnode
 *
dvp
 = 
≠
->
a_dvp
;

553 
ufs_lookup_ªsu…s
 *
uÃ
;

554 
îr‹
;

557 
uÃ
 = &
	`VTOI
(
dvp
)->
i_¸≠
;

558 
	`UFS_CHECK_CRAPCOUNTER
(
	`VTOI
(
dvp
));

560 
ù
 = 
	`VTOI
(
vp
);

561 i‡(
vp
->
v_ty≥
 =
VDIR
 ||

562 (
ù
->
i_e2fs_Êags
 & (
EXT2_IMMUTABLE
 | 
EXT2_APPEND
)) ||

563 (
	`VTOI
(
dvp
)->
i_e2fs_Êags
 & 
EXT2_APPEND
)) {

564 
îr‹
 = 
EPERM
;

566 
îr‹
 = 
	`ext2fs_dúªmove
(
dvp
, 
uÃ
, 
≠
->
a_˙p
);

567 i‡(
îr‹
 == 0) {

568 
ù
->
i_e2fs_∆ök
--;

569 
ù
->
i_Êag
 |
IN_CHANGE
;

573 
	`VN_KNOTE
(
vp
, 
NOTE_DELETE
);

574 
	`VN_KNOTE
(
dvp
, 
NOTE_WRITE
);

575 i‡(
dvp
 =
vp
)

576 
	`vªÀ
(
vp
);

578 
	`vput
(
vp
);

579 
	`vput
(
dvp
);

580  (
îr‹
);

581 
	}
}

587 
	$ext2fs_lök
(*
v
)

589 
v›_lök_v2_¨gs


593  *
≠
 = 
v
;

594 
vnode
 *
dvp
 = 
≠
->
a_dvp
;

595 
vnode
 *
vp
 = 
≠
->
a_vp
;

596 
comp⁄íäame
 *
˙p
 = 
≠
->
a_˙p
;

597 
öode
 *
ù
;

598 
îr‹
;

599 
ufs_lookup_ªsu…s
 *
uÃ
;

601 
	`KASSERT
(
dvp
 !
vp
);

602 
	`KASSERT
(
vp
->
v_ty≥
 !
VDIR
);

603 
	`KASSERT
(
dvp
->
v_mou¡
 =
vp
->v_mount);

606 
uÃ
 = &
	`VTOI
(
dvp
)->
i_¸≠
;

607 
	`UFS_CHECK_CRAPCOUNTER
(
	`VTOI
(
dvp
));

609 
îr‹
 = 
	`vn_lock
(
vp
, 
LK_EXCLUSIVE
);

610 i‡(
îr‹
) {

611 
	`VOP_ABORTOP
(
dvp
, 
˙p
);

612 
out2
;

614 
ù
 = 
	`VTOI
(
vp
);

615 i‡((
∆ök_t
)
ù
->
i_e2fs_∆ök
 >
LINK_MAX
) {

616 
	`VOP_ABORTOP
(
dvp
, 
˙p
);

617 
îr‹
 = 
EMLINK
;

618 
out1
;

620 i‡(
ù
->
i_e2fs_Êags
 & (
EXT2_IMMUTABLE
 | 
EXT2_APPEND
)) {

621 
	`VOP_ABORTOP
(
dvp
, 
˙p
);

622 
îr‹
 = 
EPERM
;

623 
out1
;

625 
ù
->
i_e2fs_∆ök
++;

626 
ù
->
i_Êag
 |
IN_CHANGE
;

627 
îr‹
 = 
	`ext2fs_upd©e
(
vp
, 
NULL
, NULL, 
UPDATE_WAIT
);

628 i‡(!
îr‹
)

629 
îr‹
 = 
	`ext2fs_dúíãr
(
ù
, 
dvp
, 
uÃ
, 
˙p
);

630 i‡(
îr‹
) {

631 
ù
->
i_e2fs_∆ök
--;

632 
ù
->
i_Êag
 |
IN_CHANGE
;

634 
out1
:

635 
	`VOP_UNLOCK
(
vp
);

636 
out2
:

637 
	`VN_KNOTE
(
vp
, 
NOTE_LINK
);

638 
	`VN_KNOTE
(
dvp
, 
NOTE_WRITE
);

639  (
îr‹
);

640 
	}
}

646 
	$ext2fs_mkdú
(*
v
)

648 
v›_mkdú_v3_¨gs


653  *
≠
 = 
v
;

654 
vnode
 *
dvp
 = 
≠
->
a_dvp
;

655 
v©å
 *
v≠
 = 
≠
->
a_v≠
;

656 
comp⁄íäame
 *
˙p
 = 
≠
->
a_˙p
;

657 
öode
 *
ù
, *
dp
 = 
	`VTOI
(
dvp
);

658 
vnode
 *
tvp
;

659 
ext2fs_dúãm∂©e
 
dúãm∂©e
;

660 
îr‹
, 
dmode
;

661 
ufs_lookup_ªsu…s
 *
uÃ
;

664 
uÃ
 = &
	`VTOI
(
dvp
)->
i_¸≠
;

665 
	`UFS_CHECK_CRAPCOUNTER
(
	`VTOI
(
dvp
));

667 i‡((
∆ök_t
)
dp
->
i_e2fs_∆ök
 >
LINK_MAX
) {

668 
îr‹
 = 
EMLINK
;

669 
out
;

671 
dmode
 = 
v≠
->
va_mode
 & 
ACCESSPERMS
;

672 
dmode
 |
IFDIR
;

678 i‡((
îr‹
 = 
	`ext2fs_vÆloc
(
dvp
, 
dmode
, 
˙p
->
˙_¸ed
, &
tvp
)) != 0)

679 
out
;

680 
ù
 = 
	`VTOI
(
tvp
);

681 
ù
->
i_uid
 = 
	`kauth_¸ed_gëeuid
(
˙p
->
˙_¸ed
);

682 
ù
->
i_e2fs_uid
 = ip->
i_uid
 & 0xffff;

683 
ù
->
i_e2fs_gid
 = 
dp
->i_e2fs_gid;

684 i‡(
ù
->
i_e2fs
->
e2fs
.
e2fs_ªv
 > 
E2FS_REV0
) {

685 
ù
->
i_e2fs_uid_high
 = (ù->
i_uid
 >> 16) & 0xffff;

686 
ù
->
i_e2fs_gid_high
 = 
dp
->i_e2fs_gid_high;

688 
ù
->
i_e2fs_uid_high
 = 0;

689 
ù
->
i_e2fs_gid_high
 = 0;

691 
ù
->
i_gid
 = ip->
i_e2fs_gid
 | (ù->
i_e2fs_gid_high
 << 16);

692 
ù
->
i_Êag
 |
IN_ACCESS
 | 
IN_CHANGE
 | 
IN_UPDATE
;

693 
ù
->
i_e2fs_mode
 = 
dmode
;

694 
tvp
->
v_ty≥
 = 
VDIR
;

695 
ù
->
i_e2fs_∆ök
 = 2;

703 
dp
->
i_e2fs_∆ök
++;

704 
dp
->
i_Êag
 |
IN_CHANGE
;

705 i‡((
îr‹
 = 
	`ext2fs_upd©e
(
dvp
, 
NULL
, NULL, 
UPDATE_DIROP
)) != 0)

706 
bad
;

709 
	`mem£t
(&
dúãm∂©e
, 0, (dirtemplate));

710 
dúãm∂©e
.
dŸ_öo
 = 
	`h2fs32
(
ù
->
i_numbî
);

711 
dúãm∂©e
.
dŸ_ª˛í
 = 
	`h2fs16
(12);

712 
dúãm∂©e
.
dŸ_«mÀn
 = 1;

713 i‡(
ù
->
i_e2fs
->
e2fs
.
e2fs_ªv
 > 
E2FS_REV0
 &&

714 (
ù
->
i_e2fs
->
e2fs
.
e2fs_„©uªs_öcom∑t
 & 
EXT2F_INCOMPAT_FTYPE
)) {

715 
dúãm∂©e
.
dŸ_ty≥
 = 
EXT2_FT_DIR
;

717 
dúãm∂©e
.
dŸ_«me
[0] = '.';

718 
dúãm∂©e
.
dŸdŸ_öo
 = 
	`h2fs32
(
dp
->
i_numbî
);

719 
dúãm∂©e
.
dŸdŸ_ª˛í
 = 
	`h2fs16
(
	`VTOI
(
dvp
)->
i_e2fs
->
e2fs_bsize
 - 12);

720 
dúãm∂©e
.
dŸdŸ_«mÀn
 = 2;

721 i‡(
ù
->
i_e2fs
->
e2fs
.
e2fs_ªv
 > 
E2FS_REV0
 &&

722 (
ù
->
i_e2fs
->
e2fs
.
e2fs_„©uªs_öcom∑t
 & 
EXT2F_INCOMPAT_FTYPE
)) {

723 
dúãm∂©e
.
dŸdŸ_ty≥
 = 
EXT2_FT_DIR
;

725 
dúãm∂©e
.
dŸdŸ_«me
[0] = dirtemplate.dotdot_name[1] = '.';

726 
îr‹
 = 
	`ufs_bufio
(
UIO_WRITE
, 
tvp
, (*)&
dúãm∂©e
,

727  (
dúãm∂©e
), (
off_t
)0, 
IO_NODELOCKED
|
IO_SYNC
,

728 
˙p
->
˙_¸ed
, (
size_t
 *)0, 
NULL
);

729 i‡(
îr‹
) {

730 
dp
->
i_e2fs_∆ök
--;

731 
dp
->
i_Êag
 |
IN_CHANGE
;

732 
bad
;

734 i‡(
	`VTOI
(
dvp
)->
i_e2fs
->
e2fs_bsize
 > dvp->
v_mou¡
->
m¡_°©
.
f_bsize
)

735 
	`∑nic
("ext2fs_mkdir: blksize");

737 
îr‹
 = 
	`ext2fs_£tsize
(
ù
, 
	`VTOI
(
dvp
)->
i_e2fs
->
e2fs_bsize
);

738 i‡(
îr‹
) {

739 
dp
->
i_e2fs_∆ök
--;

740 
dp
->
i_Êag
 |
IN_CHANGE
;

741 
bad
;

743 
ù
->
i_Êag
 |
IN_CHANGE
;

744 
	`uvm_v≈_£tsize
(
tvp
, 
	`ext2fs_size
(
ù
));

748 
îr‹
 = 
	`ext2fs_dúíãr
(
ù
, 
dvp
, 
uÃ
, 
˙p
);

749 i‡(
îr‹
 != 0) {

750 
dp
->
i_e2fs_∆ök
--;

751 
dp
->
i_Êag
 |
IN_CHANGE
;

753 
bad
:

758 i‡(
îr‹
) {

759 
ù
->
i_e2fs_∆ök
 = 0;

760 
ù
->
i_Êag
 |
IN_CHANGE
;

761 
	`vput
(
tvp
);

763 
	`VN_KNOTE
(
dvp
, 
NOTE_WRITE
 | 
NOTE_LINK
);

764 
	`VOP_UNLOCK
(
tvp
);

765 *
≠
->
a_vµ
 = 
tvp
;

767 
out
:

768  (
îr‹
);

769 
	}
}

775 
	$ext2fs_rmdú
(*
v
)

777 
v›_rmdú_¨gs


781  *
≠
 = 
v
;

782 
vnode
 *
vp
 = 
≠
->
a_vp
;

783 
vnode
 *
dvp
 = 
≠
->
a_dvp
;

784 
comp⁄íäame
 *
˙p
 = 
≠
->
a_˙p
;

785 
öode
 *
ù
, *
dp
;

786 
îr‹
;

787 
ufs_lookup_ªsu…s
 *
uÃ
;

789 
ù
 = 
	`VTOI
(
vp
);

790 
dp
 = 
	`VTOI
(
dvp
);

793 
uÃ
 = &
dp
->
i_¸≠
;

794 
	`UFS_CHECK_CRAPCOUNTER
(
dp
);

799 i‡(
dp
 =
ù
) {

800 
	`vªÀ
(
dvp
);

801 
	`vput
(
vp
);

802  (
EINVAL
);

811 
îr‹
 = 0;

812 i‡(
ù
->
i_e2fs_∆ök
 != 2 ||

813 !
	`ext2fs_dúem±y
(
ù
, 
dp
->
i_numbî
, 
˙p
->
˙_¸ed
)) {

814 
îr‹
 = 
ENOTEMPTY
;

815 
out
;

817 i‡((
dp
->
i_e2fs_Êags
 & 
EXT2_APPEND
) ||

818 (
ù
->
i_e2fs_Êags
 & (
EXT2_IMMUTABLE
 | 
EXT2_APPEND
))) {

819 
îr‹
 = 
EPERM
;

820 
out
;

827 
îr‹
 = 
	`ext2fs_dúªmove
(
dvp
, 
uÃ
, 
˙p
);

828 i‡(
îr‹
 != 0)

829 
out
;

830 
dp
->
i_e2fs_∆ök
--;

831 
dp
->
i_Êag
 |
IN_CHANGE
;

832 
	`VN_KNOTE
(
dvp
, 
NOTE_WRITE
 | 
NOTE_LINK
);

833 
	`ˇche_purge
(
dvp
);

834 
	`vput
(
dvp
);

835 
dvp
 = 
NULL
;

847 
ù
->
i_e2fs_∆ök
 -= 2;

848 
îr‹
 = 
	`ext2fs_åunˇã
(
vp
, (
off_t
)0, 
IO_SYNC
, 
˙p
->
˙_¸ed
);

849 
	`ˇche_purge
(
	`ITOV
(
ù
));

850 
out
:

851 
	`VN_KNOTE
(
vp
, 
NOTE_DELETE
);

852 i‡(
dvp
)

853 
	`vput
(
dvp
);

854 
	`vput
(
vp
);

855  (
îr‹
);

856 
	}
}

862 
	$ext2fs_symlök
(*
v
)

864 
v›_symlök_v3_¨gs


870  *
≠
 = 
v
;

871 
vnode
 *
vp
, **
vµ
;

872 
öode
 *
ù
;

873 
Àn
, 
îr‹
;

875 
vµ
 = 
≠
->
a_vµ
;

876 
îr‹
 = 
	`ext2fs_makeöode
(
IFLNK
 | 
≠
->
a_v≠
->
va_mode
,áp->
a_dvp
,

877 
vµ
, 
≠
->
a_˙p
);

878 i‡(
îr‹
)

879  (
îr‹
);

880 
	`VN_KNOTE
(
≠
->
a_dvp
, 
NOTE_WRITE
);

881 
vp
 = *
vµ
;

882 
Àn
 = 
	`°æí
(
≠
->
a_èrgë
);

883 
ù
 = 
	`VTOI
(
vp
);

884 i‡(
Àn
 < 
ù
->
i_ump
->
um_maxsymlökÀn
) {

885 
	`mem˝y
((*)
ù
->
i_dö
.
e2fs_dö
->
e2di_sh‹éök
, 
≠
->
a_èrgë
, 
Àn
);

886 
îr‹
 = 
	`ext2fs_£tsize
(
ù
, 
Àn
);

887 i‡(
îr‹
)

888 
bad
;

889 
ù
->
i_Êag
 |
IN_CHANGE
 | 
IN_UPDATE
;

890 i‡(
vp
->
v_mou¡
->
m¡_Êag
 & 
MNT_RELATIME
)

891 
ù
->
i_Êag
 |
IN_ACCESS
;

892 
	`uvm_v≈_£tsize
(
vp
, 
Àn
);

894 
îr‹
 = 
	`ufs_bufio
(
UIO_WRITE
, 
vp
, 
≠
->
a_èrgë
, 
Àn
, (
off_t
)0,

895 
IO_NODELOCKED
, 
≠
->
a_˙p
->
˙_¸ed
, (
size_t
 *)0, 
NULL
);

896 
bad
:

897 
	`VOP_UNLOCK
(
vp
);

898 i‡(
îr‹
)

899 
	`vªÀ
(
vp
);

900  (
îr‹
);

901 
	}
}

907 
	$ext2fs_ªadlök
(*
v
)

909 
v›_ªadlök_¨gs


913  *
≠
 = 
v
;

914 
vnode
 *
vp
 = 
≠
->
a_vp
;

915 
öode
 *
ù
 = 
	`VTOI
(
vp
);

916 
ufsmou¡
 *
ump
 = 
ù
->
i_ump
;

917 
isize
;

919 
isize
 = 
	`ext2fs_size
(
ù
);

920 i‡(
isize
 < 
ump
->
um_maxsymlökÀn
 ||

921 (
ump
->
um_maxsymlökÀn
 =0 && 
	`ext2fs_nblock
(
ù
) == 0)) {

922 
	`uiomove
((*)
ù
->
i_dö
.
e2fs_dö
->
e2di_sh‹éök
, 
isize
, 
≠
->
a_uio
);

925  (
	`UFS_BUFRD
(
vp
, 
≠
->
a_uio
, 0,áp->
a_¸ed
));

926 
	}
}

932 
	$ext2fs_advlock
(*
v
)

934 
v›_advlock_¨gs


940  *
≠
 = 
v
;

941 
öode
 *
ù
 = 
	`VTOI
(
≠
->
a_vp
);

943  
	`lf_advlock
(
≠
, &
ù
->
i_lockf
, 
	`ext2fs_size
(ip));

944 
	}
}

947 
	$ext2fs_fsync
(*
v
)

949 
v›_fsync_¨gs


956  *
≠
 = 
v
;

957 
vnode
 *
vp
 = 
≠
->
a_vp
;

958 
waô
;

959 
îr‹
;

961 
waô
 = (
≠
->
a_Êags
 & 
FSYNC_WAIT
) != 0;

963 i‡(
vp
->
v_ty≥
 =
VBLK
)

964 
îr‹
 = 
	`•ec_fsync
(
v
);

966 
îr‹
 = 
	`vÊushbuf
(
vp
, 
≠
->
a_Êags
);

967 i‡(
îr‹
 =0 && (
≠
->
a_Êags
 & 
FSYNC_DATAONLY
) == 0)

968 
îr‹
 = 
	`ext2fs_upd©e
(
vp
, 
NULL
, NULL, 
waô
 ? 
UPDATE_WAIT
 : 0);

970 i‡(
îr‹
 =0 && 
≠
->
a_Êags
 & 
FSYNC_CACHE
) {

971 
l
 = 0;

972 
îr‹
 = 
	`VOP_IOCTL
(
	`VTOI
(
vp
)->
i_devvp
, 
DIOCCACHESYNC
, &
l
, 
FWRITE
,

973 
cuæwp
->
l_¸ed
);

976  
îr‹
;

977 
	}
}

984 
ext2fs_vöô
(
mou¡
 *
m¡p
, (**
•ec›s
)(*),

985 (**
fifo›s
)(*), 
vnode
 **
vµ
)

987 
timevÆ
 
tv
;

988 
öode
 *
ù
;

989 
vnode
 *
vp
;

991 
vp
 = *
vµ
;

992 
ù
 = 
	`VTOI
(
vp
);

993 
vp
->
v_ty≥
 = 
	`IFTOVT
(
ù
->
i_e2fs_mode
)) {

994 
VCHR
:

995 
VBLK
:

996 
vp
->
v_›
 = 
•ec›s
;

997 
	`•ec_node_öô
(
vp
, 
	`fs2h32
(
ù
->
i_dö
.
e2fs_dö
->
e2di_rdev
));

999 
VFIFO
:

1000 
vp
->
v_›
 = 
fifo›s
;

1002 
VNON
:

1003 
VBAD
:

1004 
VSOCK
:

1005 
VLNK
:

1006 
VDIR
:

1007 
VREG
:

1010 i‡(
ù
->
i_numbî
 =
UFS_ROOTINO
)

1011 
vp
->
v_vÊag
 |
VV_ROOT
;

1015 
	`gëmi¸ou±ime
(&
tv
);

1016 
	`SETHIGH
(
ù
->
i_modªv
, 
tv
.
tv_£c
);

1017 
	`SETLOW
(
ù
->
i_modªv
, 
tv
.
tv_u£c
 * 4294);

1018 *
vµ
 = 
vp
;

1020 
	}
}

1026 
	$ext2fs_makeöode
(
mode
, 
vnode
 *
dvp
, vnodê**
vµ
,

1027 
comp⁄íäame
 *
˙p
)

1029 
öode
 *
ù
, *
pdú
;

1030 
vnode
 *
tvp
;

1031 
îr‹
;

1032 
ufs_lookup_ªsu…s
 *
uÃ
;

1034 
pdú
 = 
	`VTOI
(
dvp
);

1037 
uÃ
 = &
pdú
->
i_¸≠
;

1038 
	`UFS_CHECK_CRAPCOUNTER
(
pdú
);

1040 *
vµ
 = 
NULL
;

1041 i‡((
mode
 & 
IFMT
) == 0)

1042 
mode
 |
IFREG
;

1044 i‡((
îr‹
 = 
	`ext2fs_vÆloc
(
dvp
, 
mode
, 
˙p
->
˙_¸ed
, &
tvp
)) != 0) {

1045  (
îr‹
);

1047 
ù
 = 
	`VTOI
(
tvp
);

1048 
ù
->
i_uid
 = 
	`kauth_¸ed_gëeuid
(
˙p
->
˙_¸ed
);

1049 
ù
->
i_e2fs_uid
 = ip->
i_uid
 & 0xffff;

1050 
ù
->
i_e2fs_gid
 = 
pdú
->i_e2fs_gid;

1051 i‡(
ù
->
i_e2fs
->
e2fs
.
e2fs_ªv
 > 
E2FS_REV0
) {

1052 
ù
->
i_e2fs_uid_high
 = (ù->
i_uid
 >> 16) & 0xffff;

1053 
ù
->
i_e2fs_gid_high
 = 
pdú
->i_e2fs_gid_high;

1055 
ù
->
i_e2fs_uid_high
 = 0;

1056 
ù
->
i_e2fs_gid_high
 = 0;

1058 
ù
->
i_gid
 = ip->
i_e2fs_gid
 | (ù->
i_e2fs_gid_high
 << 16);

1059 
ù
->
i_Êag
 |
IN_ACCESS
 | 
IN_CHANGE
 | 
IN_UPDATE
;

1060 
ù
->
i_e2fs_mode
 = 
mode
;

1061 
tvp
->
v_ty≥
 = 
	`IFTOVT
(
mode
);

1062 
ù
->
i_e2fs_∆ök
 = 1;

1065 i‡(
ù
->
i_e2fs_mode
 & 
ISGID
) {

1066 
îr‹
 = 
	`kauth_auth‹ize_vnode
(
˙p
->
˙_¸ed
, 
KAUTH_VNODE_WRITE_SECURITY
,

1067 
tvp
, 
NULL
, 
	`gífs_ˇn_chmod
—vp->
v_ty≥
, 
˙p
->
˙_¸ed
, 
ù
->
i_uid
,

1068 
ù
->
i_gid
, 
mode
));

1069 i‡(
îr‹
)

1070 
ù
->
i_e2fs_mode
 &~
ISGID
;

1076 i‡((
îr‹
 = 
	`ext2fs_upd©e
(
tvp
, 
NULL
, NULL, 
UPDATE_WAIT
)) != 0)

1077 
bad
;

1078 
îr‹
 = 
	`ext2fs_dúíãr
(
ù
, 
dvp
, 
uÃ
, 
˙p
);

1079 i‡(
îr‹
 != 0)

1080 
bad
;

1081 *
vµ
 = 
tvp
;

1084 
bad
:

1089 
tvp
->
v_ty≥
 = 
VNON
;

1090 
ù
->
i_e2fs_∆ök
 = 0;

1091 
ù
->
i_Êag
 |
IN_CHANGE
;

1092 
	`vput
(
tvp
);

1093  (
îr‹
);

1094 
	}
}

1100 
	$ext2fs_ª˛aim
(*
v
)

1102 
v›_ª˛aim_¨gs


1104  *
≠
 = 
v
;

1105 
vnode
 *
vp
 = 
≠
->
a_vp
;

1106 
öode
 *
ù
 = 
	`VTOI
(
vp
);

1107 
îr‹
;

1114 i‡(
ù
->
i_omode
 =1 && (
vp
->
v_mou¡
->
m¡_Êag
 & 
MNT_RDONLY
) == 0)

1115 
	`ext2fs_v‰ì
(
vp
, 
ù
->
i_numbî
, ip->
i_e2fs_mode
);

1116 i‡((
îr‹
 = 
	`ufs_ª˛aim
(
vp
)) != 0)

1117  (
îr‹
);

1118 i‡(
ù
->
i_dö
.
e2fs_dö
 !
NULL
)

1119 
	`poﬁ_put
(&
ext2fs_döode_poﬁ
, 
ù
->
i_dö
.
e2fs_dö
);

1120 
	`gífs_node_de°roy
(
vp
);

1121 
	`poﬁ_put
(&
ext2fs_öode_poﬁ
, 
vp
->
v_d©a
);

1122 
vp
->
v_d©a
 = 
NULL
;

1124 
	}
}

1127 (**
ext2fs_vnode›_p
)(*);

1128 c⁄° 
vnode›v_íåy_desc
 
ext2fs_vnode›_íåõs
[] = {

1129 { &
v›_deÁu…_desc
, 
vn_deÁu…_îr‹
 },

1130 { &
v›_lookup_desc
, 
ext2fs_lookup
 },

1131 { &
v›_¸óã_desc
, 
ext2fs_¸óã
 },

1132 { &
v›_mknod_desc
, 
ext2fs_mknod
 },

1133 { &
v›_›í_desc
, 
ext2fs_›í
 },

1134 { &
v›_˛o£_desc
, 
ufs_˛o£
 },

1135 { &
v›_ac˚ss_desc
, 
ext2fs_ac˚ss
 },

1136 { &
v›_gë©å_desc
, 
ext2fs_gë©å
 },

1137 { &
v›_£èâr_desc
, 
ext2fs_£èâr
 },

1138 { &
v›_ªad_desc
, 
ext2fs_ªad
 },

1139 { &
v›_wrôe_desc
, 
ext2fs_wrôe
 },

1140 { &
v›_ÁŒoˇã_desc
, 
gífs_e›nŸsuµ
 },

1141 { &
v›_fdisˇrd_desc
, 
gífs_e›nŸsuµ
 },

1142 { &
v›_io˘l_desc
, 
ufs_io˘l
 },

1143 { &
v›_f˙é_desc
, 
ufs_f˙é
 },

1144 { &
v›_pﬁl_desc
, 
ufs_pﬁl
 },

1145 { &
v›_kqfûãr_desc
, 
gífs_kqfûãr
 },

1146 { &
v›_ªvoke_desc
, 
ufs_ªvoke
 },

1147 { &
v›_mm≠_desc
, 
ufs_mm≠
 },

1148 { &
v›_fsync_desc
, 
ext2fs_fsync
 },

1149 { &
v›_£ek_desc
, 
ufs_£ek
 },

1150 { &
v›_ªmove_desc
, 
ext2fs_ªmove
 },

1151 { &
v›_lök_desc
, 
ext2fs_lök
 },

1152 { &
v›_ª«me_desc
, 
ext2fs_ª«me
 },

1153 { &
v›_mkdú_desc
, 
ext2fs_mkdú
 },

1154 { &
v›_rmdú_desc
, 
ext2fs_rmdú
 },

1155 { &
v›_symlök_desc
, 
ext2fs_symlök
 },

1156 { &
v›_ªaddú_desc
, 
ext2fs_ªaddú
 },

1157 { &
v›_ªadlök_desc
, 
ext2fs_ªadlök
 },

1158 { &
v›_ab‹t›_desc
, 
ufs_ab‹t›
 },

1159 { &
v›_öa˘ive_desc
, 
ext2fs_öa˘ive
 },

1160 { &
v›_ª˛aim_desc
, 
ext2fs_ª˛aim
 },

1161 { &
v›_lock_desc
, 
ufs_lock
 },

1162 { &
v›_u∆ock_desc
, 
ufs_u∆ock
 },

1163 { &
v›_bm≠_desc
, 
ext2fs_bm≠
 },

1164 { &
v›_°øãgy_desc
, 
ufs_°øãgy
 },

1165 { &
v›_¥öt_desc
, 
ufs_¥öt
 },

1166 { &
v›_i¶ocked_desc
, 
ufs_i¶ocked
 },

1167 { &
v›_∑thc⁄f_desc
, 
ufs_∑thc⁄f
 },

1168 { &
v›_advlock_desc
, 
ext2fs_advlock
 },

1169 { &
v›_bwrôe_desc
, 
vn_bwrôe
 },

1170 { &
v›_gë∑ges_desc
, 
gífs_gë∑ges
 },

1171 { &
v›_puçages_desc
, 
gífs_puçages
 },

1172 { 
NULL
, NULL }

1173 
	}
};

1174 c⁄° 
vnode›v_desc
 
	gext2fs_vnode›_›v_desc
 =

1175 { &
ext2fs_vnode›_p
, 
ext2fs_vnode›_íåõs
 };

1177 (**
ext2fs_•ec›_p
)(*);

1178 c⁄° 
vnode›v_íåy_desc
 
ext2fs_•ec›_íåõs
[] = {

1179 { &
v›_deÁu…_desc
, 
vn_deÁu…_îr‹
 },

1180 { &
v›_lookup_desc
, 
•ec_lookup
 },

1181 { &
v›_¸óã_desc
, 
•ec_¸óã
 },

1182 { &
v›_mknod_desc
, 
•ec_mknod
 },

1183 { &
v›_›í_desc
, 
•ec_›í
 },

1184 { &
v›_˛o£_desc
, 
ufs•ec_˛o£
 },

1185 { &
v›_ac˚ss_desc
, 
ext2fs_ac˚ss
 },

1186 { &
v›_gë©å_desc
, 
ext2fs_gë©å
 },

1187 { &
v›_£èâr_desc
, 
ext2fs_£èâr
 },

1188 { &
v›_ªad_desc
, 
ufs•ec_ªad
 },

1189 { &
v›_wrôe_desc
, 
ufs•ec_wrôe
 },

1190 { &
v›_ÁŒoˇã_desc
, 
•ec_ÁŒoˇã
 },

1191 { &
v›_fdisˇrd_desc
, 
•ec_fdisˇrd
 },

1192 { &
v›_io˘l_desc
, 
•ec_io˘l
 },

1193 { &
v›_f˙é_desc
, 
ufs_f˙é
 },

1194 { &
v›_pﬁl_desc
, 
•ec_pﬁl
 },

1195 { &
v›_kqfûãr_desc
, 
•ec_kqfûãr
 },

1196 { &
v›_ªvoke_desc
, 
•ec_ªvoke
 },

1197 { &
v›_mm≠_desc
, 
•ec_mm≠
 },

1198 { &
v›_fsync_desc
, 
ext2fs_fsync
 },

1199 { &
v›_£ek_desc
, 
•ec_£ek
 },

1200 { &
v›_ªmove_desc
, 
•ec_ªmove
 },

1201 { &
v›_lök_desc
, 
•ec_lök
 },

1202 { &
v›_ª«me_desc
, 
•ec_ª«me
 },

1203 { &
v›_mkdú_desc
, 
•ec_mkdú
 },

1204 { &
v›_rmdú_desc
, 
•ec_rmdú
 },

1205 { &
v›_symlök_desc
, 
•ec_symlök
 },

1206 { &
v›_ªaddú_desc
, 
•ec_ªaddú
 },

1207 { &
v›_ªadlök_desc
, 
•ec_ªadlök
 },

1208 { &
v›_ab‹t›_desc
, 
•ec_ab‹t›
 },

1209 { &
v›_öa˘ive_desc
, 
ext2fs_öa˘ive
 },

1210 { &
v›_ª˛aim_desc
, 
ext2fs_ª˛aim
 },

1211 { &
v›_lock_desc
, 
ufs_lock
 },

1212 { &
v›_u∆ock_desc
, 
ufs_u∆ock
 },

1213 { &
v›_bm≠_desc
, 
•ec_bm≠
 },

1214 { &
v›_°øãgy_desc
, 
•ec_°øãgy
 },

1215 { &
v›_¥öt_desc
, 
ufs_¥öt
 },

1216 { &
v›_i¶ocked_desc
, 
ufs_i¶ocked
 },

1217 { &
v›_∑thc⁄f_desc
, 
•ec_∑thc⁄f
 },

1218 { &
v›_advlock_desc
, 
•ec_advlock
 },

1219 { &
v›_bwrôe_desc
, 
vn_bwrôe
 },

1220 { &
v›_gë∑ges_desc
, 
•ec_gë∑ges
 },

1221 { &
v›_puçages_desc
, 
•ec_puçages
 },

1222 { 
NULL
, NULL }

1223 
	}
};

1224 c⁄° 
vnode›v_desc
 
	gext2fs_•ec›_›v_desc
 =

1225 { &
ext2fs_•ec›_p
, 
ext2fs_•ec›_íåõs
 };

1227 (**
ext2fs_fifo›_p
)(*);

1228 c⁄° 
vnode›v_íåy_desc
 
ext2fs_fifo›_íåõs
[] = {

1229 { &
v›_deÁu…_desc
, 
vn_deÁu…_îr‹
 },

1230 { &
v›_lookup_desc
, 
vn_fifo_by∑ss
 },

1231 { &
v›_¸óã_desc
, 
vn_fifo_by∑ss
 },

1232 { &
v›_mknod_desc
, 
vn_fifo_by∑ss
 },

1233 { &
v›_›í_desc
, 
vn_fifo_by∑ss
 },

1234 { &
v›_˛o£_desc
, 
ufsfifo_˛o£
 },

1235 { &
v›_ac˚ss_desc
, 
ext2fs_ac˚ss
 },

1236 { &
v›_gë©å_desc
, 
ext2fs_gë©å
 },

1237 { &
v›_£èâr_desc
, 
ext2fs_£èâr
 },

1238 { &
v›_ªad_desc
, 
ufsfifo_ªad
 },

1239 { &
v›_wrôe_desc
, 
ufsfifo_wrôe
 },

1240 { &
v›_ÁŒoˇã_desc
, 
vn_fifo_by∑ss
 },

1241 { &
v›_fdisˇrd_desc
, 
vn_fifo_by∑ss
 },

1242 { &
v›_io˘l_desc
, 
vn_fifo_by∑ss
 },

1243 { &
v›_f˙é_desc
, 
ufs_f˙é
 },

1244 { &
v›_pﬁl_desc
, 
vn_fifo_by∑ss
 },

1245 { &
v›_kqfûãr_desc
, 
vn_fifo_by∑ss
 },

1246 { &
v›_ªvoke_desc
, 
vn_fifo_by∑ss
 },

1247 { &
v›_mm≠_desc
, 
vn_fifo_by∑ss
 },

1248 { &
v›_fsync_desc
, 
ext2fs_fsync
 },

1249 { &
v›_£ek_desc
, 
vn_fifo_by∑ss
 },

1250 { &
v›_ªmove_desc
, 
vn_fifo_by∑ss
 },

1251 { &
v›_lök_desc
, 
vn_fifo_by∑ss
 },

1252 { &
v›_ª«me_desc
, 
vn_fifo_by∑ss
 },

1253 { &
v›_mkdú_desc
, 
vn_fifo_by∑ss
 },

1254 { &
v›_rmdú_desc
, 
vn_fifo_by∑ss
 },

1255 { &
v›_symlök_desc
, 
vn_fifo_by∑ss
 },

1256 { &
v›_ªaddú_desc
, 
vn_fifo_by∑ss
 },

1257 { &
v›_ªadlök_desc
, 
vn_fifo_by∑ss
 },

1258 { &
v›_ab‹t›_desc
, 
vn_fifo_by∑ss
 },

1259 { &
v›_öa˘ive_desc
, 
ext2fs_öa˘ive
 },

1260 { &
v›_ª˛aim_desc
, 
ext2fs_ª˛aim
 },

1261 { &
v›_lock_desc
, 
ufs_lock
 },

1262 { &
v›_u∆ock_desc
, 
ufs_u∆ock
 },

1263 { &
v›_bm≠_desc
, 
vn_fifo_by∑ss
 },

1264 { &
v›_°øãgy_desc
, 
vn_fifo_by∑ss
 },

1265 { &
v›_¥öt_desc
, 
ufs_¥öt
 },

1266 { &
v›_i¶ocked_desc
, 
ufs_i¶ocked
 },

1267 { &
v›_∑thc⁄f_desc
, 
vn_fifo_by∑ss
 },

1268 { &
v›_advlock_desc
, 
vn_fifo_by∑ss
 },

1269 { &
v›_bwrôe_desc
, 
vn_bwrôe
 },

1270 { &
v›_puçages_desc
, 
vn_fifo_by∑ss
 },

1271 { 
NULL
, NULL }

1272 
	}
};

1273 c⁄° 
vnode›v_desc
 
	gext2fs_fifo›_›v_desc
 =

1274 { &
ext2fs_fifo›_p
, 
ext2fs_fifo›_íåõs
 };

	@/usr/include/string.h

22 #i‚def 
_STRING_H


23 
	#_STRING_H
 1

	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


30 
	#__√ed_size_t


	)

31 
	#__√ed_NULL


	)

32 
	~<°ddef.h
>

35 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

36 
	#__CORRECT_ISO_CPP_STRING_H_PROTO


	)

40 
__BEGIN_NAMESPACE_STD


42 *
	$mem˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

43 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

46 *
	$memmove
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
)

47 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

48 
__END_NAMESPACE_STD


53 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


54 *
	$memc˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

55 
__c
, 
size_t
 
__n
)

56 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

60 
__BEGIN_NAMESPACE_STD


62 *
	$mem£t
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

65 
	$memcmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

66 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

69 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


72 *
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

73 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

74 c⁄° *
	`memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

75 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

77 #ifde‡
__OPTIMIZE__


78 
__exã∫_Æways_ölöe
 *

79 
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


81  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

84 
__exã∫_Æways_ölöe
 const *

85 
	`memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


87  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

90 
	}
}

92 *
	$memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

93 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

95 
__END_NAMESPACE_STD


97 #ifde‡
__USE_GNU


100 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


101 "C++" *
	$øwmemchr
 (*
__s
, 
__c
)

102 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

103 "C++" c⁄° *
	$øwmemchr
 (c⁄° *
__s
, 
__c
)

104 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

106 *
	$øwmemchr
 (c⁄° *
__s
, 
__c
)

107 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

111 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


112 "C++" *
	$memrchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

113 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

114 "C++" c⁄° *
	$memrchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

115 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

117 *
	$memrchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

118 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

123 
__BEGIN_NAMESPACE_STD


125 *
	$°r˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

126 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

128 *
	$°∫˝y
 (*
__ª°ri˘
 
__de°
,

129 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

130 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

133 *
	$°rˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

134 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

136 *
	$°∫ˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

137 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

140 
	$°rcmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

141 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

143 
	$°∫cmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

144 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

147 
	$°rcﬁl
 (c⁄° *
__s1
, c⁄° *
__s2
)

148 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

150 
size_t
 
	$°rx‰m
 (*
__ª°ri˘
 
__de°
,

151 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

152 
__THROW
 
	`__n⁄nuŒ
 ((2));

153 
__END_NAMESPACE_STD


155 #ifde‡
__USE_XOPEN2K8


159 
	~<xloˇÀ.h
>

162 
	$°rcﬁl_l
 (c⁄° *
__s1
, c⁄° *
__s2
, 
__loˇÀ_t
 
__l
)

163 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

165 
size_t
 
	$°rx‰m_l
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
,

166 
__loˇÀ_t
 
__l
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

169 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


171 *
	$°rdup
 (c⁄° *
__s
)

172 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

178 #i‡
deföed
 
__USE_XOPEN2K8


179 *
	$°∫dup
 (c⁄° *
__°rög
, 
size_t
 
__n
)

180 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

183 #i‡
deföed
 
__USE_GNU
 && deföed 
__GNUC__


185 
	#°rdu∑
(
s
) \

186 (
__exãnsi⁄__
 \

188 c⁄° *
__ﬁd
 = (
s
); \

189 
size_t
 
__Àn
 = 
	`°æí
 (
__ﬁd
) + 1; \

190 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
); \

191 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

192 
	}
}))

	)

195 
	#°∫du∑
(
s
, 
n
) \

196 (
__exãnsi⁄__
 \

198 c⁄° *
__ﬁd
 = (
s
); \

199 
size_t
 
__Àn
 = 
	`°∫Àn
 (
__ﬁd
, (
n
)); \

200 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
 + 1); \

201 
__√w
[
__Àn
] = '\0'; \

202 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

203 }))

	)

206 
	g__BEGIN_NAMESPACE_STD


208 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


211 *
°rchr
 (*
__s
, 
__c
)

212 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

213 c⁄° *
°rchr
 (c⁄° *
__s
, 
__c
)

214 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

216 #ifde‡
__OPTIMIZE__


217 
__exã∫_Æways_ölöe
 *

218 
°rchr
 (*
__s
, 
__c
Ë
	g__THROW


220  
__buûtö_°rchr
 (
__s
, 
__c
);

223 
__exã∫_Æways_ölöe
 const *

224 
°rchr
 (c⁄° *
__s
, 
__c
Ë
	g__THROW


226  
__buûtö_°rchr
 (
__s
, 
__c
);

231 *
	$°rchr
 (c⁄° *
__s
, 
__c
)

232 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

235 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


238 *
	`°ºchr
 (*
__s
, 
__c
)

239 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

240 c⁄° *
	`°ºchr
 (c⁄° *
__s
, 
__c
)

241 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

243 #ifde‡
__OPTIMIZE__


244 
__exã∫_Æways_ölöe
 *

245 
	`°ºchr
 (*
__s
, 
__c
Ë
__THROW


247  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

250 
__exã∫_Æways_ölöe
 const *

251 
	`°ºchr
 (c⁄° *
__s
, 
__c
Ë
__THROW


253  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

256 
	}
}

258 *
	$°ºchr
 (c⁄° *
__s
, 
__c
)

259 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

261 
__END_NAMESPACE_STD


263 #ifde‡
__USE_GNU


266 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


267 "C++" *
	$°rch∫ul
 (*
__s
, 
__c
)

268 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

269 "C++" c⁄° *
	$°rch∫ul
 (c⁄° *
__s
, 
__c
)

270 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

272 *
	$°rch∫ul
 (c⁄° *
__s
, 
__c
)

273 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

277 
__BEGIN_NAMESPACE_STD


280 
size_t
 
	$°rc•n
 (c⁄° *
__s
, c⁄° *
__ªje˘
)

281 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

284 
size_t
 
	$°r•n
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

285 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

287 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


290 *
	`°Ωbrk
 (*
__s
, c⁄° *
__ac˚±
)

291 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

292 c⁄° *
	`°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

293 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

295 #ifde‡
__OPTIMIZE__


296 
__exã∫_Æways_ölöe
 *

297 
	`°Ωbrk
 (*
__s
, c⁄° *
__ac˚±
Ë
__THROW


299  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

302 
__exã∫_Æways_ölöe
 const *

303 
	`°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
Ë
__THROW


305  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

308 
	}
}

310 *
	$°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

311 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

314 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


317 *
	`°r°r
 (*
__hay°ack
, c⁄° *
__√edÀ
)

318 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

319 c⁄° *
	`°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

320 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

322 #ifde‡
__OPTIMIZE__


323 
__exã∫_Æways_ölöe
 *

324 
	`°r°r
 (*
__hay°ack
, c⁄° *
__√edÀ
Ë
__THROW


326  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

329 
__exã∫_Æways_ölöe
 const *

330 
	`°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
Ë
__THROW


332  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

335 
	}
}

337 *
	$°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

338 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

343 *
	$°πok
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__dñim
)

344 
__THROW
 
	`__n⁄nuŒ
 ((2));

345 
__END_NAMESPACE_STD


349 *
	$__°πok_r
 (*
__ª°ri˘
 
__s
,

350 c⁄° *
__ª°ri˘
 
__dñim
,

351 **
__ª°ri˘
 
__ßve_±r
)

352 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

353 #ifde‡
__USE_POSIX


354 *
	$°πok_r
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__dñim
,

355 **
__ª°ri˘
 
__ßve_±r
)

356 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

359 #ifde‡
__USE_GNU


361 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


362 "C++" *
	$°rˇ£°r
 (*
__hay°ack
, c⁄° *
__√edÀ
)

363 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

364 "C++" c⁄° *
	$°rˇ£°r
 (c⁄° *
__hay°ack
,

365 c⁄° *
__√edÀ
)

366 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

368 *
	$°rˇ£°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

369 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

373 #ifde‡
__USE_GNU


377 *
	$memmem
 (c⁄° *
__hay°ack
, 
size_t
 
__hay°ackÀn
,

378 c⁄° *
__√edÀ
, 
size_t
 
__√edÀÀn
)

379 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 3));

383 *
	$__memp˝y
 (*
__ª°ri˘
 
__de°
,

384 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

385 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

386 *
	$memp˝y
 (*
__ª°ri˘
 
__de°
,

387 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

388 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

392 
__BEGIN_NAMESPACE_STD


394 
size_t
 
	$°æí
 (c⁄° *
__s
)

395 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

396 
__END_NAMESPACE_STD


398 #ifdef 
__USE_XOPEN2K8


401 
size_t
 
	$°∫Àn
 (c⁄° *
__°rög
, 
size_t
 
__maxÀn
)

402 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

406 
__BEGIN_NAMESPACE_STD


408 *
	$°ªº‹
 (
__î∫um
Ë
__THROW
;

409 
__END_NAMESPACE_STD


410 #ifde‡
__USE_XOPEN2K


418 #i‡
deföed
 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


421 #ifde‡
__REDIRECT_NTH


422 
	`__REDIRECT_NTH
 (
°ªº‹_r
,

423 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
),

424 
__xpg_°ªº‹_r
Ë
	`__n⁄nuŒ
 ((2));

426 
	$__xpg_°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

427 
__THROW
 
	`__n⁄nuŒ
 ((2));

428 
	#°ªº‹_r
 
__xpg_°ªº‹_r


	)

433 *
	$°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

434 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

438 #ifde‡
__USE_XOPEN2K8


440 *
	$°ªº‹_l
 (
__î∫um
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

446 
	$__bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

448 #ifde‡
__USE_MISC


450 
	$bc›y
 (c⁄° *
__§c
, *
__de°
, 
size_t
 
__n
)

451 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

454 
	$bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

457 
	$bcmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

458 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

461 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


464 *
	`ödex
 (*
__s
, 
__c
)

465 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

466 c⁄° *
	`ödex
 (c⁄° *
__s
, 
__c
)

467 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

469 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRINGS_H_PROTO


470 
__exã∫_Æways_ölöe
 *

471 
	`ödex
 (*
__s
, 
__c
Ë
__THROW


473  
	`__buûtö_ödex
 (
__s
, 
__c
);

476 
__exã∫_Æways_ölöe
 const *

477 
	`ödex
 (c⁄° *
__s
, 
__c
Ë
__THROW


479  
	`__buûtö_ödex
 (
__s
, 
__c
);

482 
	}
}

484 *
	$ödex
 (c⁄° *
__s
, 
__c
)

485 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

489 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


492 *
	`rödex
 (*
__s
, 
__c
)

493 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

494 c⁄° *
	`rödex
 (c⁄° *
__s
, 
__c
)

495 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

497 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRINGS_H_PROTO


498 
__exã∫_Æways_ölöe
 *

499 
	`rödex
 (*
__s
, 
__c
Ë
__THROW


501  
	`__buûtö_rödex
 (
__s
, 
__c
);

504 
__exã∫_Æways_ölöe
 const *

505 
	`rödex
 (c⁄° *
__s
, 
__c
Ë
__THROW


507  
	`__buûtö_rödex
 (
__s
, 
__c
);

510 
	}
}

512 *
	$rödex
 (c⁄° *
__s
, 
__c
)

513 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

518 
	$ffs
 (
__i
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

522 #ifdef 
__USE_GNU


523 
	$ff¶
 (
__l
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

524 
__exãnsi⁄__
 
	$ff¶l
 (
__Œ
)

525 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

529 
	$°rˇ£cmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

530 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

533 
	$°∫ˇ£cmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

534 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

537 #ifdef 
__USE_GNU


540 
	$°rˇ£cmp_l
 (c⁄° *
__s1
, c⁄° *
__s2
,

541 
__loˇÀ_t
 
__loc
)

542 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

544 
	$°∫ˇ£cmp_l
 (c⁄° *
__s1
, c⁄° *
__s2
,

545 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
)

546 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 4));

549 #ifdef 
__USE_MISC


552 *
	$°r£p
 (**
__ª°ri˘
 
__°rögp
,

553 c⁄° *
__ª°ri˘
 
__dñim
)

554 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

557 #ifdef 
__USE_XOPEN2K8


559 *
	$°rsig«l
 (
__sig
Ë
__THROW
;

562 *
	$__°p˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

563 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

564 *
	$°p˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

565 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

569 *
	$__°≤˝y
 (*
__ª°ri˘
 
__de°
,

570 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

571 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

572 *
	$°≤˝y
 (*
__ª°ri˘
 
__de°
,

573 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

574 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

577 #ifdef 
__USE_GNU


579 
	$°rvîscmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

580 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

583 *
	$°r‰y
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

586 *
	$mem‰ob
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

588 #i‚de‡
ba£«me


593 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


594 "C++" *
	$ba£«me
 (*
__fûíame
)

595 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

596 "C++" c⁄° *
	$ba£«me
 (c⁄° *
__fûíame
)

597 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

599 *
	$ba£«me
 (c⁄° *
__fûíame
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

605 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

606 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__OPTIMIZE_SIZE__
 \

607 && !
deföed
 
__NO_INLINE__
 && !deföed 
__˝lu•lus


627 
	~<bôs/°rög.h
>

630 
	~<bôs/°rög2.h
>

633 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


635 
	~<bôs/°rög3.h
>

639 #i‡
deföed
 
__USE_GNU
 && deföed 
__OPTIMIZE__
 \

640 && 
deföed
 
__exã∫_Æways_ölöe
 && 
	$__GNUC_PREREQ
 (3,2)

641 #i‡!
deföed
 
_FORCE_INLINES
 && !deföed 
_HAVE_STRING_ARCH_memp˝y


643 #unde‡
memp˝y


644 #unde‡
__memp˝y


645 
	#memp˝y
(
de°
, 
§c
, 
n
Ë
	`__memp˝y_ölöe
 (de°, src,Ç)

	)

646 
	#__memp˝y
(
de°
, 
§c
, 
n
Ë
	`__memp˝y_ölöe
 (de°, src,Ç)

	)

648 
__exã∫_Æways_ölöe
 *

649 
	$__memp˝y_ölöe
 (*
__ª°ri˘
 
__de°
,

650 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

652  (*Ë
	`mem˝y
 (
__de°
, 
__§c
, 
__n
) + __n;

653 
	}
}

658 
	g__END_DECLS


	@/usr/include/features.h

18 #i‚def 
_FEATURES_H


19 
	#_FEATURES_H
 1

	)

97 #unde‡
__USE_ISOC11


98 #unde‡
__USE_ISOC99


99 #unde‡
__USE_ISOC95


100 #unde‡
__USE_ISOCXX11


101 #unde‡
__USE_POSIX


102 #unde‡
__USE_POSIX2


103 #unde‡
__USE_POSIX199309


104 #unde‡
__USE_POSIX199506


105 #unde‡
__USE_XOPEN


106 #unde‡
__USE_XOPEN_EXTENDED


107 #unde‡
__USE_UNIX98


108 #unde‡
__USE_XOPEN2K


109 #unde‡
__USE_XOPEN2KXSI


110 #unde‡
__USE_XOPEN2K8


111 #unde‡
__USE_XOPEN2K8XSI


112 #unde‡
__USE_LARGEFILE


113 #unde‡
__USE_LARGEFILE64


114 #unde‡
__USE_FILE_OFFSET64


115 #unde‡
__USE_MISC


116 #unde‡
__USE_ATFILE


117 #unde‡
__USE_GNU


118 #unde‡
__USE_REENTRANT


119 #unde‡
__USE_FORTIFY_LEVEL


120 #unde‡
__KERNEL_STRICT_NAMES


124 #i‚de‡
_LOOSE_KERNEL_NAMES


125 
	#__KERNEL_STRICT_NAMES


	)

135 #i‡
deföed
 
__GNUC__
 && deföed 
__GNUC_MINOR__


136 
	#__GNUC_PREREQ
(
maj
, 
mö
) \

137 ((
__GNUC__
 << 16Ë+ 
__GNUC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

139 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë0

	)

146 #i‡(
deföed
 
_BSD_SOURCE
 || deföed 
_SVID_SOURCE
) \

147 && !
deföed
 
	g_DEFAULT_SOURCE


152 #unde‡
_DEFAULT_SOURCE


153 
	#_DEFAULT_SOURCE
 1

	)

157 #ifde‡
_GNU_SOURCE


158 #unde‡
_ISOC95_SOURCE


159 
	#_ISOC95_SOURCE
 1

	)

160 #unde‡
_ISOC99_SOURCE


161 
	#_ISOC99_SOURCE
 1

	)

162 #unde‡
_ISOC11_SOURCE


163 
	#_ISOC11_SOURCE
 1

	)

164 #unde‡
_POSIX_SOURCE


165 
	#_POSIX_SOURCE
 1

	)

166 #unde‡
_POSIX_C_SOURCE


167 
	#_POSIX_C_SOURCE
 200809L

	)

168 #unde‡
_XOPEN_SOURCE


169 
	#_XOPEN_SOURCE
 700

	)

170 #unde‡
_XOPEN_SOURCE_EXTENDED


171 
	#_XOPEN_SOURCE_EXTENDED
 1

	)

172 #unde‡
_LARGEFILE64_SOURCE


173 
	#_LARGEFILE64_SOURCE
 1

	)

174 #unde‡
_DEFAULT_SOURCE


175 
	#_DEFAULT_SOURCE
 1

	)

176 #unde‡
_ATFILE_SOURCE


177 
	#_ATFILE_SOURCE
 1

	)

182 #i‡(
deföed
 
_DEFAULT_SOURCE
 \

183 || (!
deföed
 
	g__STRICT_ANSI__
 \

184 && !
deföed
 
	g_ISOC99_SOURCE
 \

185 && !
deföed
 
	g_POSIX_SOURCE
 && !deföed 
	g_POSIX_C_SOURCE
 \

186 && !
deföed
 
	g_XOPEN_SOURCE
))

187 #unde‡
_DEFAULT_SOURCE


188 
	#_DEFAULT_SOURCE
 1

	)

192 #i‡(
deföed
 
_ISOC11_SOURCE
 \

193 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 201112L))

194 
	#__USE_ISOC11
 1

	)

198 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC11_SOURCE
 \

199 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L))

200 
	#__USE_ISOC99
 1

	)

204 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC11_SOURCE
 \

205 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199409L))

206 
	#__USE_ISOC95
 1

	)

213 #i‡((
deföed
 
__˝lu•lus
 && __cplusplus >= 201103L) \

214 || 
deföed
 
__GXX_EXPERIMENTAL_CXX0X__
)

215 
	#__USE_ISOCXX11
 1

	)

221 #ifde‡
_DEFAULT_SOURCE


222 #i‡!
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE


223 
	#__USE_POSIX_IMPLICITLY
 1

	)

225 #unde‡
_POSIX_SOURCE


226 
	#_POSIX_SOURCE
 1

	)

227 #unde‡
_POSIX_C_SOURCE


228 
	#_POSIX_C_SOURCE
 200809L

	)

230 #i‡((!
deföed
 
__STRICT_ANSI__
 \

231 || (
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) >= 500)) \

232 && !
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE
)

233 
	#_POSIX_SOURCE
 1

	)

234 #i‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 500

235 
	#_POSIX_C_SOURCE
 2

	)

236 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 600

237 
	#_POSIX_C_SOURCE
 199506L

	)

238 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 700

239 
	#_POSIX_C_SOURCE
 200112L

	)

241 
	#_POSIX_C_SOURCE
 200809L

	)

243 
	#__USE_POSIX_IMPLICITLY
 1

	)

246 #i‡(
deföed
 
_POSIX_SOURCE
 \

247 || (
deföed
 
_POSIX_C_SOURCE
 && _POSIX_C_SOURCE >= 1) \

248 || 
deföed
 
_XOPEN_SOURCE
)

249 
	#__USE_POSIX
 1

	)

252 #i‡
deföed
 
_POSIX_C_SOURCE
 && _POSIX_C_SOURCE >2 || deföed 
_XOPEN_SOURCE


253 
	#__USE_POSIX2
 1

	)

256 #i‡
deföed
 
_POSIX_C_SOURCE
 && (_POSIX_C_SOURCE - 0) >= 199309L

257 
	#__USE_POSIX199309
 1

	)

260 #i‡
deföed
 
_POSIX_C_SOURCE
 && (_POSIX_C_SOURCE - 0) >= 199506L

261 
	#__USE_POSIX199506
 1

	)

264 #i‡
deföed
 
_POSIX_C_SOURCE
 && (_POSIX_C_SOURCE - 0) >= 200112L

265 
	#__USE_XOPEN2K
 1

	)

266 #unde‡
__USE_ISOC95


267 
	#__USE_ISOC95
 1

	)

268 #unde‡
__USE_ISOC99


269 
	#__USE_ISOC99
 1

	)

272 #i‡
deföed
 
_POSIX_C_SOURCE
 && (_POSIX_C_SOURCE - 0) >= 200809L

273 
	#__USE_XOPEN2K8
 1

	)

274 #unde‡
_ATFILE_SOURCE


275 
	#_ATFILE_SOURCE
 1

	)

278 #ifdef 
_XOPEN_SOURCE


279 
	#__USE_XOPEN
 1

	)

280 #i‡(
_XOPEN_SOURCE
 - 0) >= 500

281 
	#__USE_XOPEN_EXTENDED
 1

	)

282 
	#__USE_UNIX98
 1

	)

283 #unde‡
_LARGEFILE_SOURCE


284 
	#_LARGEFILE_SOURCE
 1

	)

285 #i‡(
_XOPEN_SOURCE
 - 0) >= 600

286 #i‡(
_XOPEN_SOURCE
 - 0) >= 700

287 
	#__USE_XOPEN2K8
 1

	)

288 
	#__USE_XOPEN2K8XSI
 1

	)

290 
	#__USE_XOPEN2K
 1

	)

291 
	#__USE_XOPEN2KXSI
 1

	)

292 #unde‡
__USE_ISOC95


293 
	#__USE_ISOC95
 1

	)

294 #unde‡
__USE_ISOC99


295 
	#__USE_ISOC99
 1

	)

298 #ifde‡
_XOPEN_SOURCE_EXTENDED


299 
	#__USE_XOPEN_EXTENDED
 1

	)

304 #ifde‡
_LARGEFILE_SOURCE


305 
	#__USE_LARGEFILE
 1

	)

308 #ifde‡
_LARGEFILE64_SOURCE


309 
	#__USE_LARGEFILE64
 1

	)

312 #i‡
deföed
 
_FILE_OFFSET_BITS
 && _FILE_OFFSET_BITS == 64

313 
	#__USE_FILE_OFFSET64
 1

	)

316 #i‡
deföed
 
_DEFAULT_SOURCE


317 
	#__USE_MISC
 1

	)

320 #ifdef 
_ATFILE_SOURCE


321 
	#__USE_ATFILE
 1

	)

324 #ifdef 
_GNU_SOURCE


325 
	#__USE_GNU
 1

	)

328 #i‡
deföed
 
_REENTRANT
 || deföed 
_THREAD_SAFE


329 
	#__USE_REENTRANT
 1

	)

332 #i‡
deföed
 
_FORTIFY_SOURCE
 && _FORTIFY_SOURCE > 0 \

333 && 
__GNUC_PREREQ
 (4, 1Ë&& 
deföed
 
	g__OPTIMIZE__
 && __OPTIMIZE__ > 0

334 #i‡
_FORTIFY_SOURCE
 > 1

335 
	#__USE_FORTIFY_LEVEL
 2

	)

337 
	#__USE_FORTIFY_LEVEL
 1

	)

340 
	#__USE_FORTIFY_LEVEL
 0

	)

345 
	~<°dc-¥edef.h
>

353 #unde‡
__GNU_LIBRARY__


354 
	#__GNU_LIBRARY__
 6

	)

358 
	#__GLIBC__
 2

	)

359 
	#__GLIBC_MINOR__
 23

	)

361 
	#__GLIBC_PREREQ
(
maj
, 
mö
) \

362 ((
__GLIBC__
 << 16Ë+ 
__GLIBC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

365 #i‚de‡
__ASSEMBLER__


366 #i‚de‡
_SYS_CDEFS_H


367 
	~<sys/cdefs.h
>

372 #i‡
deföed
 
__USE_FILE_OFFSET64
 && !deföed 
__REDIRECT


373 
	#__USE_LARGEFILE
 1

	)

374 
	#__USE_LARGEFILE64
 1

	)

380 #i‡
__GNUC_PREREQ
 (2, 7Ë&& 
deföed
 
__OPTIMIZE__
 \

381 && !
deföed
 
	g__OPTIMIZE_SIZE__
 && !deföed 
	g__NO_INLINE__
 \

382 && 
deföed
 
	g__exã∫_ölöe


383 
	#__USE_EXTERN_INLINES
 1

	)

391 
	~<gnu/°ubs.h
>

	@/usr/include/xlocale.h

20 #i‚de‡
_XLOCALE_H


21 
	#_XLOCALE_H
 1

	)

27 
	s__loˇÀ_°ru˘


30 
__loˇÀ_d©a
 *
	m__loˇÀs
[13];

33 c⁄° *
	m__˘y≥_b
;

34 c⁄° *
	m__˘y≥_tﬁowî
;

35 c⁄° *
	m__˘y≥_touµî
;

38 c⁄° *
	m__«mes
[13];

39 } *
	t__loˇÀ_t
;

42 
__loˇÀ_t
 
	tloˇÀ_t
;

	@/usr/include/stdc-predef.h

18 #i‚def 
_STDC_PREDEF_H


19 
	#_STDC_PREDEF_H
 1

	)

36 #ifde‡
__GCC_IEC_559


37 #i‡
__GCC_IEC_559
 > 0

38 
	#__STDC_IEC_559__
 1

	)

41 
	#__STDC_IEC_559__
 1

	)

44 #ifde‡
__GCC_IEC_559_COMPLEX


45 #i‡
__GCC_IEC_559_COMPLEX
 > 0

46 
	#__STDC_IEC_559_COMPLEX__
 1

	)

49 
	#__STDC_IEC_559_COMPLEX__
 1

	)

55 
	#__STDC_ISO_10646__
 201505L

	)

58 
	#__STDC_NO_THREADS__
 1

	)

	@
1
.
1
/usr/include
25
413
ext2fs.h
ext2fs_alloc.c
ext2fs_balloc.c
ext2fs_bmap.c
ext2fs_bswap.c
ext2fs_dinode.h
ext2fs_dir.h
ext2fs_extents.c
ext2fs_extents.h
ext2fs_extern.h
ext2fs_hash.c
ext2fs_hash.h
ext2fs_htree.c
ext2fs_htree.h
ext2fs_inode.c
ext2fs_lookup.c
ext2fs_readwrite.c
ext2fs_rename.c
ext2fs_subr.c
ext2fs_vfsops.c
ext2fs_vnops.c
/usr/include/string.h
/usr/include/features.h
/usr/include/xlocale.h
/usr/include/stdc-predef.h
